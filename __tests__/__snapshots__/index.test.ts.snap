// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basic simple: css 1`] = `
"/*! bulma.io v0.9.0 | MIT License | github.com/jgthms/bulma */@-webkit-keyframes spinAround{from{transform:rotate(0)}to{transform:rotate(359deg)}}@keyframes spinAround{from{transform:rotate(0)}to{transform:rotate(359deg)}}.button,.file-cta,.file-name,.input,.pagination-ellipsis,.pagination-link,.pagination-next,.pagination-previous,.select select,.textarea{-moz-appearance:none;-webkit-appearance:none;align-items:center;border:var(--blm-ctrl-bd-width) solid transparent;border-radius:var(--blm-ctrl-radius);box-shadow:none;display:inline-flex;font-size:var(--blm-s-normal);height:var(--blm-ctrl-height);justify-content:flex-start;line-height:var(--blm-ctrl-line-height);padding:var(--blm-ctrl-p-vertical) var(--blm-ctrl-p-horizontal);position:relative;vertical-align:top}.button:active,.button:focus,.file-cta:active,.file-cta:focus,.file-name:active,.file-name:focus,.input:active,.input:focus,.is-active.button,.is-active.file-cta,.is-active.file-name,.is-active.input,.is-active.pagination-ellipsis,.is-active.pagination-link,.is-active.pagination-next,.is-active.pagination-previous,.is-active.textarea,.is-focused.button,.is-focused.file-cta,.is-focused.file-name,.is-focused.input,.is-focused.pagination-ellipsis,.is-focused.pagination-link,.is-focused.pagination-next,.is-focused.pagination-previous,.is-focused.textarea,.pagination-ellipsis:active,.pagination-ellipsis:focus,.pagination-link:active,.pagination-link:focus,.pagination-next:active,.pagination-next:focus,.pagination-previous:active,.pagination-previous:focus,.select select.is-active,.select select.is-focused,.select select:active,.select select:focus,.textarea:active,.textarea:focus{outline:0}.button[disabled],.file-cta[disabled],.file-name[disabled],.input[disabled],.pagination-ellipsis[disabled],.pagination-link[disabled],.pagination-next[disabled],.pagination-previous[disabled],.select fieldset[disabled] select,.select select[disabled],.textarea[disabled],fieldset[disabled] .button,fieldset[disabled] .file-cta,fieldset[disabled] .file-name,fieldset[disabled] .input,fieldset[disabled] .pagination-ellipsis,fieldset[disabled] .pagination-link,fieldset[disabled] .pagination-next,fieldset[disabled] .pagination-previous,fieldset[disabled] .select select,fieldset[disabled] .textarea{cursor:not-allowed}.breadcrumb,.button,.delete,.file,.is-unselectable,.modal-close,.pagination-ellipsis,.pagination-link,.pagination-next,.pagination-previous,.tabs{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.navbar-link:not(.is-arrowless)::after,.select:not(.is-multiple):not(.is-loading)::after{border:3px solid transparent;border-radius:2px;border-right:0;border-top:0;content:\\" \\";display:block;height:.625em;margin-top:-.4375em;pointer-events:none;position:absolute;top:50%;transform:rotate(-45deg);transform-origin:center;width:.625em}.block:not(:last-child),.box:not(:last-child),.breadcrumb:not(:last-child),.content:not(:last-child),.highlight:not(:last-child),.level:not(:last-child),.message:not(:last-child),.notification:not(:last-child),.pagination:not(:last-child),.progress:not(:last-child),.subtitle:not(:last-child),.table-container:not(:last-child),.table:not(:last-child),.tabs:not(:last-child),.title:not(:last-child){margin-bottom:1.5rem}.delete,.modal-close{-moz-appearance:none;-webkit-appearance:none;background-color:hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),calc(var(--blm-sch-inv-a)*.2));border:none;border-radius:var(--blm-radius-rounded);cursor:pointer;pointer-events:auto;display:inline-block;flex-grow:0;flex-shrink:0;font-size:0;height:20px;max-height:20px;max-width:20px;min-height:20px;min-width:20px;outline:0;position:relative;vertical-align:top;width:20px}.delete::after,.delete::before,.modal-close::after,.modal-close::before{background-color:var(--blm-sch-main);content:\\"\\";display:block;left:50%;position:absolute;top:50%;transform:translateX(-50%) translateY(-50%) rotate(45deg);transform-origin:center center}.delete::before,.modal-close::before{height:2px;width:50%}.delete::after,.modal-close::after{height:50%;width:2px}.delete:focus,.delete:hover,.modal-close:focus,.modal-close:hover{background-color:hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),calc(var(--blm-sch-inv-a)*.3))}.delete:active,.modal-close:active{background-color:hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),calc(var(--blm-sch-inv-a)*.4))}.is-small.delete,.is-small.modal-close{height:16px;max-height:16px;max-width:16px;min-height:16px;min-width:16px;width:16px}.is-medium.delete,.is-medium.modal-close{height:24px;max-height:24px;max-width:24px;min-height:24px;min-width:24px;width:24px}.is-large.delete,.is-large.modal-close{height:32px;max-height:32px;max-width:32px;min-height:32px;min-width:32px;width:32px}.button.is-loading::after,.control.is-loading::after,.loader,.select.is-loading::after{-webkit-animation:.5s linear infinite spinAround;animation:.5s linear infinite spinAround;border:2px solid var(--blm-grey-lighter);border-radius:var(--blm-radius-rounded);border-right-color:transparent;border-top-color:transparent;content:\\"\\";display:block;height:1em;position:relative;width:1em}.hero-video,.image.is-16by9 .has-ratio,.image.is-16by9 img,.image.is-1by1 .has-ratio,.image.is-1by1 img,.image.is-1by2 .has-ratio,.image.is-1by2 img,.image.is-1by3 .has-ratio,.image.is-1by3 img,.image.is-2by1 .has-ratio,.image.is-2by1 img,.image.is-2by3 .has-ratio,.image.is-2by3 img,.image.is-3by1 .has-ratio,.image.is-3by1 img,.image.is-3by2 .has-ratio,.image.is-3by2 img,.image.is-3by4 .has-ratio,.image.is-3by4 img,.image.is-3by5 .has-ratio,.image.is-3by5 img,.image.is-4by3 .has-ratio,.image.is-4by3 img,.image.is-4by5 .has-ratio,.image.is-4by5 img,.image.is-5by3 .has-ratio,.image.is-5by3 img,.image.is-5by4 .has-ratio,.image.is-5by4 img,.image.is-9by16 .has-ratio,.image.is-9by16 img,.image.is-square .has-ratio,.image.is-square img,.is-overlay,.modal,.modal-background{bottom:0;left:0;position:absolute;right:0;top:0}/*! minireset.css v0.0.6 | MIT License | github.com/jgthms/minireset.css */blockquote,body,dd,dl,dt,fieldset,figure,h1,h2,h3,h4,h5,h6,hr,html,iframe,legend,li,ol,p,pre,textarea,ul{margin:0;padding:0}h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:400}ul{list-style:none}button,input,select,textarea{margin:0}html{box-sizing:border-box;background-color:var(--blm-sch-main);font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;min-width:300px;overflow-x:hidden;overflow-y:scroll;text-rendering:optimizeLegibility;-webkit-text-size-adjust:100%;-moz-text-size-adjust:100%;-ms-text-size-adjust:100%;text-size-adjust:100%}*,::after,::before{box-sizing:inherit}img,video{height:auto;max-width:100%}iframe{border:0}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}table td:not([align]),table th:not([align]),td:not([align]),th:not([align]){text-align:inherit}article,aside,figure,footer,header,hgroup,section{display:block}body,button,input,select,textarea{font-family:var(--blm-family-prim)}code,pre{-moz-osx-font-smoothing:auto;-webkit-font-smoothing:auto;font-family:var(--blm-family-code)}body{color:var(--blm-txt);font-size:1em;font-weight:var(--blm-weight-normal);line-height:1.5}a{color:var(--blm-blue);cursor:pointer;text-decoration:none}a strong{color:currentColor}a:hover,table th{color:var(--blm-grey-darker)}code{background-color:var(--blm-bg);color:var(--blm-red);font-size:.875em;font-weight:400;padding:.25em .5em}hr{background-color:var(--blm-bg);border:none;display:block;height:2px;margin:1.5rem 0}input[type=checkbox],input[type=radio]{vertical-align:baseline}small{font-size:.875em}span{font-style:inherit;font-weight:inherit}strong{color:var(--blm-txt-strong);font-weight:var(--blm-weight-bold)}fieldset{border:none}pre{-webkit-overflow-scrolling:touch;background-color:var(--blm-bg);color:var(--blm-txt);font-size:.875em;overflow-x:auto;padding:1.25rem 1.5rem;white-space:pre;word-wrap:normal}pre code{background-color:transparent;color:currentColor;font-size:1em;padding:0}table td,table th{vertical-align:top}.box{background-color:var(--blm-box-bg-clr);border-radius:var(--blm-box-radius);box-shadow:var(--blm-box-shadow);color:var(--blm-box-clr);display:block;padding:var(--blm-box-p)}a.box:focus,a.box:hover{box-shadow:var(--blm-box-link-hov-shadow)}a.box:active{box-shadow:var(--blm-box-link-act-shadow)}.button{background-color:var(--blm-bt-bg-clr);border-color:var(--blm-bt-bd-clr);border-width:var(--blm-bt-bd-width);color:var(--blm-bt-clr);cursor:pointer;font-family:var(--blm-bt-family);justify-content:center;padding:var(--blm-bt-p-vertical) var(--blm-bt-p-horizontal);text-align:center;white-space:nowrap}.button strong{color:inherit}.button .icon,.button .icon.is-large,.button .icon.is-medium,.button .icon.is-small{height:1.5em;width:1.5em}.button .icon:first-child:not(:last-child){margin-left:calc(-.5*var(--blm-bt-p-horizontal) - var(--blm-bt-bd-width));margin-right:calc(var(--blm-bt-p-horizontal)/4)}.button .icon:last-child:not(:first-child){margin-left:calc(var(--blm-bt-p-horizontal)/4);margin-right:calc(-.5*var(--blm-bt-p-horizontal) - var(--blm-bt-bd-width))}.button .icon:first-child:last-child{margin-left:calc(-.5*var(--blm-bt-p-horizontal) - var(--blm-bt-bd-width));margin-right:calc(-.5*var(--blm-bt-p-horizontal) - var(--blm-bt-bd-width))}.button.is-hovered,.button:hover{border-color:var(--blm-bt-hov-bd-clr);color:var(--blm-bt-hov-clr)}.button.is-focused,.button:focus{border-color:var(--blm-bt-foc-bd-clr);color:var(--blm-bt-foc-clr)}.button.is-focused:not(:active),.button:focus:not(:active){box-shadow:var(--blm-bt-foc-box-shadow-s) var(--blm-bt-foc-box-shadow-clr)}.button.is-active,.button:active{border-color:var(--blm-bt-act-bd-clr);color:var(--blm-bt-act-clr)}.button.is-text{background-color:transparent;border-color:transparent;color:var(--blm-bt-txt-clr);-webkit-text-decoration:var(--blm-bt-txt-decoration);text-decoration:var(--blm-bt-txt-decoration)}.button.is-text.is-focused,.button.is-text.is-hovered,.button.is-text:focus,.button.is-text:hover{background-color:var(--blm-bt-txt-hov-bg-clr);color:var(--blm-bt-txt-hov-clr)}.button.is-text.is-active,.button.is-text:active{background-color:hsla(var(--blm-bt-txt-hov-bg-clr-h),var(--blm-bt-txt-hov-bg-clr-s),calc(var(--blm-bt-txt-hov-bg-clr-l) - 5%),var(--blm-bt-txt-hov-bg-clr-a));color:var(--blm-bt-txt-hov-clr)}.button.is-text[disabled],fieldset[disabled] .button.is-text{background-color:transparent;border-color:transparent;box-shadow:none}.button.is-white{background-color:var(--blm-white);border-color:transparent;color:var(--blm-white-inv)}.button.is-white.is-hovered,.button.is-white:hover{background-color:hsla(var(--blm-white-h),var(--blm-white-s),calc(var(--blm-white-l) - 2.5%),var(--blm-white-a));border-color:transparent;color:var(--blm-white-inv)}.button.is-white.is-focused,.button.is-white:focus{border-color:transparent;color:var(--blm-white-inv)}.button.is-white.is-focused:not(:active),.button.is-white:focus:not(:active){box-shadow:var(--blm-bt-foc-box-shadow-s) hsla(var(--blm-white-h),var(--blm-white-s),var(--blm-white-l),.25)}.button.is-white.is-active,.button.is-white:active{background-color:hsla(var(--blm-white-h),var(--blm-white-s),calc(var(--blm-white-l) - 5%),var(--blm-white-a));border-color:transparent;color:var(--blm-white-inv)}.button.is-white[disabled],fieldset[disabled] .button.is-white{background-color:var(--blm-white);border-color:transparent;box-shadow:none}.button.is-white.is-inverted{background-color:var(--blm-white-inv);color:var(--blm-white)}.button.is-white.is-inverted.is-hovered,.button.is-white.is-inverted:hover{background-color:hsla(var(--blm-white-inv-h),var(--blm-white-inv-s),calc(var(--blm-white-inv-l) - 5%),var(--blm-white-inv-a))}.button.is-white.is-inverted[disabled],fieldset[disabled] .button.is-white.is-inverted{background-color:var(--blm-white-inv);border-color:transparent;box-shadow:none;color:var(--blm-white)}.button.is-white.is-loading::after{border-color:transparent transparent var(--blm-white-inv) var(--blm-white-inv)!important}.button.is-white.is-outlined{background-color:transparent;border-color:var(--blm-white);color:var(--blm-white)}.button.is-white.is-outlined.is-focused,.button.is-white.is-outlined.is-hovered,.button.is-white.is-outlined:focus,.button.is-white.is-outlined:hover{background-color:var(--blm-white);border-color:var(--blm-white);color:var(--blm-white-inv)}.button.is-white.is-outlined.is-loading::after{border-color:transparent transparent var(--blm-white) var(--blm-white)!important}.button.is-white.is-outlined.is-loading.is-focused::after,.button.is-white.is-outlined.is-loading.is-hovered::after,.button.is-white.is-outlined.is-loading:focus::after,.button.is-white.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-white-inv) var(--blm-white-inv)!important}.button.is-white.is-outlined[disabled],fieldset[disabled] .button.is-white.is-outlined{background-color:transparent;border-color:var(--blm-white);box-shadow:none;color:var(--blm-white)}.button.is-white.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-white-inv);color:var(--blm-white-inv)}.button.is-white.is-inverted.is-outlined.is-focused,.button.is-white.is-inverted.is-outlined.is-hovered,.button.is-white.is-inverted.is-outlined:focus,.button.is-white.is-inverted.is-outlined:hover{background-color:var(--blm-white-inv);color:var(--blm-white)}.button.is-white.is-inverted.is-outlined.is-loading.is-focused::after,.button.is-white.is-inverted.is-outlined.is-loading.is-hovered::after,.button.is-white.is-inverted.is-outlined.is-loading:focus::after,.button.is-white.is-inverted.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-white) var(--blm-white)!important}.button.is-white.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-white.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-white-inv);box-shadow:none;color:var(--blm-white-inv)}.button.is-black{background-color:var(--blm-black);border-color:transparent;color:var(--blm-black-inv)}.button.is-black.is-hovered,.button.is-black:hover{background-color:hsla(var(--blm-black-h),var(--blm-black-s),calc(var(--blm-black-l) - 2.5%),var(--blm-black-a));border-color:transparent;color:var(--blm-black-inv)}.button.is-black.is-focused,.button.is-black:focus{border-color:transparent;color:var(--blm-black-inv)}.button.is-black.is-focused:not(:active),.button.is-black:focus:not(:active){box-shadow:var(--blm-bt-foc-box-shadow-s) hsla(var(--blm-black-h),var(--blm-black-s),var(--blm-black-l),.25)}.button.is-black.is-active,.button.is-black:active{background-color:hsla(var(--blm-black-h),var(--blm-black-s),calc(var(--blm-black-l) - 5%),var(--blm-black-a));border-color:transparent;color:var(--blm-black-inv)}.button.is-black[disabled],fieldset[disabled] .button.is-black{background-color:var(--blm-black);border-color:transparent;box-shadow:none}.button.is-black.is-inverted{background-color:var(--blm-black-inv);color:var(--blm-black)}.button.is-black.is-inverted.is-hovered,.button.is-black.is-inverted:hover{background-color:hsla(var(--blm-black-inv-h),var(--blm-black-inv-s),calc(var(--blm-black-inv-l) - 5%),var(--blm-black-inv-a))}.button.is-black.is-inverted[disabled],fieldset[disabled] .button.is-black.is-inverted{background-color:var(--blm-black-inv);border-color:transparent;box-shadow:none;color:var(--blm-black)}.button.is-black.is-loading::after{border-color:transparent transparent var(--blm-black-inv) var(--blm-black-inv)!important}.button.is-black.is-outlined{background-color:transparent;border-color:var(--blm-black);color:var(--blm-black)}.button.is-black.is-outlined.is-focused,.button.is-black.is-outlined.is-hovered,.button.is-black.is-outlined:focus,.button.is-black.is-outlined:hover{background-color:var(--blm-black);border-color:var(--blm-black);color:var(--blm-black-inv)}.button.is-black.is-outlined.is-loading::after{border-color:transparent transparent var(--blm-black) var(--blm-black)!important}.button.is-black.is-outlined.is-loading.is-focused::after,.button.is-black.is-outlined.is-loading.is-hovered::after,.button.is-black.is-outlined.is-loading:focus::after,.button.is-black.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-black-inv) var(--blm-black-inv)!important}.button.is-black.is-outlined[disabled],fieldset[disabled] .button.is-black.is-outlined{background-color:transparent;border-color:var(--blm-black);box-shadow:none;color:var(--blm-black)}.button.is-black.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-black-inv);color:var(--blm-black-inv)}.button.is-black.is-inverted.is-outlined.is-focused,.button.is-black.is-inverted.is-outlined.is-hovered,.button.is-black.is-inverted.is-outlined:focus,.button.is-black.is-inverted.is-outlined:hover{background-color:var(--blm-black-inv);color:var(--blm-black)}.button.is-black.is-inverted.is-outlined.is-loading.is-focused::after,.button.is-black.is-inverted.is-outlined.is-loading.is-hovered::after,.button.is-black.is-inverted.is-outlined.is-loading:focus::after,.button.is-black.is-inverted.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-black) var(--blm-black)!important}.button.is-black.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-black.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-black-inv);box-shadow:none;color:var(--blm-black-inv)}.button.is-light{background-color:var(--blm-light);border-color:transparent;color:var(--blm-light-inv)}.button.is-light.is-hovered,.button.is-light:hover{background-color:hsla(var(--blm-light-h),var(--blm-light-s),calc(var(--blm-light-l) - 2.5%),var(--blm-light-a));border-color:transparent;color:var(--blm-light-inv)}.button.is-light.is-focused,.button.is-light:focus{border-color:transparent;color:var(--blm-light-inv)}.button.is-light.is-focused:not(:active),.button.is-light:focus:not(:active){box-shadow:var(--blm-bt-foc-box-shadow-s) hsla(var(--blm-light-h),var(--blm-light-s),var(--blm-light-l),.25)}.button.is-light.is-active,.button.is-light:active{background-color:hsla(var(--blm-light-h),var(--blm-light-s),calc(var(--blm-light-l) - 5%),var(--blm-light-a));border-color:transparent;color:var(--blm-light-inv)}.button.is-light[disabled],fieldset[disabled] .button.is-light{background-color:var(--blm-light);border-color:transparent;box-shadow:none}.button.is-light.is-inverted{background-color:var(--blm-light-inv);color:var(--blm-light)}.button.is-light.is-inverted.is-hovered,.button.is-light.is-inverted:hover{background-color:hsla(var(--blm-light-inv-h),var(--blm-light-inv-s),calc(var(--blm-light-inv-l) - 5%),var(--blm-light-inv-a))}.button.is-light.is-inverted[disabled],fieldset[disabled] .button.is-light.is-inverted{background-color:var(--blm-light-inv);border-color:transparent;box-shadow:none;color:var(--blm-light)}.button.is-light.is-loading::after{border-color:transparent transparent var(--blm-light-inv) var(--blm-light-inv)!important}.button.is-light.is-outlined{background-color:transparent;border-color:var(--blm-light);color:var(--blm-light)}.button.is-light.is-outlined.is-focused,.button.is-light.is-outlined.is-hovered,.button.is-light.is-outlined:focus,.button.is-light.is-outlined:hover{background-color:var(--blm-light);border-color:var(--blm-light);color:var(--blm-light-inv)}.button.is-light.is-outlined.is-loading::after{border-color:transparent transparent var(--blm-light) var(--blm-light)!important}.button.is-light.is-outlined.is-loading.is-focused::after,.button.is-light.is-outlined.is-loading.is-hovered::after,.button.is-light.is-outlined.is-loading:focus::after,.button.is-light.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-light-inv) var(--blm-light-inv)!important}.button.is-light.is-outlined[disabled],fieldset[disabled] .button.is-light.is-outlined{background-color:transparent;border-color:var(--blm-light);box-shadow:none;color:var(--blm-light)}.button.is-light.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-light-inv);color:var(--blm-light-inv)}.button.is-light.is-inverted.is-outlined.is-focused,.button.is-light.is-inverted.is-outlined.is-hovered,.button.is-light.is-inverted.is-outlined:focus,.button.is-light.is-inverted.is-outlined:hover{background-color:var(--blm-light-inv);color:var(--blm-light)}.button.is-light.is-inverted.is-outlined.is-loading.is-focused::after,.button.is-light.is-inverted.is-outlined.is-loading.is-hovered::after,.button.is-light.is-inverted.is-outlined.is-loading:focus::after,.button.is-light.is-inverted.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-light) var(--blm-light)!important}.button.is-light.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-light.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-light-inv);box-shadow:none;color:var(--blm-light-inv)}.button.is-dark{background-color:var(--blm-dark);border-color:transparent;color:var(--blm-dark-inv)}.button.is-dark.is-hovered,.button.is-dark:hover{background-color:hsla(var(--blm-dark-h),var(--blm-dark-s),calc(var(--blm-dark-l) - 2.5%),var(--blm-dark-a));border-color:transparent;color:var(--blm-dark-inv)}.button.is-dark.is-focused,.button.is-dark:focus{border-color:transparent;color:var(--blm-dark-inv)}.button.is-dark.is-focused:not(:active),.button.is-dark:focus:not(:active){box-shadow:var(--blm-bt-foc-box-shadow-s) hsla(var(--blm-dark-h),var(--blm-dark-s),var(--blm-dark-l),.25)}.button.is-dark.is-active,.button.is-dark:active{background-color:hsla(var(--blm-dark-h),var(--blm-dark-s),calc(var(--blm-dark-l) - 5%),var(--blm-dark-a));border-color:transparent;color:var(--blm-dark-inv)}.button.is-dark[disabled],fieldset[disabled] .button.is-dark{background-color:var(--blm-dark);border-color:transparent;box-shadow:none}.button.is-dark.is-inverted{background-color:var(--blm-dark-inv);color:var(--blm-dark)}.button.is-dark.is-inverted.is-hovered,.button.is-dark.is-inverted:hover{background-color:hsla(var(--blm-dark-inv-h),var(--blm-dark-inv-s),calc(var(--blm-dark-inv-l) - 5%),var(--blm-dark-inv-a))}.button.is-dark.is-inverted[disabled],fieldset[disabled] .button.is-dark.is-inverted{background-color:var(--blm-dark-inv);border-color:transparent;box-shadow:none;color:var(--blm-dark)}.button.is-dark.is-loading::after{border-color:transparent transparent var(--blm-dark-inv) var(--blm-dark-inv)!important}.button.is-dark.is-outlined{background-color:transparent;border-color:var(--blm-dark);color:var(--blm-dark)}.button.is-dark.is-outlined.is-focused,.button.is-dark.is-outlined.is-hovered,.button.is-dark.is-outlined:focus,.button.is-dark.is-outlined:hover{background-color:var(--blm-dark);border-color:var(--blm-dark);color:var(--blm-dark-inv)}.button.is-dark.is-outlined.is-loading::after{border-color:transparent transparent var(--blm-dark) var(--blm-dark)!important}.button.is-dark.is-outlined.is-loading.is-focused::after,.button.is-dark.is-outlined.is-loading.is-hovered::after,.button.is-dark.is-outlined.is-loading:focus::after,.button.is-dark.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-dark-inv) var(--blm-dark-inv)!important}.button.is-dark.is-outlined[disabled],fieldset[disabled] .button.is-dark.is-outlined{background-color:transparent;border-color:var(--blm-dark);box-shadow:none;color:var(--blm-dark)}.button.is-dark.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-dark-inv);color:var(--blm-dark-inv)}.button.is-dark.is-inverted.is-outlined.is-focused,.button.is-dark.is-inverted.is-outlined.is-hovered,.button.is-dark.is-inverted.is-outlined:focus,.button.is-dark.is-inverted.is-outlined:hover{background-color:var(--blm-dark-inv);color:var(--blm-dark)}.button.is-dark.is-inverted.is-outlined.is-loading.is-focused::after,.button.is-dark.is-inverted.is-outlined.is-loading.is-hovered::after,.button.is-dark.is-inverted.is-outlined.is-loading:focus::after,.button.is-dark.is-inverted.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-dark) var(--blm-dark)!important}.button.is-dark.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-dark.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-dark-inv);box-shadow:none;color:var(--blm-dark-inv)}.button.is-primary{background-color:var(--blm-prim);border-color:transparent;color:var(--blm-prim-inv)}.button.is-primary.is-hovered,.button.is-primary:hover{background-color:hsla(var(--blm-prim-h),var(--blm-prim-s),calc(var(--blm-prim-l) - 2.5%),var(--blm-prim-a));border-color:transparent;color:var(--blm-prim-inv)}.button.is-primary.is-focused,.button.is-primary:focus{border-color:transparent;color:var(--blm-prim-inv)}.button.is-primary.is-focused:not(:active),.button.is-primary:focus:not(:active){box-shadow:var(--blm-bt-foc-box-shadow-s) hsla(var(--blm-prim-h),var(--blm-prim-s),var(--blm-prim-l),.25)}.button.is-primary.is-active,.button.is-primary:active{background-color:hsla(var(--blm-prim-h),var(--blm-prim-s),calc(var(--blm-prim-l) - 5%),var(--blm-prim-a));border-color:transparent;color:var(--blm-prim-inv)}.button.is-primary[disabled],fieldset[disabled] .button.is-primary{background-color:var(--blm-prim);border-color:transparent;box-shadow:none}.button.is-primary.is-inverted{background-color:var(--blm-prim-inv);color:var(--blm-prim)}.button.is-primary.is-inverted.is-hovered,.button.is-primary.is-inverted:hover{background-color:hsla(var(--blm-prim-inv-h),var(--blm-prim-inv-s),calc(var(--blm-prim-inv-l) - 5%),var(--blm-prim-inv-a))}.button.is-primary.is-inverted[disabled],fieldset[disabled] .button.is-primary.is-inverted{background-color:var(--blm-prim-inv);border-color:transparent;box-shadow:none;color:var(--blm-prim)}.button.is-primary.is-loading::after{border-color:transparent transparent var(--blm-prim-inv) var(--blm-prim-inv)!important}.button.is-primary.is-outlined{background-color:transparent;border-color:var(--blm-prim);color:var(--blm-prim)}.button.is-primary.is-outlined.is-focused,.button.is-primary.is-outlined.is-hovered,.button.is-primary.is-outlined:focus,.button.is-primary.is-outlined:hover{background-color:var(--blm-prim);border-color:var(--blm-prim);color:var(--blm-prim-inv)}.button.is-primary.is-outlined.is-loading::after{border-color:transparent transparent var(--blm-prim) var(--blm-prim)!important}.button.is-primary.is-outlined.is-loading.is-focused::after,.button.is-primary.is-outlined.is-loading.is-hovered::after,.button.is-primary.is-outlined.is-loading:focus::after,.button.is-primary.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-prim-inv) var(--blm-prim-inv)!important}.button.is-primary.is-outlined[disabled],fieldset[disabled] .button.is-primary.is-outlined{background-color:transparent;border-color:var(--blm-prim);box-shadow:none;color:var(--blm-prim)}.button.is-primary.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-prim-inv);color:var(--blm-prim-inv)}.button.is-primary.is-inverted.is-outlined.is-focused,.button.is-primary.is-inverted.is-outlined.is-hovered,.button.is-primary.is-inverted.is-outlined:focus,.button.is-primary.is-inverted.is-outlined:hover{background-color:var(--blm-prim-inv);color:var(--blm-prim)}.button.is-primary.is-inverted.is-outlined.is-loading.is-focused::after,.button.is-primary.is-inverted.is-outlined.is-loading.is-hovered::after,.button.is-primary.is-inverted.is-outlined.is-loading:focus::after,.button.is-primary.is-inverted.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-prim) var(--blm-prim)!important}.button.is-primary.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-primary.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-prim-inv);box-shadow:none;color:var(--blm-prim-inv)}.button.is-primary.is-light{background-color:var(--blm-prim-light);color:var(--blm-prim-dark)}.button.is-primary.is-light.is-hovered,.button.is-primary.is-light:hover{background-color:hsla(var(--blm-prim-light-h),var(--blm-prim-light-s),calc(var(--blm-prim-light-l) - 2.5%),var(--blm-prim-light-a));border-color:transparent;color:var(--blm-prim-dark)}.button.is-primary.is-light.is-active,.button.is-primary.is-light:active{background-color:hsla(var(--blm-prim-light-h),var(--blm-prim-light-s),calc(var(--blm-prim-light-l) - 5%),var(--blm-prim-light-a));border-color:transparent;color:var(--blm-prim-dark)}.button.is-link{background-color:var(--blm-link);border-color:transparent;color:var(--blm-link-inv)}.button.is-link.is-hovered,.button.is-link:hover{background-color:hsla(var(--blm-link-h),var(--blm-link-s),calc(var(--blm-link-l) - 2.5%),var(--blm-link-a));border-color:transparent;color:var(--blm-link-inv)}.button.is-link.is-focused,.button.is-link:focus{border-color:transparent;color:var(--blm-link-inv)}.button.is-link.is-focused:not(:active),.button.is-link:focus:not(:active){box-shadow:var(--blm-bt-foc-box-shadow-s) hsla(var(--blm-link-h),var(--blm-link-s),var(--blm-link-l),.25)}.button.is-link.is-active,.button.is-link:active{background-color:hsla(var(--blm-link-h),var(--blm-link-s),calc(var(--blm-link-l) - 5%),var(--blm-link-a));border-color:transparent;color:var(--blm-link-inv)}.button.is-link[disabled],fieldset[disabled] .button.is-link{background-color:var(--blm-link);border-color:transparent;box-shadow:none}.button.is-link.is-inverted{background-color:var(--blm-link-inv);color:var(--blm-link)}.button.is-link.is-inverted.is-hovered,.button.is-link.is-inverted:hover{background-color:hsla(var(--blm-link-inv-h),var(--blm-link-inv-s),calc(var(--blm-link-inv-l) - 5%),var(--blm-link-inv-a))}.button.is-link.is-inverted[disabled],fieldset[disabled] .button.is-link.is-inverted{background-color:var(--blm-link-inv);border-color:transparent;box-shadow:none;color:var(--blm-link)}.button.is-link.is-loading::after{border-color:transparent transparent var(--blm-link-inv) var(--blm-link-inv)!important}.button.is-link.is-outlined{background-color:transparent;border-color:var(--blm-link);color:var(--blm-link)}.button.is-link.is-outlined.is-focused,.button.is-link.is-outlined.is-hovered,.button.is-link.is-outlined:focus,.button.is-link.is-outlined:hover{background-color:var(--blm-link);border-color:var(--blm-link);color:var(--blm-link-inv)}.button.is-link.is-outlined.is-loading::after{border-color:transparent transparent var(--blm-link) var(--blm-link)!important}.button.is-link.is-outlined.is-loading.is-focused::after,.button.is-link.is-outlined.is-loading.is-hovered::after,.button.is-link.is-outlined.is-loading:focus::after,.button.is-link.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-link-inv) var(--blm-link-inv)!important}.button.is-link.is-outlined[disabled],fieldset[disabled] .button.is-link.is-outlined{background-color:transparent;border-color:var(--blm-link);box-shadow:none;color:var(--blm-link)}.button.is-link.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-link-inv);color:var(--blm-link-inv)}.button.is-link.is-inverted.is-outlined.is-focused,.button.is-link.is-inverted.is-outlined.is-hovered,.button.is-link.is-inverted.is-outlined:focus,.button.is-link.is-inverted.is-outlined:hover{background-color:var(--blm-link-inv);color:var(--blm-link)}.button.is-link.is-inverted.is-outlined.is-loading.is-focused::after,.button.is-link.is-inverted.is-outlined.is-loading.is-hovered::after,.button.is-link.is-inverted.is-outlined.is-loading:focus::after,.button.is-link.is-inverted.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-link) var(--blm-link)!important}.button.is-link.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-link.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-link-inv);box-shadow:none;color:var(--blm-link-inv)}.button.is-link.is-light{background-color:var(--blm-link-light);color:var(--blm-link-dark)}.button.is-link.is-light.is-hovered,.button.is-link.is-light:hover{background-color:hsla(var(--blm-link-light-h),var(--blm-link-light-s),calc(var(--blm-link-light-l) - 2.5%),var(--blm-link-light-a));border-color:transparent;color:var(--blm-link-dark)}.button.is-link.is-light.is-active,.button.is-link.is-light:active{background-color:hsla(var(--blm-link-light-h),var(--blm-link-light-s),calc(var(--blm-link-light-l) - 5%),var(--blm-link-light-a));border-color:transparent;color:var(--blm-link-dark)}.button.is-info{background-color:var(--blm-info);border-color:transparent;color:var(--blm-info-inv)}.button.is-info.is-hovered,.button.is-info:hover{background-color:hsla(var(--blm-info-h),var(--blm-info-s),calc(var(--blm-info-l) - 2.5%),var(--blm-info-a));border-color:transparent;color:var(--blm-info-inv)}.button.is-info.is-focused,.button.is-info:focus{border-color:transparent;color:var(--blm-info-inv)}.button.is-info.is-focused:not(:active),.button.is-info:focus:not(:active){box-shadow:var(--blm-bt-foc-box-shadow-s) hsla(var(--blm-info-h),var(--blm-info-s),var(--blm-info-l),.25)}.button.is-info.is-active,.button.is-info:active{background-color:hsla(var(--blm-info-h),var(--blm-info-s),calc(var(--blm-info-l) - 5%),var(--blm-info-a));border-color:transparent;color:var(--blm-info-inv)}.button.is-info[disabled],fieldset[disabled] .button.is-info{background-color:var(--blm-info);border-color:transparent;box-shadow:none}.button.is-info.is-inverted{background-color:var(--blm-info-inv);color:var(--blm-info)}.button.is-info.is-inverted.is-hovered,.button.is-info.is-inverted:hover{background-color:hsla(var(--blm-info-inv-h),var(--blm-info-inv-s),calc(var(--blm-info-inv-l) - 5%),var(--blm-info-inv-a))}.button.is-info.is-inverted[disabled],fieldset[disabled] .button.is-info.is-inverted{background-color:var(--blm-info-inv);border-color:transparent;box-shadow:none;color:var(--blm-info)}.button.is-info.is-loading::after{border-color:transparent transparent var(--blm-info-inv) var(--blm-info-inv)!important}.button.is-info.is-outlined{background-color:transparent;border-color:var(--blm-info);color:var(--blm-info)}.button.is-info.is-outlined.is-focused,.button.is-info.is-outlined.is-hovered,.button.is-info.is-outlined:focus,.button.is-info.is-outlined:hover{background-color:var(--blm-info);border-color:var(--blm-info);color:var(--blm-info-inv)}.button.is-info.is-outlined.is-loading::after{border-color:transparent transparent var(--blm-info) var(--blm-info)!important}.button.is-info.is-outlined.is-loading.is-focused::after,.button.is-info.is-outlined.is-loading.is-hovered::after,.button.is-info.is-outlined.is-loading:focus::after,.button.is-info.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-info-inv) var(--blm-info-inv)!important}.button.is-info.is-outlined[disabled],fieldset[disabled] .button.is-info.is-outlined{background-color:transparent;border-color:var(--blm-info);box-shadow:none;color:var(--blm-info)}.button.is-info.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-info-inv);color:var(--blm-info-inv)}.button.is-info.is-inverted.is-outlined.is-focused,.button.is-info.is-inverted.is-outlined.is-hovered,.button.is-info.is-inverted.is-outlined:focus,.button.is-info.is-inverted.is-outlined:hover{background-color:var(--blm-info-inv);color:var(--blm-info)}.button.is-info.is-inverted.is-outlined.is-loading.is-focused::after,.button.is-info.is-inverted.is-outlined.is-loading.is-hovered::after,.button.is-info.is-inverted.is-outlined.is-loading:focus::after,.button.is-info.is-inverted.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-info) var(--blm-info)!important}.button.is-info.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-info.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-info-inv);box-shadow:none;color:var(--blm-info-inv)}.button.is-info.is-light{background-color:var(--blm-info-light);color:var(--blm-info-dark)}.button.is-info.is-light.is-hovered,.button.is-info.is-light:hover{background-color:hsla(var(--blm-info-light-h),var(--blm-info-light-s),calc(var(--blm-info-light-l) - 2.5%),var(--blm-info-light-a));border-color:transparent;color:var(--blm-info-dark)}.button.is-info.is-light.is-active,.button.is-info.is-light:active{background-color:hsla(var(--blm-info-light-h),var(--blm-info-light-s),calc(var(--blm-info-light-l) - 5%),var(--blm-info-light-a));border-color:transparent;color:var(--blm-info-dark)}.button.is-success{background-color:var(--blm-sucs);border-color:transparent;color:var(--blm-sucs-inv)}.button.is-success.is-hovered,.button.is-success:hover{background-color:hsla(var(--blm-sucs-h),var(--blm-sucs-s),calc(var(--blm-sucs-l) - 2.5%),var(--blm-sucs-a));border-color:transparent;color:var(--blm-sucs-inv)}.button.is-success.is-focused,.button.is-success:focus{border-color:transparent;color:var(--blm-sucs-inv)}.button.is-success.is-focused:not(:active),.button.is-success:focus:not(:active){box-shadow:var(--blm-bt-foc-box-shadow-s) hsla(var(--blm-sucs-h),var(--blm-sucs-s),var(--blm-sucs-l),.25)}.button.is-success.is-active,.button.is-success:active{background-color:hsla(var(--blm-sucs-h),var(--blm-sucs-s),calc(var(--blm-sucs-l) - 5%),var(--blm-sucs-a));border-color:transparent;color:var(--blm-sucs-inv)}.button.is-success[disabled],fieldset[disabled] .button.is-success{background-color:var(--blm-sucs);border-color:transparent;box-shadow:none}.button.is-success.is-inverted{background-color:var(--blm-sucs-inv);color:var(--blm-sucs)}.button.is-success.is-inverted.is-hovered,.button.is-success.is-inverted:hover{background-color:hsla(var(--blm-sucs-inv-h),var(--blm-sucs-inv-s),calc(var(--blm-sucs-inv-l) - 5%),var(--blm-sucs-inv-a))}.button.is-success.is-inverted[disabled],fieldset[disabled] .button.is-success.is-inverted{background-color:var(--blm-sucs-inv);border-color:transparent;box-shadow:none;color:var(--blm-sucs)}.button.is-success.is-loading::after{border-color:transparent transparent var(--blm-sucs-inv) var(--blm-sucs-inv)!important}.button.is-success.is-outlined{background-color:transparent;border-color:var(--blm-sucs);color:var(--blm-sucs)}.button.is-success.is-outlined.is-focused,.button.is-success.is-outlined.is-hovered,.button.is-success.is-outlined:focus,.button.is-success.is-outlined:hover{background-color:var(--blm-sucs);border-color:var(--blm-sucs);color:var(--blm-sucs-inv)}.button.is-success.is-outlined.is-loading::after{border-color:transparent transparent var(--blm-sucs) var(--blm-sucs)!important}.button.is-success.is-outlined.is-loading.is-focused::after,.button.is-success.is-outlined.is-loading.is-hovered::after,.button.is-success.is-outlined.is-loading:focus::after,.button.is-success.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-sucs-inv) var(--blm-sucs-inv)!important}.button.is-success.is-outlined[disabled],fieldset[disabled] .button.is-success.is-outlined{background-color:transparent;border-color:var(--blm-sucs);box-shadow:none;color:var(--blm-sucs)}.button.is-success.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-sucs-inv);color:var(--blm-sucs-inv)}.button.is-success.is-inverted.is-outlined.is-focused,.button.is-success.is-inverted.is-outlined.is-hovered,.button.is-success.is-inverted.is-outlined:focus,.button.is-success.is-inverted.is-outlined:hover{background-color:var(--blm-sucs-inv);color:var(--blm-sucs)}.button.is-success.is-inverted.is-outlined.is-loading.is-focused::after,.button.is-success.is-inverted.is-outlined.is-loading.is-hovered::after,.button.is-success.is-inverted.is-outlined.is-loading:focus::after,.button.is-success.is-inverted.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-sucs) var(--blm-sucs)!important}.button.is-success.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-success.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-sucs-inv);box-shadow:none;color:var(--blm-sucs-inv)}.button.is-success.is-light{background-color:var(--blm-sucs-light);color:var(--blm-sucs-dark)}.button.is-success.is-light.is-hovered,.button.is-success.is-light:hover{background-color:hsla(var(--blm-sucs-light-h),var(--blm-sucs-light-s),calc(var(--blm-sucs-light-l) - 2.5%),var(--blm-sucs-light-a));border-color:transparent;color:var(--blm-sucs-dark)}.button.is-success.is-light.is-active,.button.is-success.is-light:active{background-color:hsla(var(--blm-sucs-light-h),var(--blm-sucs-light-s),calc(var(--blm-sucs-light-l) - 5%),var(--blm-sucs-light-a));border-color:transparent;color:var(--blm-sucs-dark)}.button.is-warning{background-color:var(--blm-warn);border-color:transparent;color:var(--blm-warn-inv)}.button.is-warning.is-hovered,.button.is-warning:hover{background-color:hsla(var(--blm-warn-h),var(--blm-warn-s),calc(var(--blm-warn-l) - 2.5%),var(--blm-warn-a));border-color:transparent;color:var(--blm-warn-inv)}.button.is-warning.is-focused,.button.is-warning:focus{border-color:transparent;color:var(--blm-warn-inv)}.button.is-warning.is-focused:not(:active),.button.is-warning:focus:not(:active){box-shadow:var(--blm-bt-foc-box-shadow-s) hsla(var(--blm-warn-h),var(--blm-warn-s),var(--blm-warn-l),.25)}.button.is-warning.is-active,.button.is-warning:active{background-color:hsla(var(--blm-warn-h),var(--blm-warn-s),calc(var(--blm-warn-l) - 5%),var(--blm-warn-a));border-color:transparent;color:var(--blm-warn-inv)}.button.is-warning[disabled],fieldset[disabled] .button.is-warning{background-color:var(--blm-warn);border-color:transparent;box-shadow:none}.button.is-warning.is-inverted{background-color:var(--blm-warn-inv);color:var(--blm-warn)}.button.is-warning.is-inverted.is-hovered,.button.is-warning.is-inverted:hover{background-color:hsla(var(--blm-warn-inv-h),var(--blm-warn-inv-s),calc(var(--blm-warn-inv-l) - 5%),var(--blm-warn-inv-a))}.button.is-warning.is-inverted[disabled],fieldset[disabled] .button.is-warning.is-inverted{background-color:var(--blm-warn-inv);border-color:transparent;box-shadow:none;color:var(--blm-warn)}.button.is-warning.is-loading::after{border-color:transparent transparent var(--blm-warn-inv) var(--blm-warn-inv)!important}.button.is-warning.is-outlined{background-color:transparent;border-color:var(--blm-warn);color:var(--blm-warn)}.button.is-warning.is-outlined.is-focused,.button.is-warning.is-outlined.is-hovered,.button.is-warning.is-outlined:focus,.button.is-warning.is-outlined:hover{background-color:var(--blm-warn);border-color:var(--blm-warn);color:var(--blm-warn-inv)}.button.is-warning.is-outlined.is-loading::after{border-color:transparent transparent var(--blm-warn) var(--blm-warn)!important}.button.is-warning.is-outlined.is-loading.is-focused::after,.button.is-warning.is-outlined.is-loading.is-hovered::after,.button.is-warning.is-outlined.is-loading:focus::after,.button.is-warning.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-warn-inv) var(--blm-warn-inv)!important}.button.is-warning.is-outlined[disabled],fieldset[disabled] .button.is-warning.is-outlined{background-color:transparent;border-color:var(--blm-warn);box-shadow:none;color:var(--blm-warn)}.button.is-warning.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-warn-inv);color:var(--blm-warn-inv)}.button.is-warning.is-inverted.is-outlined.is-focused,.button.is-warning.is-inverted.is-outlined.is-hovered,.button.is-warning.is-inverted.is-outlined:focus,.button.is-warning.is-inverted.is-outlined:hover{background-color:var(--blm-warn-inv);color:var(--blm-warn)}.button.is-warning.is-inverted.is-outlined.is-loading.is-focused::after,.button.is-warning.is-inverted.is-outlined.is-loading.is-hovered::after,.button.is-warning.is-inverted.is-outlined.is-loading:focus::after,.button.is-warning.is-inverted.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-warn) var(--blm-warn)!important}.button.is-warning.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-warning.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-warn-inv);box-shadow:none;color:var(--blm-warn-inv)}.button.is-warning.is-light{background-color:var(--blm-warn-light);color:var(--blm-warn-dark)}.button.is-warning.is-light.is-hovered,.button.is-warning.is-light:hover{background-color:hsla(var(--blm-warn-light-h),var(--blm-warn-light-s),calc(var(--blm-warn-light-l) - 2.5%),var(--blm-warn-light-a));border-color:transparent;color:var(--blm-warn-dark)}.button.is-warning.is-light.is-active,.button.is-warning.is-light:active{background-color:hsla(var(--blm-warn-light-h),var(--blm-warn-light-s),calc(var(--blm-warn-light-l) - 5%),var(--blm-warn-light-a));border-color:transparent;color:var(--blm-warn-dark)}.button.is-danger{background-color:var(--blm-dang);border-color:transparent;color:var(--blm-dang-inv)}.button.is-danger.is-hovered,.button.is-danger:hover{background-color:hsla(var(--blm-dang-h),var(--blm-dang-s),calc(var(--blm-dang-l) - 2.5%),var(--blm-dang-a));border-color:transparent;color:var(--blm-dang-inv)}.button.is-danger.is-focused,.button.is-danger:focus{border-color:transparent;color:var(--blm-dang-inv)}.button.is-danger.is-focused:not(:active),.button.is-danger:focus:not(:active){box-shadow:var(--blm-bt-foc-box-shadow-s) hsla(var(--blm-dang-h),var(--blm-dang-s),var(--blm-dang-l),.25)}.button.is-danger.is-active,.button.is-danger:active{background-color:hsla(var(--blm-dang-h),var(--blm-dang-s),calc(var(--blm-dang-l) - 5%),var(--blm-dang-a));border-color:transparent;color:var(--blm-dang-inv)}.button.is-danger[disabled],fieldset[disabled] .button.is-danger{background-color:var(--blm-dang);border-color:transparent;box-shadow:none}.button.is-danger.is-inverted{background-color:var(--blm-dang-inv);color:var(--blm-dang)}.button.is-danger.is-inverted.is-hovered,.button.is-danger.is-inverted:hover{background-color:hsla(var(--blm-dang-inv-h),var(--blm-dang-inv-s),calc(var(--blm-dang-inv-l) - 5%),var(--blm-dang-inv-a))}.button.is-danger.is-inverted[disabled],fieldset[disabled] .button.is-danger.is-inverted{background-color:var(--blm-dang-inv);border-color:transparent;box-shadow:none;color:var(--blm-dang)}.button.is-danger.is-loading::after{border-color:transparent transparent var(--blm-dang-inv) var(--blm-dang-inv)!important}.button.is-danger.is-outlined{background-color:transparent;border-color:var(--blm-dang);color:var(--blm-dang)}.button.is-danger.is-outlined.is-focused,.button.is-danger.is-outlined.is-hovered,.button.is-danger.is-outlined:focus,.button.is-danger.is-outlined:hover{background-color:var(--blm-dang);border-color:var(--blm-dang);color:var(--blm-dang-inv)}.button.is-danger.is-outlined.is-loading::after{border-color:transparent transparent var(--blm-dang) var(--blm-dang)!important}.button.is-danger.is-outlined.is-loading.is-focused::after,.button.is-danger.is-outlined.is-loading.is-hovered::after,.button.is-danger.is-outlined.is-loading:focus::after,.button.is-danger.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-dang-inv) var(--blm-dang-inv)!important}.button.is-danger.is-outlined[disabled],fieldset[disabled] .button.is-danger.is-outlined{background-color:transparent;border-color:var(--blm-dang);box-shadow:none;color:var(--blm-dang)}.button.is-danger.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-dang-inv);color:var(--blm-dang-inv)}.button.is-danger.is-inverted.is-outlined.is-focused,.button.is-danger.is-inverted.is-outlined.is-hovered,.button.is-danger.is-inverted.is-outlined:focus,.button.is-danger.is-inverted.is-outlined:hover{background-color:var(--blm-dang-inv);color:var(--blm-dang)}.button.is-danger.is-inverted.is-outlined.is-loading.is-focused::after,.button.is-danger.is-inverted.is-outlined.is-loading.is-hovered::after,.button.is-danger.is-inverted.is-outlined.is-loading:focus::after,.button.is-danger.is-inverted.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-dang) var(--blm-dang)!important}.button.is-danger.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-danger.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-dang-inv);box-shadow:none;color:var(--blm-dang-inv)}.button.is-danger.is-light{background-color:var(--blm-dang-light);color:var(--blm-dang-dark)}.button.is-danger.is-light.is-hovered,.button.is-danger.is-light:hover{background-color:hsla(var(--blm-dang-light-h),var(--blm-dang-light-s),calc(var(--blm-dang-light-l) - 2.5%),var(--blm-dang-light-a));border-color:transparent;color:var(--blm-dang-dark)}.button.is-danger.is-light.is-active,.button.is-danger.is-light:active{background-color:hsla(var(--blm-dang-light-h),var(--blm-dang-light-s),calc(var(--blm-dang-light-l) - 5%),var(--blm-dang-light-a));border-color:transparent;color:var(--blm-dang-dark)}.button.is-small{border-radius:var(--blm-radius-small);font-size:var(--blm-s-small)}.button.is-normal{font-size:var(--blm-s-normal)}.button.is-medium{font-size:var(--blm-s-medium)}.button.is-large{font-size:var(--blm-s-lg)}.button[disabled],fieldset[disabled] .button{background-color:var(--blm-bt-dsbl-bg-clr);border-color:var(--blm-bt-dsbl-bd-clr);box-shadow:var(--blm-bt-dsbl-shadow);opacity:var(--blm-bt-dsbl-opacity)}.button.is-fullwidth{display:flex;width:100%}.button.is-loading{color:transparent!important;pointer-events:none}.button.is-loading::after{left:calc(50% - .5em);top:calc(50% - .5em);position:absolute!important}.button.is-static{background-color:var(--blm-bt-static-bg-clr);border-color:var(--blm-bt-static-bd-clr);color:var(--blm-bt-static-clr);box-shadow:none;pointer-events:none}.button.is-rounded{border-radius:var(--blm-radius-rounded);padding-left:calc(var(--blm-bt-p-horizontal) + .25em);padding-right:1.25em}.buttons{align-items:center;display:flex;flex-wrap:wrap;justify-content:flex-start}.buttons .button{margin-bottom:.5rem}.buttons .button:not(:last-child):not(.is-fullwidth){margin-right:.5rem}.buttons:last-child{margin-bottom:-.5rem}.buttons:not(:last-child){margin-bottom:1rem}.buttons.are-small .button:not(.is-normal):not(.is-medium):not(.is-large){border-radius:var(--blm-radius-small);font-size:var(--blm-s-small)}.buttons.are-medium .button:not(.is-small):not(.is-normal):not(.is-large){font-size:var(--blm-s-medium)}.buttons.are-large .button:not(.is-small):not(.is-normal):not(.is-medium){font-size:var(--blm-s-lg)}.buttons.has-addons .button:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0}.buttons.has-addons .button:not(:last-child){border-bottom-right-radius:0;border-top-right-radius:0;margin-right:-1px}.buttons.has-addons .button:last-child{margin-right:0}.buttons.has-addons .button.is-hovered,.buttons.has-addons .button:hover{z-index:2}.buttons.has-addons .button.is-active,.buttons.has-addons .button.is-focused,.buttons.has-addons .button.is-selected,.buttons.has-addons .button:active,.buttons.has-addons .button:focus{z-index:3}.buttons.has-addons .button.is-active:hover,.buttons.has-addons .button.is-focused:hover,.buttons.has-addons .button.is-selected:hover,.buttons.has-addons .button:active:hover,.buttons.has-addons .button:focus:hover{z-index:4}.buttons.has-addons .button.is-expanded{flex-grow:1;flex-shrink:1}.buttons.is-centered{justify-content:center}.buttons.is-centered:not(.has-addons) .button:not(.is-fullwidth){margin-left:.25rem;margin-right:.25rem}.buttons.is-right{justify-content:flex-end}.buttons.is-right:not(.has-addons) .button:not(.is-fullwidth){margin-left:.25rem;margin-right:.25rem}.container{flex-grow:1;margin:0 auto;position:relative;width:auto}.container.is-fluid{margin-left:32px;margin-right:32px;max-width:none;width:auto}@media screen and (min-width:1024px){.container.is-fluid{margin-left:32px;margin-right:32px;max-width:none}.container{max-width:960px}}@media screen and (max-width:1215px){.container.is-widescreen{max-width:1152px}}@media screen and (max-width:1407px){.container.is-fullhd{max-width:1344px}}@media screen and (min-width:1216px){.container{max-width:1152px}}@media screen and (min-width:1408px){.container{max-width:1344px}}.content li+li{margin-top:.25em}.content blockquote:not(:last-child),.content dl:not(:last-child),.content ol:not(:last-child),.content p:not(:last-child),.content pre:not(:last-child),.content table:not(:last-child),.content ul:not(:last-child){margin-bottom:1em}.content h1,.content h2,.content h3,.content h4,.content h5,.content h6{color:var(--blm-ct-hdg-clr);font-weight:var(--blm-ct-hdg-weight);line-height:var(--blm-ct-hdg-line-height)}.content h1{font-size:2em;margin-bottom:.5em}.content h1:not(:first-child){margin-top:1em}.content h2{font-size:1.75em;margin-bottom:.5714em}.content h2:not(:first-child){margin-top:1.1428em}.content h3{font-size:1.5em;margin-bottom:.6666em}.content h3:not(:first-child){margin-top:1.3333em}.content h4{font-size:1.25em;margin-bottom:.8em}.content h5{font-size:1.125em;margin-bottom:.8888em}.content h6{font-size:1em;margin-bottom:1em}.content blockquote{background-color:var(--blm-ct-blockquote-bg-clr);border-left:var(--blm-ct-blockquote-bd-left);padding:var(--blm-ct-blockquote-p)}.content ol{list-style-position:outside;margin-left:2em;margin-top:1em}.content ol:not([type]){list-style-type:decimal}.content ol:not([type]).is-lower-alpha{list-style-type:lower-alpha}.content ol:not([type]).is-lower-roman{list-style-type:lower-roman}.content ol:not([type]).is-upper-alpha{list-style-type:upper-alpha}.content ol:not([type]).is-upper-roman{list-style-type:upper-roman}.content ul{list-style:disc;margin-left:2em;margin-top:1em}.content ul ul{list-style-type:circle;margin-top:.5em}.content ul ul ul{list-style-type:square}.content dd{margin-left:2em}.content figure{margin-left:2em;margin-right:2em;text-align:center}.content figure:not(:first-child){margin-top:2em}.content figure:not(:last-child){margin-bottom:2em}.content figure img{display:inline-block}.content figure figcaption{font-style:italic}.content pre{-webkit-overflow-scrolling:touch;overflow-x:auto;padding:var(--blm-ct-pre-p);white-space:pre;word-wrap:normal}.content sub,.content sup{font-size:75%}.content table{width:100%}.content table td,.content table th{border:var(--blm-ct-table-cell-bd);border-width:var(--blm-ct-table-cell-bd-width);padding:var(--blm-ct-table-cell-p);vertical-align:top}.content table th{color:var(--blm-ct-table-cell-hdg-clr)}.content table th:not([align]){text-align:inherit}.content table thead td,.content table thead th{border-width:var(--blm-ct-table-head-cell-bd-width);color:var(--blm-ct-table-head-cell-clr)}.content table tfoot td,.content table tfoot th{border-width:var(--blm-ct-table-foot-cell-bd-width);color:var(--blm-ct-table-foot-cell-clr)}.content table tbody tr:last-child td,.content table tbody tr:last-child th{border-bottom-width:0}.content .tabs li+li{margin-top:0}.content.is-small{font-size:var(--blm-s-small)}.content.is-medium{font-size:var(--blm-s-medium)}.content.is-large{font-size:var(--blm-s-lg)}.icon{align-items:center;display:inline-flex;justify-content:center;height:var(--blm-icon-dim);width:var(--blm-icon-dim)}.icon.is-small{height:var(--blm-icon-dim-small);width:var(--blm-icon-dim-small)}.icon.is-medium{height:var(--blm-icon-dim-medium);width:var(--blm-icon-dim-medium)}.icon.is-large{height:var(--blm-icon-dim-lg);width:var(--blm-icon-dim-lg)}.image{display:block;position:relative}.image img{display:block;height:auto;width:100%}.image img.is-rounded{border-radius:var(--blm-radius-rounded)}.image.is-fullwidth{width:100%}.image.is-16by9 .has-ratio,.image.is-16by9 img,.image.is-1by1 .has-ratio,.image.is-1by1 img,.image.is-1by2 .has-ratio,.image.is-1by2 img,.image.is-1by3 .has-ratio,.image.is-1by3 img,.image.is-2by1 .has-ratio,.image.is-2by1 img,.image.is-2by3 .has-ratio,.image.is-2by3 img,.image.is-3by1 .has-ratio,.image.is-3by1 img,.image.is-3by2 .has-ratio,.image.is-3by2 img,.image.is-3by4 .has-ratio,.image.is-3by4 img,.image.is-3by5 .has-ratio,.image.is-3by5 img,.image.is-4by3 .has-ratio,.image.is-4by3 img,.image.is-4by5 .has-ratio,.image.is-4by5 img,.image.is-5by3 .has-ratio,.image.is-5by3 img,.image.is-5by4 .has-ratio,.image.is-5by4 img,.image.is-9by16 .has-ratio,.image.is-9by16 img,.image.is-square .has-ratio,.image.is-square img{height:100%;width:100%}.image.is-1by1,.image.is-square{padding-top:100%}.image.is-5by4{padding-top:80%}.image.is-4by3{padding-top:75%}.image.is-3by2{padding-top:66.6666%}.image.is-5by3{padding-top:60%}.image.is-16by9{padding-top:56.25%}.image.is-2by1{padding-top:50%}.image.is-3by1{padding-top:33.3333%}.image.is-4by5{padding-top:125%}.image.is-3by4{padding-top:133.3333%}.image.is-2by3{padding-top:150%}.image.is-3by5{padding-top:166.6666%}.image.is-9by16{padding-top:177.7777%}.image.is-1by2{padding-top:200%}.image.is-1by3{padding-top:300%}.image.is-16x16{height:16px;width:16px}.image.is-24x24{height:24px;width:24px}.image.is-32x32{height:32px;width:32px}.image.is-48x48{height:48px;width:48px}.image.is-64x64{height:64px;width:64px}.image.is-96x96{height:96px;width:96px}.image.is-128x128{height:128px;width:128px}.notification{background-color:var(--blm-noti-bg-clr);border-radius:var(--blm-noti-radius);position:relative;padding:var(--blm-noti-p-vertical) var(--blm-noti-p-right) var(--blm-noti-p-vertical) var(--blm-noti-p-left)}.notification a:not(.button):not(.dropdown-item){color:currentColor;text-decoration:underline}.notification strong{color:currentColor}.notification code,.notification pre{background:var(--blm-noti-code-bg-clr)}.notification pre code{background:0 0}.notification>.delete{right:.5rem;position:absolute;top:.5rem}.notification .content,.notification .subtitle,.notification .title{color:currentColor}.notification.is-white{background-color:var(--blm-white);color:var(--blm-white-inv)}.notification.is-black{background-color:var(--blm-black);color:var(--blm-black-inv)}.notification.is-light{background-color:var(--blm-light);color:var(--blm-light-inv)}.notification.is-dark{background-color:var(--blm-dark);color:var(--blm-dark-inv)}.notification.is-primary{background-color:var(--blm-prim);color:var(--blm-prim-inv)}.notification.is-primary.is-light{background-color:var(--blm-prim-light);color:var(--blm-prim-dark)}.notification.is-link{background-color:var(--blm-link);color:var(--blm-link-inv)}.notification.is-link.is-light{background-color:var(--blm-link-light);color:var(--blm-link-dark)}.notification.is-info{background-color:var(--blm-info);color:var(--blm-info-inv)}.notification.is-info.is-light{background-color:var(--blm-info-light);color:var(--blm-info-dark)}.notification.is-success{background-color:var(--blm-sucs);color:var(--blm-sucs-inv)}.notification.is-success.is-light{background-color:var(--blm-sucs-light);color:var(--blm-sucs-dark)}.notification.is-warning{background-color:var(--blm-warn);color:var(--blm-warn-inv)}.notification.is-warning.is-light{background-color:var(--blm-warn-light);color:var(--blm-warn-dark)}.notification.is-danger{background-color:var(--blm-dang);color:var(--blm-dang-inv)}.notification.is-danger.is-light{background-color:var(--blm-dang-light);color:var(--blm-dang-dark)}.progress{-moz-appearance:none;-webkit-appearance:none;border:none;border-radius:var(--blm-prg-bd-radius);display:block;height:var(--blm-s-normal);overflow:hidden;padding:0;width:100%}.progress::-webkit-progress-bar{background-color:var(--blm-prg-bar-bg-clr)}.progress::-webkit-progress-value{background-color:var(--blm-prg-value-bg-clr)}.progress::-moz-progress-bar{background-color:var(--blm-prg-value-bg-clr)}.progress::-ms-fill{background-color:var(--blm-prg-value-bg-clr);border:none}.progress.is-white::-webkit-progress-value{background-color:var(--blm-white)}.progress.is-white::-moz-progress-bar{background-color:var(--blm-white)}.progress.is-white::-ms-fill{background-color:var(--blm-white)}.progress.is-white:indeterminate{background-image:linear-gradient(to right,var(--blm-white) 30%,var(--blm-prg-bar-bg-clr) 30%)}.progress.is-black::-webkit-progress-value{background-color:var(--blm-black)}.progress.is-black::-moz-progress-bar{background-color:var(--blm-black)}.progress.is-black::-ms-fill{background-color:var(--blm-black)}.progress.is-black:indeterminate{background-image:linear-gradient(to right,var(--blm-black) 30%,var(--blm-prg-bar-bg-clr) 30%)}.progress.is-light::-webkit-progress-value{background-color:var(--blm-light)}.progress.is-light::-moz-progress-bar{background-color:var(--blm-light)}.progress.is-light::-ms-fill{background-color:var(--blm-light)}.progress.is-light:indeterminate{background-image:linear-gradient(to right,var(--blm-light) 30%,var(--blm-prg-bar-bg-clr) 30%)}.progress.is-dark::-webkit-progress-value{background-color:var(--blm-dark)}.progress.is-dark::-moz-progress-bar{background-color:var(--blm-dark)}.progress.is-dark::-ms-fill{background-color:var(--blm-dark)}.progress.is-dark:indeterminate{background-image:linear-gradient(to right,var(--blm-dark) 30%,var(--blm-prg-bar-bg-clr) 30%)}.progress.is-primary::-webkit-progress-value{background-color:var(--blm-prim)}.progress.is-primary::-moz-progress-bar{background-color:var(--blm-prim)}.progress.is-primary::-ms-fill{background-color:var(--blm-prim)}.progress.is-primary:indeterminate{background-image:linear-gradient(to right,var(--blm-prim) 30%,var(--blm-prg-bar-bg-clr) 30%)}.progress.is-link::-webkit-progress-value{background-color:var(--blm-link)}.progress.is-link::-moz-progress-bar{background-color:var(--blm-link)}.progress.is-link::-ms-fill{background-color:var(--blm-link)}.progress.is-link:indeterminate{background-image:linear-gradient(to right,var(--blm-link) 30%,var(--blm-prg-bar-bg-clr) 30%)}.progress.is-info::-webkit-progress-value{background-color:var(--blm-info)}.progress.is-info::-moz-progress-bar{background-color:var(--blm-info)}.progress.is-info::-ms-fill{background-color:var(--blm-info)}.progress.is-info:indeterminate{background-image:linear-gradient(to right,var(--blm-info) 30%,var(--blm-prg-bar-bg-clr) 30%)}.progress.is-success::-webkit-progress-value{background-color:var(--blm-sucs)}.progress.is-success::-moz-progress-bar{background-color:var(--blm-sucs)}.progress.is-success::-ms-fill{background-color:var(--blm-sucs)}.progress.is-success:indeterminate{background-image:linear-gradient(to right,var(--blm-sucs) 30%,var(--blm-prg-bar-bg-clr) 30%)}.progress.is-warning::-webkit-progress-value{background-color:var(--blm-warn)}.progress.is-warning::-moz-progress-bar{background-color:var(--blm-warn)}.progress.is-warning::-ms-fill{background-color:var(--blm-warn)}.progress.is-warning:indeterminate{background-image:linear-gradient(to right,var(--blm-warn) 30%,var(--blm-prg-bar-bg-clr) 30%)}.progress.is-danger::-webkit-progress-value{background-color:var(--blm-dang)}.progress.is-danger::-moz-progress-bar{background-color:var(--blm-dang)}.progress.is-danger::-ms-fill{background-color:var(--blm-dang)}.progress.is-danger:indeterminate{background-image:linear-gradient(to right,var(--blm-dang) 30%,var(--blm-prg-bar-bg-clr) 30%)}.progress:indeterminate{-webkit-animation-duration:var(--blm-prg-indeterminate-duration);animation-duration:var(--blm-prg-indeterminate-duration);-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:moveIndeterminate;animation-name:moveIndeterminate;-webkit-animation-timing-function:linear;animation-timing-function:linear;background-color:var(--blm-prg-bar-bg-clr);background-image:linear-gradient(to right,var(--blm-txt) 30%,var(--blm-prg-bar-bg-clr) 30%);background-position:top left;background-repeat:no-repeat;background-size:150% 150%}.progress:indeterminate::-webkit-progress-bar{background-color:transparent}.progress:indeterminate::-moz-progress-bar{background-color:transparent}.progress.is-small{height:var(--blm-s-small)}.progress.is-medium{height:var(--blm-s-medium)}.progress.is-large{height:var(--blm-s-lg)}@-webkit-keyframes moveIndeterminate{from{background-position:200% 0}to{background-position:-200% 0}}@keyframes moveIndeterminate{from{background-position:200% 0}to{background-position:-200% 0}}.table{background-color:var(--blm-table-bg-clr);color:var(--blm-table-clr)}.table td,.table th{border:var(--blm-table-cell-bd);border-width:var(--blm-table-cell-bd-width);padding:var(--blm-table-cell-p);vertical-align:top}.table td.is-white,.table th.is-white{background-color:var(--blm-white);border-color:var(--blm-white);color:var(--blm-white-inv)}.table td.is-black,.table th.is-black{background-color:var(--blm-black);border-color:var(--blm-black);color:var(--blm-black-inv)}.table td.is-light,.table th.is-light{background-color:var(--blm-light);border-color:var(--blm-light);color:var(--blm-light-inv)}.table td.is-dark,.table th.is-dark{background-color:var(--blm-dark);border-color:var(--blm-dark);color:var(--blm-dark-inv)}.table td.is-primary,.table th.is-primary{background-color:var(--blm-prim);border-color:var(--blm-prim);color:var(--blm-prim-inv)}.table td.is-link,.table th.is-link{background-color:var(--blm-link);border-color:var(--blm-link);color:var(--blm-link-inv)}.table td.is-info,.table th.is-info{background-color:var(--blm-info);border-color:var(--blm-info);color:var(--blm-info-inv)}.table td.is-success,.table th.is-success{background-color:var(--blm-sucs);border-color:var(--blm-sucs);color:var(--blm-sucs-inv)}.table td.is-warning,.table th.is-warning{background-color:var(--blm-warn);border-color:var(--blm-warn);color:var(--blm-warn-inv)}.table td.is-danger,.table th.is-danger{background-color:var(--blm-dang);border-color:var(--blm-dang);color:var(--blm-dang-inv)}.table td.is-narrow,.table th.is-narrow{white-space:nowrap;width:1%}.table td.is-selected,.table th.is-selected{background-color:var(--blm-table-row-act-bg-clr);color:var(--blm-table-row-act-clr)}.table td.is-selected a,.table td.is-selected strong,.table th.is-selected a,.table th.is-selected strong{color:currentColor}.table td.is-vcentered,.table th.is-vcentered{vertical-align:middle}.table th{color:var(--blm-table-cell-hdg-clr)}.table th:not([align]){text-align:inherit}.table tr.is-selected{background-color:var(--blm-table-row-act-bg-clr);color:var(--blm-table-row-act-clr)}.table tr.is-selected a,.table tr.is-selected strong{color:currentColor}.table tr.is-selected td,.table tr.is-selected th{border-color:var(--blm-table-row-act-clr);color:currentColor}.table thead{background-color:var(--blm-table-head-bg-clr)}.table thead td,.table thead th{border-width:var(--blm-table-head-cell-bd-width);color:var(--blm-table-head-cell-clr)}.table tfoot{background-color:var(--blm-table-foot-bg-clr)}.table tfoot td,.table tfoot th{border-width:var(--blm-table-foot-cell-bd-width);color:var(--blm-table-foot-cell-clr)}.table tbody{background-color:var(--blm-table-body-bg-clr)}.table tbody tr:last-child td,.table tbody tr:last-child th{border-bottom-width:0}.table.is-bordered td,.table.is-bordered th{border-width:1px}.table.is-bordered tr:last-child td,.table.is-bordered tr:last-child th{border-bottom-width:1px}.table.is-fullwidth{width:100%}.table.is-hoverable tbody tr:not(.is-selected):hover,.table.is-hoverable.is-striped tbody tr:not(.is-selected):hover{background-color:var(--blm-table-row-hov-bg-clr)}.table.is-hoverable.is-striped tbody tr:not(.is-selected):hover:nth-child(even){background-color:var(--blm-table-striped-row-even-hov-bg-clr)}.table.is-narrow td,.table.is-narrow th{padding:.25em .5em}.table.is-striped tbody tr:not(.is-selected):nth-child(even){background-color:var(--blm-table-striped-row-even-bg-clr)}.table-container{-webkit-overflow-scrolling:touch;overflow:auto;overflow-y:hidden;max-width:100%}.tags{align-items:center;display:flex;flex-wrap:wrap;justify-content:flex-start}.tags .tag{margin-bottom:.5rem}.tags .tag:not(:last-child){margin-right:.5rem}.tags:last-child{margin-bottom:-.5rem}.tags:not(:last-child){margin-bottom:1rem}.tags.are-medium .tag:not(.is-normal):not(.is-large){font-size:var(--blm-s-normal)}.tags.are-large .tag:not(.is-normal):not(.is-medium){font-size:var(--blm-s-medium)}.tags.is-centered{justify-content:center}.tags.is-centered .tag{margin-right:.25rem;margin-left:.25rem}.tags.is-right{justify-content:flex-end}.tags.is-right .tag:not(:first-child){margin-left:.5rem}.tags.has-addons .tag,.tags.is-right .tag:not(:last-child){margin-right:0}.tags.has-addons .tag:not(:first-child){margin-left:0;border-top-left-radius:0;border-bottom-left-radius:0}.tags.has-addons .tag:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.tag:not(body){align-items:center;background-color:var(--blm-tag-bg-clr);border-radius:var(--blm-tag-radius);color:var(--blm-tag-clr);display:inline-flex;font-size:var(--blm-s-small);height:2em;justify-content:center;line-height:1.5;padding-left:.75em;padding-right:.75em;white-space:nowrap}.tag:not(body) .delete{margin-left:.25rem;margin-right:-.375rem}.tag:not(body).is-white{background-color:var(--blm-white);color:var(--blm-white-inv)}.tag:not(body).is-black{background-color:var(--blm-black);color:var(--blm-black-inv)}.tag:not(body).is-light{background-color:var(--blm-light);color:var(--blm-light-inv)}.tag:not(body).is-dark{background-color:var(--blm-dark);color:var(--blm-dark-inv)}.tag:not(body).is-primary{background-color:var(--blm-prim);color:var(--blm-prim-inv)}.tag:not(body).is-primary.is-light{background-color:var(--blm-prim-light);color:var(--blm-prim-dark)}.tag:not(body).is-link{background-color:var(--blm-link);color:var(--blm-link-inv)}.tag:not(body).is-link.is-light{background-color:var(--blm-link-light);color:var(--blm-link-dark)}.tag:not(body).is-info{background-color:var(--blm-info);color:var(--blm-info-inv)}.tag:not(body).is-info.is-light{background-color:var(--blm-info-light);color:var(--blm-info-dark)}.tag:not(body).is-success{background-color:var(--blm-sucs);color:var(--blm-sucs-inv)}.tag:not(body).is-success.is-light{background-color:var(--blm-sucs-light);color:var(--blm-sucs-dark)}.tag:not(body).is-warning{background-color:var(--blm-warn);color:var(--blm-warn-inv)}.tag:not(body).is-warning.is-light{background-color:var(--blm-warn-light);color:var(--blm-warn-dark)}.tag:not(body).is-danger{background-color:var(--blm-dang);color:var(--blm-dang-inv)}.tag:not(body).is-danger.is-light{background-color:var(--blm-dang-light);color:var(--blm-dang-dark)}.tag:not(body).is-normal{font-size:var(--blm-s-small)}.tag:not(body).is-medium{font-size:var(--blm-s-normal)}.tag:not(body).is-large{font-size:var(--blm-s-medium)}.tag:not(body) .icon:first-child:not(:last-child){margin-left:-.375em;margin-right:.1875em}.tag:not(body) .icon:last-child:not(:first-child){margin-left:.1875em;margin-right:-.375em}.tag:not(body) .icon:first-child:last-child{margin-left:-.375em;margin-right:-.375em}.tag:not(body).is-delete{margin-left:var(--blm-tag-delete-m);padding:0;position:relative;width:2em}.tag:not(body).is-delete::after,.tag:not(body).is-delete::before{background-color:currentColor;content:\\"\\";display:block;left:50%;position:absolute;top:50%;transform:translateX(-50%) translateY(-50%) rotate(45deg);transform-origin:center center}.tag:not(body).is-delete::before{height:1px;width:50%}.tag:not(body).is-delete::after{height:50%;width:1px}.tag:not(body).is-delete:focus,.tag:not(body).is-delete:hover{background-color:hsla(var(--blm-tag-bg-clr-h),var(--blm-tag-bg-clr-s),calc(var(--blm-tag-bg-clr-l) - 5%),var(--blm-tag-bg-clr-a))}.tag:not(body).is-delete:active{background-color:hsla(var(--blm-tag-bg-clr-h),var(--blm-tag-bg-clr-s),calc(var(--blm-tag-bg-clr-l) - 10%),var(--blm-tag-bg-clr-a))}.tag:not(body).is-rounded{border-radius:var(--blm-radius-rounded)}a.tag:hover{text-decoration:underline}.subtitle,.title{word-break:break-word}.subtitle em,.subtitle span,.title em,.title span{font-weight:inherit}.subtitle sub,.title sub{font-size:var(--blm-title-sub-s)}.subtitle sup,.title sup{font-size:var(--blm-title-sup-s)}.subtitle .tag,.title .tag{vertical-align:middle}.title{color:var(--blm-title-clr);font-family:var(--blm-title-family);font-size:var(--blm-title-s);font-weight:var(--blm-title-weight);line-height:var(--blm-title-line-height)}.title strong{color:var(--blm-title-strong-clr);font-weight:var(--blm-title-strong-weight)}.title+.highlight{margin-top:-.75rem}.title:not(.is-spaced)+.subtitle{margin-top:var(--blm-subtitle-negative-m)}.title.is-1{font-size:var(--blm-s-1)}.title.is-2{font-size:var(--blm-s-2)}.title.is-3{font-size:var(--blm-s-3)}.title.is-4{font-size:var(--blm-s-4)}.title.is-5{font-size:var(--blm-s-5)}.title.is-6{font-size:var(--blm-s-6)}.title.is-7{font-size:var(--blm-s-7)}.subtitle{color:var(--blm-subtitle-clr);font-family:var(--blm-subtitle-family);font-size:var(--blm-subtitle-s);font-weight:var(--blm-subtitle-weight);line-height:var(--blm-subtitle-line-height)}.subtitle strong{color:var(--blm-subtitle-strong-clr);font-weight:var(--blm-subtitle-strong-weight)}.subtitle:not(.is-spaced)+.title{margin-top:var(--blm-subtitle-negative-m)}.subtitle.is-1{font-size:var(--blm-s-1)}.subtitle.is-2{font-size:var(--blm-s-2)}.subtitle.is-3{font-size:var(--blm-s-3)}.subtitle.is-4{font-size:var(--blm-s-4)}.subtitle.is-5{font-size:var(--blm-s-5)}.subtitle.is-6{font-size:var(--blm-s-6)}.subtitle.is-7{font-size:var(--blm-s-7)}.heading{display:block;font-size:11px;letter-spacing:1px;margin-bottom:5px;text-transform:uppercase}.highlight{font-weight:var(--blm-weight-normal);max-width:100%;overflow:hidden;padding:0}.highlight pre{overflow:auto;max-width:100%}.number{align-items:center;background-color:var(--blm-bg);border-radius:var(--blm-radius-rounded);display:inline-flex;font-size:var(--blm-s-medium);height:2em;justify-content:center;margin-right:1.5rem;min-width:2.5em;padding:.25rem .5rem;text-align:center;vertical-align:top}.input,.select select,.textarea{background-color:var(--blm-input-bg-clr);border-color:var(--blm-input-bd-clr);border-radius:var(--blm-input-radius);color:var(--blm-input-clr)}.input::-moz-placeholder,.select select::-moz-placeholder,.textarea::-moz-placeholder{color:var(--blm-input-placeholder-clr)}.input::-webkit-input-placeholder,.select select::-webkit-input-placeholder,.textarea::-webkit-input-placeholder{color:var(--blm-input-placeholder-clr)}.input:-moz-placeholder,.select select:-moz-placeholder,.textarea:-moz-placeholder{color:var(--blm-input-placeholder-clr)}.input:-ms-input-placeholder,.select select:-ms-input-placeholder,.textarea:-ms-input-placeholder{color:var(--blm-input-placeholder-clr)}.input:hover,.is-hovered.input,.is-hovered.textarea,.select select.is-hovered,.select select:hover,.textarea:hover{border-color:var(--blm-input-hov-bd-clr)}.input:active,.input:focus,.is-active.input,.is-active.textarea,.is-focused.input,.is-focused.textarea,.select select.is-active,.select select.is-focused,.select select:active,.select select:focus,.textarea:active,.textarea:focus{border-color:var(--blm-input-foc-bd-clr);box-shadow:var(--blm-input-foc-box-shadow-s) var(--blm-input-foc-box-shadow-clr)}.input[disabled],.select fieldset[disabled] select,.select select[disabled],.textarea[disabled],fieldset[disabled] .input,fieldset[disabled] .select select,fieldset[disabled] .textarea{background-color:var(--blm-input-dsbl-bg-clr);border-color:var(--blm-input-dsbl-bd-clr);box-shadow:none;color:var(--blm-input-dsbl-clr)}.input[disabled]::-moz-placeholder,.select fieldset[disabled] select::-moz-placeholder,.select select[disabled]::-moz-placeholder,.textarea[disabled]::-moz-placeholder,fieldset[disabled] .input::-moz-placeholder,fieldset[disabled] .select select::-moz-placeholder,fieldset[disabled] .textarea::-moz-placeholder{color:var(--blm-input-dsbl-placeholder-clr)}.input[disabled]::-webkit-input-placeholder,.select fieldset[disabled] select::-webkit-input-placeholder,.select select[disabled]::-webkit-input-placeholder,.textarea[disabled]::-webkit-input-placeholder,fieldset[disabled] .input::-webkit-input-placeholder,fieldset[disabled] .select select::-webkit-input-placeholder,fieldset[disabled] .textarea::-webkit-input-placeholder{color:var(--blm-input-dsbl-placeholder-clr)}.input[disabled]:-moz-placeholder,.select fieldset[disabled] select:-moz-placeholder,.select select[disabled]:-moz-placeholder,.textarea[disabled]:-moz-placeholder,fieldset[disabled] .input:-moz-placeholder,fieldset[disabled] .select select:-moz-placeholder,fieldset[disabled] .textarea:-moz-placeholder{color:var(--blm-input-dsbl-placeholder-clr)}.input[disabled]:-ms-input-placeholder,.select fieldset[disabled] select:-ms-input-placeholder,.select select[disabled]:-ms-input-placeholder,.textarea[disabled]:-ms-input-placeholder,fieldset[disabled] .input:-ms-input-placeholder,fieldset[disabled] .select select:-ms-input-placeholder,fieldset[disabled] .textarea:-ms-input-placeholder{color:var(--blm-input-dsbl-placeholder-clr)}.input,.textarea{box-shadow:var(--blm-input-shadow);max-width:100%;width:100%}.input[readonly],.textarea[readonly]{box-shadow:none}.is-white.input,.is-white.textarea{border-color:var(--blm-white)}.is-white.input:active,.is-white.input:focus,.is-white.is-active.input,.is-white.is-active.textarea,.is-white.is-focused.input,.is-white.is-focused.textarea,.is-white.textarea:active,.is-white.textarea:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-white-h),var(--blm-white-s),var(--blm-white-l),.25)}.is-black.input,.is-black.textarea{border-color:var(--blm-black)}.is-black.input:active,.is-black.input:focus,.is-black.is-active.input,.is-black.is-active.textarea,.is-black.is-focused.input,.is-black.is-focused.textarea,.is-black.textarea:active,.is-black.textarea:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-black-h),var(--blm-black-s),var(--blm-black-l),.25)}.is-light.input,.is-light.textarea{border-color:var(--blm-light)}.is-light.input:active,.is-light.input:focus,.is-light.is-active.input,.is-light.is-active.textarea,.is-light.is-focused.input,.is-light.is-focused.textarea,.is-light.textarea:active,.is-light.textarea:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-light-h),var(--blm-light-s),var(--blm-light-l),.25)}.is-dark.input,.is-dark.textarea{border-color:var(--blm-dark)}.is-dark.input:active,.is-dark.input:focus,.is-dark.is-active.input,.is-dark.is-active.textarea,.is-dark.is-focused.input,.is-dark.is-focused.textarea,.is-dark.textarea:active,.is-dark.textarea:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-dark-h),var(--blm-dark-s),var(--blm-dark-l),.25)}.is-primary.input,.is-primary.textarea{border-color:var(--blm-prim)}.is-primary.input:active,.is-primary.input:focus,.is-primary.is-active.input,.is-primary.is-active.textarea,.is-primary.is-focused.input,.is-primary.is-focused.textarea,.is-primary.textarea:active,.is-primary.textarea:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-prim-h),var(--blm-prim-s),var(--blm-prim-l),.25)}.is-link.input,.is-link.textarea{border-color:var(--blm-link)}.is-link.input:active,.is-link.input:focus,.is-link.is-active.input,.is-link.is-active.textarea,.is-link.is-focused.input,.is-link.is-focused.textarea,.is-link.textarea:active,.is-link.textarea:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-link-h),var(--blm-link-s),var(--blm-link-l),.25)}.is-info.input,.is-info.textarea{border-color:var(--blm-info)}.is-info.input:active,.is-info.input:focus,.is-info.is-active.input,.is-info.is-active.textarea,.is-info.is-focused.input,.is-info.is-focused.textarea,.is-info.textarea:active,.is-info.textarea:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-info-h),var(--blm-info-s),var(--blm-info-l),.25)}.is-success.input,.is-success.textarea{border-color:var(--blm-sucs)}.is-success.input:active,.is-success.input:focus,.is-success.is-active.input,.is-success.is-active.textarea,.is-success.is-focused.input,.is-success.is-focused.textarea,.is-success.textarea:active,.is-success.textarea:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-sucs-h),var(--blm-sucs-s),var(--blm-sucs-l),.25)}.is-warning.input,.is-warning.textarea{border-color:var(--blm-warn)}.is-warning.input:active,.is-warning.input:focus,.is-warning.is-active.input,.is-warning.is-active.textarea,.is-warning.is-focused.input,.is-warning.is-focused.textarea,.is-warning.textarea:active,.is-warning.textarea:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-warn-h),var(--blm-warn-s),var(--blm-warn-l),.25)}.is-danger.input,.is-danger.textarea{border-color:var(--blm-dang)}.is-danger.input:active,.is-danger.input:focus,.is-danger.is-active.input,.is-danger.is-active.textarea,.is-danger.is-focused.input,.is-danger.is-focused.textarea,.is-danger.textarea:active,.is-danger.textarea:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-dang-h),var(--blm-dang-s),var(--blm-dang-l),.25)}.is-small.input,.is-small.textarea{border-radius:var(--blm-ctrl-radius-small);font-size:var(--blm-s-small)}.is-medium.input,.is-medium.textarea{font-size:var(--blm-s-medium)}.is-large.input,.is-large.textarea{font-size:var(--blm-s-lg)}.is-fullwidth.input,.is-fullwidth.textarea{display:block;width:100%}.is-inline.input,.is-inline.textarea{display:inline;width:auto}.input.is-rounded{border-radius:var(--blm-radius-rounded);padding-left:calc(var(--blm-ctrl-p-horizontal) + .375em);padding-right:calc(var(--blm-ctrl-p-horizontal) + .375em)}.input.is-static{background-color:transparent;border-color:transparent;box-shadow:none;padding-left:0;padding-right:0}.textarea{display:block;max-width:100%;min-width:100%;padding:var(--blm-txtarea-p);resize:vertical}.textarea:not([rows]){max-height:var(--blm-txtarea-max-height);min-height:var(--blm-txtarea-min-height)}.textarea[rows]{height:initial}.textarea.has-fixed-size{resize:none}.checkbox,.radio{cursor:pointer;display:inline-block;line-height:1.25;position:relative}.checkbox input,.radio input{cursor:pointer}.checkbox:hover,.radio:hover{color:var(--blm-input-hov-clr)}.checkbox[disabled],.radio[disabled],fieldset[disabled] .checkbox,fieldset[disabled] .radio{color:var(--blm-input-dsbl-clr);cursor:not-allowed}.radio+.radio{margin-left:.5em}.select{display:inline-block;max-width:100%;position:relative;vertical-align:top}.select:not(.is-multiple){height:var(--blm-input-height)}.select:not(.is-multiple):not(.is-loading)::after{border-color:var(--blm-input-arrow);right:1.125em;z-index:4}.select.is-rounded select{border-radius:var(--blm-radius-rounded);padding-left:1em}.select select{cursor:pointer;display:block;font-size:1em;max-width:100%;outline:0}.select select::-ms-expand{display:none}.select select[disabled]:hover,fieldset[disabled] .select select:hover{border-color:var(--blm-input-dsbl-bd-clr)}.select select:not([multiple]){padding-right:2.5em}.select select[multiple]{height:auto;padding:0}.select select[multiple] option{padding:.5em 1em}.select:not(.is-multiple):not(.is-loading):hover::after{border-color:var(--blm-input-hov-clr)}.select.is-white select,.select.is-white:not(:hover)::after{border-color:var(--blm-white)}.select.is-white select.is-hovered,.select.is-white select:hover{border-color:hsla(var(--blm-white-h),var(--blm-white-s),calc(var(--blm-white-l) - 5%),var(--blm-white-a))}.select.is-white select.is-active,.select.is-white select.is-focused,.select.is-white select:active,.select.is-white select:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-white-h),var(--blm-white-s),var(--blm-white-l),.25)}.select.is-black select,.select.is-black:not(:hover)::after{border-color:var(--blm-black)}.select.is-black select.is-hovered,.select.is-black select:hover{border-color:hsla(var(--blm-black-h),var(--blm-black-s),calc(var(--blm-black-l) - 5%),var(--blm-black-a))}.select.is-black select.is-active,.select.is-black select.is-focused,.select.is-black select:active,.select.is-black select:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-black-h),var(--blm-black-s),var(--blm-black-l),.25)}.select.is-light select,.select.is-light:not(:hover)::after{border-color:var(--blm-light)}.select.is-light select.is-hovered,.select.is-light select:hover{border-color:hsla(var(--blm-light-h),var(--blm-light-s),calc(var(--blm-light-l) - 5%),var(--blm-light-a))}.select.is-light select.is-active,.select.is-light select.is-focused,.select.is-light select:active,.select.is-light select:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-light-h),var(--blm-light-s),var(--blm-light-l),.25)}.select.is-dark select,.select.is-dark:not(:hover)::after{border-color:var(--blm-dark)}.select.is-dark select.is-hovered,.select.is-dark select:hover{border-color:hsla(var(--blm-dark-h),var(--blm-dark-s),calc(var(--blm-dark-l) - 5%),var(--blm-dark-a))}.select.is-dark select.is-active,.select.is-dark select.is-focused,.select.is-dark select:active,.select.is-dark select:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-dark-h),var(--blm-dark-s),var(--blm-dark-l),.25)}.select.is-primary select,.select.is-primary:not(:hover)::after{border-color:var(--blm-prim)}.select.is-primary select.is-hovered,.select.is-primary select:hover{border-color:hsla(var(--blm-prim-h),var(--blm-prim-s),calc(var(--blm-prim-l) - 5%),var(--blm-prim-a))}.select.is-primary select.is-active,.select.is-primary select.is-focused,.select.is-primary select:active,.select.is-primary select:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-prim-h),var(--blm-prim-s),var(--blm-prim-l),.25)}.select.is-link select,.select.is-link:not(:hover)::after{border-color:var(--blm-link)}.select.is-link select.is-hovered,.select.is-link select:hover{border-color:hsla(var(--blm-link-h),var(--blm-link-s),calc(var(--blm-link-l) - 5%),var(--blm-link-a))}.select.is-link select.is-active,.select.is-link select.is-focused,.select.is-link select:active,.select.is-link select:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-link-h),var(--blm-link-s),var(--blm-link-l),.25)}.select.is-info select,.select.is-info:not(:hover)::after{border-color:var(--blm-info)}.select.is-info select.is-hovered,.select.is-info select:hover{border-color:hsla(var(--blm-info-h),var(--blm-info-s),calc(var(--blm-info-l) - 5%),var(--blm-info-a))}.select.is-info select.is-active,.select.is-info select.is-focused,.select.is-info select:active,.select.is-info select:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-info-h),var(--blm-info-s),var(--blm-info-l),.25)}.select.is-success select,.select.is-success:not(:hover)::after{border-color:var(--blm-sucs)}.select.is-success select.is-hovered,.select.is-success select:hover{border-color:hsla(var(--blm-sucs-h),var(--blm-sucs-s),calc(var(--blm-sucs-l) - 5%),var(--blm-sucs-a))}.select.is-success select.is-active,.select.is-success select.is-focused,.select.is-success select:active,.select.is-success select:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-sucs-h),var(--blm-sucs-s),var(--blm-sucs-l),.25)}.select.is-warning select,.select.is-warning:not(:hover)::after{border-color:var(--blm-warn)}.select.is-warning select.is-hovered,.select.is-warning select:hover{border-color:hsla(var(--blm-warn-h),var(--blm-warn-s),calc(var(--blm-warn-l) - 5%),var(--blm-warn-a))}.select.is-warning select.is-active,.select.is-warning select.is-focused,.select.is-warning select:active,.select.is-warning select:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-warn-h),var(--blm-warn-s),var(--blm-warn-l),.25)}.select.is-danger select,.select.is-danger:not(:hover)::after{border-color:var(--blm-dang)}.select.is-danger select.is-hovered,.select.is-danger select:hover{border-color:hsla(var(--blm-dang-h),var(--blm-dang-s),calc(var(--blm-dang-l) - 5%),var(--blm-dang-a))}.select.is-danger select.is-active,.select.is-danger select.is-focused,.select.is-danger select:active,.select.is-danger select:focus{box-shadow:var(--blm-input-foc-box-shadow-s) hsla(var(--blm-dang-h),var(--blm-dang-s),var(--blm-dang-l),.25)}.select.is-small{border-radius:var(--blm-ctrl-radius-small);font-size:var(--blm-s-small)}.select.is-medium{font-size:var(--blm-s-medium)}.select.is-large{font-size:var(--blm-s-lg)}.select.is-disabled::after{border-color:var(--blm-input-dsbl-clr)}.select.is-fullwidth,.select.is-fullwidth select{width:100%}.select.is-loading::after{margin-top:0;position:absolute;right:.625em;top:.625em;transform:none}.select.is-loading.is-small:after{font-size:var(--blm-s-small)}.select.is-loading.is-medium:after{font-size:var(--blm-s-medium)}.select.is-loading.is-large:after{font-size:var(--blm-s-lg)}.file{align-items:stretch;display:flex;justify-content:flex-start;position:relative}.file.is-white .file-cta{background-color:var(--blm-white);border-color:transparent;color:var(--blm-white-inv)}.file.is-white.is-hovered .file-cta,.file.is-white:hover .file-cta{background-color:hsla(var(--blm-white-h),var(--blm-white-s),calc(var(--blm-white-l) - 2.5%),var(--blm-white-a));border-color:transparent;color:var(--blm-white-inv)}.file.is-white.is-focused .file-cta,.file.is-white:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em hsla(var(--blm-white-h),var(--blm-white-s),var(--blm-white-l),.25);color:var(--blm-white-inv)}.file.is-white.is-active .file-cta,.file.is-white:active .file-cta{background-color:hsla(var(--blm-white-h),var(--blm-white-s),calc(var(--blm-white-l) - 5%),var(--blm-white-a));border-color:transparent;color:var(--blm-white-inv)}.file.is-black .file-cta{background-color:var(--blm-black);border-color:transparent;color:var(--blm-black-inv)}.file.is-black.is-hovered .file-cta,.file.is-black:hover .file-cta{background-color:hsla(var(--blm-black-h),var(--blm-black-s),calc(var(--blm-black-l) - 2.5%),var(--blm-black-a));border-color:transparent;color:var(--blm-black-inv)}.file.is-black.is-focused .file-cta,.file.is-black:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em hsla(var(--blm-black-h),var(--blm-black-s),var(--blm-black-l),.25);color:var(--blm-black-inv)}.file.is-black.is-active .file-cta,.file.is-black:active .file-cta{background-color:hsla(var(--blm-black-h),var(--blm-black-s),calc(var(--blm-black-l) - 5%),var(--blm-black-a));border-color:transparent;color:var(--blm-black-inv)}.file.is-light .file-cta{background-color:var(--blm-light);border-color:transparent;color:var(--blm-light-inv)}.file.is-light.is-hovered .file-cta,.file.is-light:hover .file-cta{background-color:hsla(var(--blm-light-h),var(--blm-light-s),calc(var(--blm-light-l) - 2.5%),var(--blm-light-a));border-color:transparent;color:var(--blm-light-inv)}.file.is-light.is-focused .file-cta,.file.is-light:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em hsla(var(--blm-light-h),var(--blm-light-s),var(--blm-light-l),.25);color:var(--blm-light-inv)}.file.is-light.is-active .file-cta,.file.is-light:active .file-cta{background-color:hsla(var(--blm-light-h),var(--blm-light-s),calc(var(--blm-light-l) - 5%),var(--blm-light-a));border-color:transparent;color:var(--blm-light-inv)}.file.is-dark .file-cta{background-color:var(--blm-dark);border-color:transparent;color:var(--blm-dark-inv)}.file.is-dark.is-hovered .file-cta,.file.is-dark:hover .file-cta{background-color:hsla(var(--blm-dark-h),var(--blm-dark-s),calc(var(--blm-dark-l) - 2.5%),var(--blm-dark-a));border-color:transparent;color:var(--blm-dark-inv)}.file.is-dark.is-focused .file-cta,.file.is-dark:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em hsla(var(--blm-dark-h),var(--blm-dark-s),var(--blm-dark-l),.25);color:var(--blm-dark-inv)}.file.is-dark.is-active .file-cta,.file.is-dark:active .file-cta{background-color:hsla(var(--blm-dark-h),var(--blm-dark-s),calc(var(--blm-dark-l) - 5%),var(--blm-dark-a));border-color:transparent;color:var(--blm-dark-inv)}.file.is-primary .file-cta{background-color:var(--blm-prim);border-color:transparent;color:var(--blm-prim-inv)}.file.is-primary.is-hovered .file-cta,.file.is-primary:hover .file-cta{background-color:hsla(var(--blm-prim-h),var(--blm-prim-s),calc(var(--blm-prim-l) - 2.5%),var(--blm-prim-a));border-color:transparent;color:var(--blm-prim-inv)}.file.is-primary.is-focused .file-cta,.file.is-primary:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em hsla(var(--blm-prim-h),var(--blm-prim-s),var(--blm-prim-l),.25);color:var(--blm-prim-inv)}.file.is-primary.is-active .file-cta,.file.is-primary:active .file-cta{background-color:hsla(var(--blm-prim-h),var(--blm-prim-s),calc(var(--blm-prim-l) - 5%),var(--blm-prim-a));border-color:transparent;color:var(--blm-prim-inv)}.file.is-link .file-cta{background-color:var(--blm-link);border-color:transparent;color:var(--blm-link-inv)}.file.is-link.is-hovered .file-cta,.file.is-link:hover .file-cta{background-color:hsla(var(--blm-link-h),var(--blm-link-s),calc(var(--blm-link-l) - 2.5%),var(--blm-link-a));border-color:transparent;color:var(--blm-link-inv)}.file.is-link.is-focused .file-cta,.file.is-link:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em hsla(var(--blm-link-h),var(--blm-link-s),var(--blm-link-l),.25);color:var(--blm-link-inv)}.file.is-link.is-active .file-cta,.file.is-link:active .file-cta{background-color:hsla(var(--blm-link-h),var(--blm-link-s),calc(var(--blm-link-l) - 5%),var(--blm-link-a));border-color:transparent;color:var(--blm-link-inv)}.file.is-info .file-cta{background-color:var(--blm-info);border-color:transparent;color:var(--blm-info-inv)}.file.is-info.is-hovered .file-cta,.file.is-info:hover .file-cta{background-color:hsla(var(--blm-info-h),var(--blm-info-s),calc(var(--blm-info-l) - 2.5%),var(--blm-info-a));border-color:transparent;color:var(--blm-info-inv)}.file.is-info.is-focused .file-cta,.file.is-info:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em hsla(var(--blm-info-h),var(--blm-info-s),var(--blm-info-l),.25);color:var(--blm-info-inv)}.file.is-info.is-active .file-cta,.file.is-info:active .file-cta{background-color:hsla(var(--blm-info-h),var(--blm-info-s),calc(var(--blm-info-l) - 5%),var(--blm-info-a));border-color:transparent;color:var(--blm-info-inv)}.file.is-success .file-cta{background-color:var(--blm-sucs);border-color:transparent;color:var(--blm-sucs-inv)}.file.is-success.is-hovered .file-cta,.file.is-success:hover .file-cta{background-color:hsla(var(--blm-sucs-h),var(--blm-sucs-s),calc(var(--blm-sucs-l) - 2.5%),var(--blm-sucs-a));border-color:transparent;color:var(--blm-sucs-inv)}.file.is-success.is-focused .file-cta,.file.is-success:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em hsla(var(--blm-sucs-h),var(--blm-sucs-s),var(--blm-sucs-l),.25);color:var(--blm-sucs-inv)}.file.is-success.is-active .file-cta,.file.is-success:active .file-cta{background-color:hsla(var(--blm-sucs-h),var(--blm-sucs-s),calc(var(--blm-sucs-l) - 5%),var(--blm-sucs-a));border-color:transparent;color:var(--blm-sucs-inv)}.file.is-warning .file-cta{background-color:var(--blm-warn);border-color:transparent;color:var(--blm-warn-inv)}.file.is-warning.is-hovered .file-cta,.file.is-warning:hover .file-cta{background-color:hsla(var(--blm-warn-h),var(--blm-warn-s),calc(var(--blm-warn-l) - 2.5%),var(--blm-warn-a));border-color:transparent;color:var(--blm-warn-inv)}.file.is-warning.is-focused .file-cta,.file.is-warning:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em hsla(var(--blm-warn-h),var(--blm-warn-s),var(--blm-warn-l),.25);color:var(--blm-warn-inv)}.file.is-warning.is-active .file-cta,.file.is-warning:active .file-cta{background-color:hsla(var(--blm-warn-h),var(--blm-warn-s),calc(var(--blm-warn-l) - 5%),var(--blm-warn-a));border-color:transparent;color:var(--blm-warn-inv)}.file.is-danger .file-cta{background-color:var(--blm-dang);border-color:transparent;color:var(--blm-dang-inv)}.file.is-danger.is-hovered .file-cta,.file.is-danger:hover .file-cta{background-color:hsla(var(--blm-dang-h),var(--blm-dang-s),calc(var(--blm-dang-l) - 2.5%),var(--blm-dang-a));border-color:transparent;color:var(--blm-dang-inv)}.file.is-danger.is-focused .file-cta,.file.is-danger:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em hsla(var(--blm-dang-h),var(--blm-dang-s),var(--blm-dang-l),.25);color:var(--blm-dang-inv)}.file.is-danger.is-active .file-cta,.file.is-danger:active .file-cta{background-color:hsla(var(--blm-dang-h),var(--blm-dang-s),calc(var(--blm-dang-l) - 5%),var(--blm-dang-a));border-color:transparent;color:var(--blm-dang-inv)}.file.is-small{font-size:var(--blm-s-small)}.file.is-medium{font-size:var(--blm-s-medium)}.file.is-medium .file-icon .fa{font-size:21px}.file.is-large{font-size:var(--blm-s-lg)}.file.is-large .file-icon .fa{font-size:28px}.file.has-name .file-cta{border-bottom-right-radius:0;border-top-right-radius:0}.file.has-name .file-name{border-bottom-left-radius:0;border-top-left-radius:0}.file.has-name.is-empty .file-cta{border-radius:var(--blm-file-radius)}.file.has-name.is-empty .file-name{display:none}.file.is-boxed .file-label{flex-direction:column}.file.is-boxed .file-cta{flex-direction:column;height:auto;padding:1em 3em}.file.is-boxed .file-name{border-width:0 1px 1px}.file.is-boxed .file-icon{height:1.5em;width:1.5em}.file.is-boxed .file-icon .fa{font-size:21px}.file.is-boxed.is-small .file-icon .fa{font-size:14px}.file.is-boxed.is-medium .file-icon .fa{font-size:28px}.file.is-boxed.is-large .file-icon .fa{font-size:35px}.file.is-boxed.has-name .file-cta{border-radius:var(--blm-file-radius) var(--blm-file-radius) 0 0}.file.is-boxed.has-name .file-name{border-radius:0 0 var(--blm-file-radius) var(--blm-file-radius);border-width:0 1px 1px}.file.is-centered{justify-content:center}.file.is-fullwidth .file-label{width:100%}.file.is-fullwidth .file-name{flex-grow:1;max-width:none}.file.is-right{justify-content:flex-end}.file.is-right .file-cta{border-radius:0 var(--blm-file-radius) var(--blm-file-radius) 0}.file.is-right .file-name{border-radius:var(--blm-file-radius) 0 0 var(--blm-file-radius);border-width:1px 0 1px 1px;order:-1}.file-label{align-items:stretch;display:flex;cursor:pointer;justify-content:flex-start;overflow:hidden;position:relative}.file-label:hover .file-cta{background-color:hsla(var(--blm-file-cta-bg-clr-h),var(--blm-file-cta-bg-clr-s),calc(var(--blm-file-cta-bg-clr-l) - 2.5%),var(--blm-file-cta-bg-clr-a));color:var(--blm-file-cta-hov-clr)}.file-label:hover .file-name{border-color:hsla(var(--blm-file-name-bd-clr-h),var(--blm-file-name-bd-clr-s),calc(var(--blm-file-name-bd-clr-l) - 2.5%),var(--blm-file-name-bd-clr-a))}.file-label:active .file-cta{background-color:hsla(var(--blm-file-cta-bg-clr-h),var(--blm-file-cta-bg-clr-s),calc(var(--blm-file-cta-bg-clr-l) - 5%),var(--blm-file-cta-bg-clr-a));color:var(--blm-file-cta-act-clr)}.file-label:active .file-name{border-color:hsla(var(--blm-file-name-bd-clr-h),var(--blm-file-name-bd-clr-s),calc(var(--blm-file-name-bd-clr-l) - 5%),var(--blm-file-name-bd-clr-a))}.file-input{height:100%;left:0;opacity:0;outline:0;position:absolute;top:0;width:100%}.file-cta,.file-name{border-color:var(--blm-file-bd-clr);border-radius:var(--blm-file-radius);font-size:1em;padding-left:1em;padding-right:1em;white-space:nowrap}.file-cta{background-color:var(--blm-file-cta-bg-clr);color:var(--blm-file-cta-clr)}.file-name{border-color:var(--blm-file-name-bd-clr);border-style:var(--blm-file-name-bd-style);border-width:var(--blm-file-name-bd-width);display:block;max-width:var(--blm-file-name-max-width);overflow:hidden;text-align:inherit;text-overflow:ellipsis}.file-icon{align-items:center;display:flex;height:1em;justify-content:center;margin-right:.5em;width:1em}.file-icon .fa{font-size:14px}.label{color:var(--blm-label-clr);display:block;font-size:var(--blm-s-normal);font-weight:var(--blm-label-weight)}.label:not(:last-child){margin-bottom:.5em}.label.is-small{font-size:var(--blm-s-small)}.label.is-medium{font-size:var(--blm-s-medium)}.label.is-large{font-size:var(--blm-s-lg)}.help{display:block;font-size:var(--blm-help-s);margin-top:.25rem}.help.is-white{color:var(--blm-white)}.help.is-black{color:var(--blm-black)}.help.is-light{color:var(--blm-light)}.help.is-dark{color:var(--blm-dark)}.help.is-primary{color:var(--blm-prim)}.help.is-link{color:var(--blm-link)}.help.is-info{color:var(--blm-info)}.help.is-success{color:var(--blm-sucs)}.help.is-warning{color:var(--blm-warn)}.help.is-danger{color:var(--blm-dang)}.field:not(:last-child){margin-bottom:.75rem}.field.has-addons{display:flex;justify-content:flex-start}.field.has-addons .control:not(:last-child){margin-right:-1px}.field.has-addons .control:not(:first-child):not(:last-child) .button,.field.has-addons .control:not(:first-child):not(:last-child) .input,.field.has-addons .control:not(:first-child):not(:last-child) .select select{border-radius:0}.field.has-addons .control:first-child:not(:only-child) .button,.field.has-addons .control:first-child:not(:only-child) .input,.field.has-addons .control:first-child:not(:only-child) .select select{border-bottom-right-radius:0;border-top-right-radius:0}.field.has-addons .control:last-child:not(:only-child) .button,.field.has-addons .control:last-child:not(:only-child) .input,.field.has-addons .control:last-child:not(:only-child) .select select{border-bottom-left-radius:0;border-top-left-radius:0}.field.has-addons .control .button:not([disabled]).is-hovered,.field.has-addons .control .button:not([disabled]):hover,.field.has-addons .control .input:not([disabled]).is-hovered,.field.has-addons .control .input:not([disabled]):hover,.field.has-addons .control .select select:not([disabled]).is-hovered,.field.has-addons .control .select select:not([disabled]):hover{z-index:2}.field.has-addons .control .button:not([disabled]).is-active,.field.has-addons .control .button:not([disabled]).is-focused,.field.has-addons .control .button:not([disabled]):active,.field.has-addons .control .button:not([disabled]):focus,.field.has-addons .control .input:not([disabled]).is-active,.field.has-addons .control .input:not([disabled]).is-focused,.field.has-addons .control .input:not([disabled]):active,.field.has-addons .control .input:not([disabled]):focus,.field.has-addons .control .select select:not([disabled]).is-active,.field.has-addons .control .select select:not([disabled]).is-focused,.field.has-addons .control .select select:not([disabled]):active,.field.has-addons .control .select select:not([disabled]):focus{z-index:3}.field.has-addons .control .button:not([disabled]).is-active:hover,.field.has-addons .control .button:not([disabled]).is-focused:hover,.field.has-addons .control .button:not([disabled]):active:hover,.field.has-addons .control .button:not([disabled]):focus:hover,.field.has-addons .control .input:not([disabled]).is-active:hover,.field.has-addons .control .input:not([disabled]).is-focused:hover,.field.has-addons .control .input:not([disabled]):active:hover,.field.has-addons .control .input:not([disabled]):focus:hover,.field.has-addons .control .select select:not([disabled]).is-active:hover,.field.has-addons .control .select select:not([disabled]).is-focused:hover,.field.has-addons .control .select select:not([disabled]):active:hover,.field.has-addons .control .select select:not([disabled]):focus:hover{z-index:4}.field.has-addons .control.is-expanded{flex-grow:1;flex-shrink:1}.field.has-addons.has-addons-centered{justify-content:center}.field.has-addons.has-addons-right{justify-content:flex-end}.field.has-addons.has-addons-fullwidth .control{flex-grow:1;flex-shrink:0}.field.is-grouped{display:flex;justify-content:flex-start}.field.is-grouped>.control{flex-shrink:0}.field.is-grouped>.control:not(:last-child){margin-bottom:0;margin-right:.75rem}.field.is-grouped>.control.is-expanded{flex-grow:1;flex-shrink:1}.field.is-grouped.is-grouped-centered{justify-content:center}.field.is-grouped.is-grouped-right{justify-content:flex-end}.field.is-grouped.is-grouped-multiline{flex-wrap:wrap}.field.is-grouped.is-grouped-multiline>.control:last-child,.field.is-grouped.is-grouped-multiline>.control:not(:last-child){margin-bottom:.75rem}.field.is-grouped.is-grouped-multiline:last-child{margin-bottom:-.75rem}.field.is-grouped.is-grouped-multiline:not(:last-child){margin-bottom:0}.field-label .label{font-size:inherit}@media screen and (max-width:768px){.field-label{margin-bottom:.5rem}}.field-body .field .field{margin-bottom:0}@media screen and (min-width:769px),print{.field.is-horizontal{display:flex}.field-label{flex-basis:0;flex-grow:1;flex-shrink:0;margin-right:1.5rem;text-align:right}.field-label.is-small{font-size:var(--blm-s-small);padding-top:.375em}.field-label.is-normal{padding-top:.375em}.field-label.is-medium{font-size:var(--blm-s-medium);padding-top:.375em}.field-label.is-large{font-size:var(--blm-s-lg);padding-top:.375em}.field-body{display:flex;flex-basis:0;flex-grow:5;flex-shrink:1}.field-body .field{margin-bottom:0}.field-body>.field{flex-shrink:1}.field-body>.field:not(.is-narrow){flex-grow:1}.field-body>.field:not(:last-child){margin-right:.75rem}}.control{box-sizing:border-box;clear:both;font-size:var(--blm-s-normal);position:relative;text-align:inherit}.control.has-icons-left .input:focus~.icon,.control.has-icons-left .select:focus~.icon,.control.has-icons-right .input:focus~.icon,.control.has-icons-right .select:focus~.icon{color:var(--blm-input-icon-act-clr)}.control.has-icons-left .input.is-small~.icon,.control.has-icons-left .select.is-small~.icon,.control.has-icons-right .input.is-small~.icon,.control.has-icons-right .select.is-small~.icon{font-size:var(--blm-s-small)}.control.has-icons-left .input.is-medium~.icon,.control.has-icons-left .select.is-medium~.icon,.control.has-icons-right .input.is-medium~.icon,.control.has-icons-right .select.is-medium~.icon{font-size:var(--blm-s-medium)}.control.has-icons-left .input.is-large~.icon,.control.has-icons-left .select.is-large~.icon,.control.has-icons-right .input.is-large~.icon,.control.has-icons-right .select.is-large~.icon{font-size:var(--blm-s-lg)}.control.has-icons-left .icon,.control.has-icons-right .icon{color:var(--blm-input-icon-clr);height:var(--blm-input-height);pointer-events:none;position:absolute;top:0;width:var(--blm-input-height);z-index:4}.control.has-icons-left .input,.control.has-icons-left .select select{padding-left:var(--blm-input-height)}.control.has-icons-left .icon.is-left{left:0}.control.has-icons-right .input,.control.has-icons-right .select select{padding-right:var(--blm-input-height)}.control.has-icons-right .icon.is-right{right:0}.control.is-loading::after{position:absolute!important;right:.625em;top:.625em;z-index:4}.control.is-loading.is-small:after{font-size:var(--blm-s-small)}.control.is-loading.is-medium:after{font-size:var(--blm-s-medium)}.control.is-loading.is-large:after{font-size:var(--blm-s-lg)}.breadcrumb{font-size:var(--blm-s-normal);white-space:nowrap}.breadcrumb a{align-items:center;color:var(--blm-bread-itm-clr);display:flex;justify-content:center;padding:var(--blm-bread-itm-p-vertical) var(--blm-bread-itm-p-horizontal)}.breadcrumb a:hover{color:var(--blm-bread-itm-hov-clr)}.breadcrumb li{align-items:center;display:flex}.breadcrumb li:first-child a{padding-left:0}.breadcrumb li.is-active a{color:var(--blm-bread-itm-act-clr);cursor:default;pointer-events:none}.breadcrumb li+li::before{color:var(--blm-bread-itm-separator-clr);content:\\"\\\\0002f\\"}.breadcrumb ol,.breadcrumb ul{align-items:flex-start;display:flex;flex-wrap:wrap;justify-content:flex-start}.breadcrumb .icon:first-child{margin-right:.5em}.breadcrumb .icon:last-child{margin-left:.5em}.breadcrumb.is-centered ol,.breadcrumb.is-centered ul{justify-content:center}.breadcrumb.is-right ol,.breadcrumb.is-right ul{justify-content:flex-end}.breadcrumb.is-small{font-size:var(--blm-s-small)}.breadcrumb.is-medium{font-size:var(--blm-s-medium)}.breadcrumb.is-large{font-size:var(--blm-s-lg)}.breadcrumb.has-arrow-separator li+li::before{content:\\"\\\\02192\\"}.breadcrumb.has-bullet-separator li+li::before{content:\\"\\\\02022\\"}.breadcrumb.has-dot-separator li+li::before{content:\\"\\\\000b7\\"}.breadcrumb.has-succeeds-separator li+li::before{content:\\"\\\\0227B\\"}.card{background-color:var(--blm-card-bg-clr);box-shadow:var(--blm-card-shadow);color:var(--blm-card-clr);max-width:100%;position:relative}.card-header{background-color:var(--blm-card-hd-bg-clr);align-items:stretch;box-shadow:var(--blm-card-hd-shadow);display:flex}.card-header-title{align-items:center;color:var(--blm-card-hd-clr);display:flex;flex-grow:1;font-weight:var(--blm-card-hd-weight);padding:var(--blm-card-hd-p)}.card-header-title.is-centered{justify-content:center}.card-header-icon{align-items:center;cursor:pointer;display:flex;justify-content:center;padding:var(--blm-card-hd-p)}.card-image{display:block;position:relative}.card-content{background-color:var(--blm-card-ct-bg-clr);padding:var(--blm-card-ct-p)}.card-footer{background-color:var(--blm-card-ft-bg-clr);border-top:var(--blm-card-ft-bd-top);align-items:stretch;display:flex}.card-footer-item{align-items:center;display:flex;flex-basis:0;flex-grow:1;flex-shrink:0;justify-content:center;padding:var(--blm-card-ft-p)}.card-footer-item:not(:last-child){border-right:var(--blm-card-ft-bd-top)}.card .media:not(:last-child){margin-bottom:var(--blm-card-media-m)}.dropdown{display:inline-flex;position:relative;vertical-align:top}.dropdown.is-active .dropdown-menu,.dropdown.is-hoverable:hover .dropdown-menu{display:block}.dropdown.is-right .dropdown-menu{left:auto;right:0}.dropdown.is-up .dropdown-menu{bottom:100%;padding-bottom:var(--blm-drp-ct-offset);padding-top:initial;top:auto}.dropdown-menu{display:none;left:0;min-width:var(--blm-drp-menu-min-width);padding-top:var(--blm-drp-ct-offset);position:absolute;top:100%;z-index:var(--blm-drp-ct-z)}.dropdown-content{background-color:var(--blm-drp-ct-bg-clr);border-radius:var(--blm-drp-ct-radius);box-shadow:var(--blm-drp-ct-shadow);padding-bottom:var(--blm-drp-ct-p-bottom);padding-top:var(--blm-drp-ct-p-top)}.dropdown-item{color:var(--blm-drp-itm-clr);display:block;font-size:.875rem;line-height:1.5;padding:.375rem 1rem;position:relative}a.dropdown-item,button.dropdown-item{padding-right:3rem;text-align:inherit;white-space:nowrap;width:100%}a.dropdown-item:hover,button.dropdown-item:hover{background-color:var(--blm-drp-itm-hov-bg-clr);color:var(--blm-drp-itm-hov-clr)}a.dropdown-item.is-active,button.dropdown-item.is-active{background-color:var(--blm-drp-itm-act-bg-clr);color:var(--blm-drp-itm-act-clr)}.dropdown-divider{background-color:var(--blm-drp-dvd-bg-clr);border:none;display:block;height:1px;margin:.5rem 0}.level{align-items:center;justify-content:space-between}.level code{border-radius:var(--blm-radius)}.level img{display:inline-block;vertical-align:top}.level.is-mobile,.level.is-mobile .level-left,.level.is-mobile .level-right{display:flex}.level.is-mobile .level-left+.level-right{margin-top:0}.level.is-mobile .level-item:not(:last-child){margin-bottom:0;margin-right:var(--blm-level-itm-spacing)}.level.is-mobile .level-item:not(.is-narrow){flex-grow:1}@media screen and (min-width:769px),print{.level{display:flex}.level>.level-item:not(.is-narrow){flex-grow:1}.level-left .level-item:not(:last-child),.level-right .level-item:not(:last-child){margin-right:var(--blm-level-itm-spacing)}}.level-item{align-items:center;display:flex;flex-basis:auto;flex-grow:0;flex-shrink:0;justify-content:center}.level-item .subtitle,.level-item .title{margin-bottom:0}.level-left,.level-right{flex-basis:auto;flex-grow:0;flex-shrink:0}.level-left .level-item.is-flexible,.level-right .level-item.is-flexible{flex-grow:1}.level-left{align-items:center;justify-content:flex-start}@media screen and (max-width:768px){.level-item:not(:last-child){margin-bottom:var(--blm-level-itm-spacing)}.level-left+.level-right{margin-top:1.5rem}.media-content{overflow-x:auto}}.level-right{align-items:center;justify-content:flex-end}@media screen and (min-width:769px),print{.level-left,.level-right{display:flex}}.media{align-items:flex-start;display:flex;text-align:inherit}.media .content:not(:last-child){margin-bottom:.75rem}.media .media{border-top:1px solid var(--blm-media-bd-clr);display:flex;padding-top:.75rem}.media .media .content:not(:last-child),.media .media .control:not(:last-child){margin-bottom:.5rem}.media .media .media{padding-top:.5rem}.media .media .media+.media{margin-top:.5rem}.media+.media{border-top:1px solid var(--blm-media-bd-clr);margin-top:var(--blm-media-spacing);padding-top:var(--blm-media-spacing)}.media.is-large+.media{margin-top:var(--blm-media-spacing-lg);padding-top:var(--blm-media-spacing-lg)}.media-left,.media-right{flex-basis:auto;flex-grow:0;flex-shrink:0}.media-left{margin-right:var(--blm-media-spacing)}.media-right{margin-left:var(--blm-media-spacing)}.media-content{flex-basis:auto;flex-grow:1;flex-shrink:1;text-align:inherit}.menu{font-size:var(--blm-s-normal)}.menu.is-small{font-size:var(--blm-s-small)}.menu.is-medium{font-size:var(--blm-s-medium)}.menu.is-large{font-size:var(--blm-s-lg)}.menu-list{line-height:var(--blm-menu-list-line-height)}.menu-list a{border-radius:var(--blm-menu-itm-radius);color:var(--blm-menu-itm-clr);display:block;padding:var(--blm-menu-list-link-p)}.menu-list a:hover{background-color:var(--blm-menu-itm-hov-bg-clr);color:var(--blm-menu-itm-hov-clr)}.menu-list a.is-active{background-color:var(--blm-menu-itm-act-bg-clr);color:var(--blm-menu-itm-act-clr)}.menu-list li ul{border-left:var(--blm-menu-list-bd-left);margin:var(--blm-menu-nested-list-m);padding-left:var(--blm-menu-nested-list-p-left)}.menu-label{color:var(--blm-menu-label-clr);font-size:var(--blm-menu-label-font-s);letter-spacing:var(--blm-menu-label-letter-spacing);text-transform:uppercase}.menu-label:not(:first-child){margin-top:var(--blm-menu-label-spacing)}.menu-label:not(:last-child){margin-bottom:var(--blm-menu-label-spacing)}.message{background-color:var(--blm-msg-bg-clr);border-radius:var(--blm-msg-radius);font-size:var(--blm-s-normal)}.message strong{color:currentColor}.message a:not(.button):not(.tag):not(.dropdown-item){color:currentColor;text-decoration:underline}.message.is-small{font-size:var(--blm-s-small)}.message.is-medium{font-size:var(--blm-s-medium)}.message.is-large{font-size:var(--blm-s-lg)}.message.is-white .message-header{background-color:var(--blm-white);color:var(--blm-white-inv)}.message.is-white .message-body{border-color:var(--blm-white);background-color:var(--blm-white)}.message.is-black .message-header{background-color:var(--blm-black);color:var(--blm-black-inv)}.message.is-black .message-body{border-color:var(--blm-black);background-color:var(--blm-sch-main-bis)}.message.is-light .message-header{background-color:var(--blm-light);color:var(--blm-light-inv)}.message.is-light .message-body{border-color:var(--blm-light);background-color:var(--blm-sch-main-bis)}.message.is-dark .message-header{background-color:var(--blm-dark);color:var(--blm-dark-inv)}.message.is-dark .message-body{border-color:var(--blm-dark);background-color:var(--blm-sch-main-bis)}.message.is-primary .message-header{background-color:var(--blm-prim);color:var(--blm-prim-inv)}.message.is-primary .message-body{border-color:var(--blm-prim);color:var(--blm-prim-dark);background-color:var(--blm-prim-light)}.message.is-link .message-header{background-color:var(--blm-link);color:var(--blm-link-inv)}.message.is-link .message-body{border-color:var(--blm-link);color:var(--blm-link-dark);background-color:var(--blm-link-light)}.message.is-info .message-header{background-color:var(--blm-info);color:var(--blm-info-inv)}.message.is-info .message-body{border-color:var(--blm-info);color:var(--blm-info-dark);background-color:var(--blm-info-light)}.message.is-success .message-header{background-color:var(--blm-sucs);color:var(--blm-sucs-inv)}.message.is-success .message-body{border-color:var(--blm-sucs);color:var(--blm-sucs-dark);background-color:var(--blm-sucs-light)}.message.is-warning .message-header{background-color:var(--blm-warn);color:var(--blm-warn-inv)}.message.is-warning .message-body{border-color:var(--blm-warn);color:var(--blm-warn-dark);background-color:var(--blm-warn-light)}.message.is-danger .message-header{background-color:var(--blm-dang);color:var(--blm-dang-inv)}.message.is-danger .message-body{border-color:var(--blm-dang);color:var(--blm-dang-dark);background-color:var(--blm-dang-light)}.message-header{align-items:center;background-color:var(--blm-msg-hd-bg-clr);border-radius:var(--blm-msg-hd-radius) var(--blm-msg-hd-radius) 0 0;color:var(--blm-msg-hd-clr);display:flex;font-weight:var(--blm-msg-hd-weight);justify-content:space-between;line-height:1.25;padding:var(--blm-msg-hd-p);position:relative}.message-header .delete{flex-grow:0;flex-shrink:0;margin-left:.75em}.message-header+.message-body{border-width:var(--blm-msg-hd-body-bd-width);border-top-left-radius:0;border-top-right-radius:0}.message-header.has-no-body{border-radius:var(--blm-msg-hd-radius)}.message-body{border-color:var(--blm-msg-body-bd-clr);border-radius:var(--blm-msg-body-radius);border-style:solid;border-width:var(--blm-msg-body-bd-width);color:var(--blm-msg-body-clr);padding:var(--blm-msg-body-p)}.message-body code,.message-body pre{background-color:var(--blm-msg-body-pre-bg-clr)}.message-body pre code{background-color:var(--blm-msg-body-pre-code-bg-clr)}.modal{align-items:center;display:none;flex-direction:column;justify-content:center;overflow:hidden;position:fixed;z-index:var(--blm-modal-z)}.modal.is-active{display:flex}.modal-background{background-color:var(--blm-modal-bg-bg-clr)}.modal-card,.modal-content{margin:0 var(--blm-modal-ct-m-mobile);max-height:calc(100vh - var(--blm-modal-ct-spacing-mobile));overflow:auto;position:relative;width:100%}@media screen and (min-width:769px),print{.modal-card,.modal-content{margin:0 auto;max-height:calc(100vh - var(--blm-modal-ct-spacing-tablet));width:var(--blm-modal-ct-width)}}.modal-close{background:0 0;height:var(--blm-modal-close-dim);position:fixed;right:var(--blm-modal-close-right);top:var(--blm-modal-close-top);width:var(--blm-modal-close-dim)}.modal-card{display:flex;flex-direction:column;max-height:calc(100vh - var(--blm-modal-card-spacing));overflow:hidden;-ms-overflow-y:visible}.modal-card-foot,.modal-card-head{align-items:center;background-color:var(--blm-modal-card-head-bg-clr);display:flex;flex-shrink:0;justify-content:flex-start;padding:var(--blm-modal-card-head-p);position:relative}.modal-card-head{border-bottom:var(--blm-modal-card-head-bd-bottom);border-top-left-radius:var(--blm-modal-card-head-radius);border-top-right-radius:var(--blm-modal-card-head-radius)}.modal-card-title{color:var(--blm-modal-card-title-clr);flex-grow:1;flex-shrink:0;font-size:var(--blm-modal-card-title-s);line-height:var(--blm-modal-card-title-line-height)}.modal-card-foot{border-bottom-left-radius:var(--blm-modal-card-foot-radius);border-bottom-right-radius:var(--blm-modal-card-foot-radius);border-top:var(--blm-modal-card-foot-bd-top)}.modal-card-foot .button:not(:last-child){margin-right:.5em}.modal-card-body{-webkit-overflow-scrolling:touch;background-color:var(--blm-modal-card-body-bg-clr);flex-grow:1;flex-shrink:1;overflow:auto;padding:var(--blm-modal-card-body-p)}.navbar{background-color:var(--blm-nav-bg-clr);min-height:var(--blm-nav-height);position:relative;z-index:var(--blm-nav-z)}.navbar.is-white{background-color:var(--blm-white);color:var(--blm-white-inv)}.navbar.is-white .navbar-brand .navbar-link,.navbar.is-white .navbar-brand>.navbar-item{color:var(--blm-white-inv)}.navbar.is-white .navbar-brand .navbar-link.is-active,.navbar.is-white .navbar-brand .navbar-link:focus,.navbar.is-white .navbar-brand .navbar-link:hover,.navbar.is-white .navbar-brand>a.navbar-item.is-active,.navbar.is-white .navbar-brand>a.navbar-item:focus,.navbar.is-white .navbar-brand>a.navbar-item:hover{background-color:hsla(var(--blm-white-h),var(--blm-white-s),calc(var(--blm-white-l) - 5%),var(--blm-white-a));color:var(--blm-white-inv)}.navbar.is-white .navbar-brand .navbar-link::after{border-color:var(--blm-white-inv)}.navbar.is-white .navbar-burger{color:var(--blm-white-inv)}@media screen and (min-width:1024px){.navbar.is-white .navbar-end .navbar-link,.navbar.is-white .navbar-end>.navbar-item,.navbar.is-white .navbar-start .navbar-link,.navbar.is-white .navbar-start>.navbar-item{color:var(--blm-white-inv)}.navbar.is-white .navbar-end .navbar-link.is-active,.navbar.is-white .navbar-end .navbar-link:focus,.navbar.is-white .navbar-end .navbar-link:hover,.navbar.is-white .navbar-end>a.navbar-item.is-active,.navbar.is-white .navbar-end>a.navbar-item:focus,.navbar.is-white .navbar-end>a.navbar-item:hover,.navbar.is-white .navbar-start .navbar-link.is-active,.navbar.is-white .navbar-start .navbar-link:focus,.navbar.is-white .navbar-start .navbar-link:hover,.navbar.is-white .navbar-start>a.navbar-item.is-active,.navbar.is-white .navbar-start>a.navbar-item:focus,.navbar.is-white .navbar-start>a.navbar-item:hover{background-color:hsla(var(--blm-white-h),var(--blm-white-s),calc(var(--blm-white-l) - 5%),var(--blm-white-a));color:var(--blm-white-inv)}.navbar.is-white .navbar-end .navbar-link::after,.navbar.is-white .navbar-start .navbar-link::after{border-color:var(--blm-white-inv)}.navbar.is-white .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-white .navbar-item.has-dropdown:focus .navbar-link,.navbar.is-white .navbar-item.has-dropdown:hover .navbar-link{background-color:hsla(var(--blm-white-h),var(--blm-white-s),calc(var(--blm-white-l) - 5%),var(--blm-white-a));color:var(--blm-white-inv)}.navbar.is-white .navbar-dropdown a.navbar-item.is-active{background-color:var(--blm-white);color:var(--blm-white-inv)}}.navbar.is-black{background-color:var(--blm-black);color:var(--blm-black-inv)}.navbar.is-black .navbar-brand .navbar-link,.navbar.is-black .navbar-brand>.navbar-item{color:var(--blm-black-inv)}.navbar.is-black .navbar-brand .navbar-link.is-active,.navbar.is-black .navbar-brand .navbar-link:focus,.navbar.is-black .navbar-brand .navbar-link:hover,.navbar.is-black .navbar-brand>a.navbar-item.is-active,.navbar.is-black .navbar-brand>a.navbar-item:focus,.navbar.is-black .navbar-brand>a.navbar-item:hover{background-color:hsla(var(--blm-black-h),var(--blm-black-s),calc(var(--blm-black-l) - 5%),var(--blm-black-a));color:var(--blm-black-inv)}.navbar.is-black .navbar-brand .navbar-link::after{border-color:var(--blm-black-inv)}.navbar.is-black .navbar-burger{color:var(--blm-black-inv)}@media screen and (min-width:1024px){.navbar.is-black .navbar-end .navbar-link,.navbar.is-black .navbar-end>.navbar-item,.navbar.is-black .navbar-start .navbar-link,.navbar.is-black .navbar-start>.navbar-item{color:var(--blm-black-inv)}.navbar.is-black .navbar-end .navbar-link.is-active,.navbar.is-black .navbar-end .navbar-link:focus,.navbar.is-black .navbar-end .navbar-link:hover,.navbar.is-black .navbar-end>a.navbar-item.is-active,.navbar.is-black .navbar-end>a.navbar-item:focus,.navbar.is-black .navbar-end>a.navbar-item:hover,.navbar.is-black .navbar-start .navbar-link.is-active,.navbar.is-black .navbar-start .navbar-link:focus,.navbar.is-black .navbar-start .navbar-link:hover,.navbar.is-black .navbar-start>a.navbar-item.is-active,.navbar.is-black .navbar-start>a.navbar-item:focus,.navbar.is-black .navbar-start>a.navbar-item:hover{background-color:hsla(var(--blm-black-h),var(--blm-black-s),calc(var(--blm-black-l) - 5%),var(--blm-black-a));color:var(--blm-black-inv)}.navbar.is-black .navbar-end .navbar-link::after,.navbar.is-black .navbar-start .navbar-link::after{border-color:var(--blm-black-inv)}.navbar.is-black .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-black .navbar-item.has-dropdown:focus .navbar-link,.navbar.is-black .navbar-item.has-dropdown:hover .navbar-link{background-color:hsla(var(--blm-black-h),var(--blm-black-s),calc(var(--blm-black-l) - 5%),var(--blm-black-a));color:var(--blm-black-inv)}.navbar.is-black .navbar-dropdown a.navbar-item.is-active{background-color:var(--blm-black);color:var(--blm-black-inv)}}.navbar.is-light{background-color:var(--blm-light);color:var(--blm-light-inv)}.navbar.is-light .navbar-brand .navbar-link,.navbar.is-light .navbar-brand>.navbar-item{color:var(--blm-light-inv)}.navbar.is-light .navbar-brand .navbar-link.is-active,.navbar.is-light .navbar-brand .navbar-link:focus,.navbar.is-light .navbar-brand .navbar-link:hover,.navbar.is-light .navbar-brand>a.navbar-item.is-active,.navbar.is-light .navbar-brand>a.navbar-item:focus,.navbar.is-light .navbar-brand>a.navbar-item:hover{background-color:hsla(var(--blm-light-h),var(--blm-light-s),calc(var(--blm-light-l) - 5%),var(--blm-light-a));color:var(--blm-light-inv)}.navbar.is-light .navbar-brand .navbar-link::after{border-color:var(--blm-light-inv)}.navbar.is-light .navbar-burger{color:var(--blm-light-inv)}@media screen and (min-width:1024px){.navbar.is-light .navbar-end .navbar-link,.navbar.is-light .navbar-end>.navbar-item,.navbar.is-light .navbar-start .navbar-link,.navbar.is-light .navbar-start>.navbar-item{color:var(--blm-light-inv)}.navbar.is-light .navbar-end .navbar-link.is-active,.navbar.is-light .navbar-end .navbar-link:focus,.navbar.is-light .navbar-end .navbar-link:hover,.navbar.is-light .navbar-end>a.navbar-item.is-active,.navbar.is-light .navbar-end>a.navbar-item:focus,.navbar.is-light .navbar-end>a.navbar-item:hover,.navbar.is-light .navbar-start .navbar-link.is-active,.navbar.is-light .navbar-start .navbar-link:focus,.navbar.is-light .navbar-start .navbar-link:hover,.navbar.is-light .navbar-start>a.navbar-item.is-active,.navbar.is-light .navbar-start>a.navbar-item:focus,.navbar.is-light .navbar-start>a.navbar-item:hover{background-color:hsla(var(--blm-light-h),var(--blm-light-s),calc(var(--blm-light-l) - 5%),var(--blm-light-a));color:var(--blm-light-inv)}.navbar.is-light .navbar-end .navbar-link::after,.navbar.is-light .navbar-start .navbar-link::after{border-color:var(--blm-light-inv)}.navbar.is-light .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-light .navbar-item.has-dropdown:focus .navbar-link,.navbar.is-light .navbar-item.has-dropdown:hover .navbar-link{background-color:hsla(var(--blm-light-h),var(--blm-light-s),calc(var(--blm-light-l) - 5%),var(--blm-light-a));color:var(--blm-light-inv)}.navbar.is-light .navbar-dropdown a.navbar-item.is-active{background-color:var(--blm-light);color:var(--blm-light-inv)}}.navbar.is-dark{background-color:var(--blm-dark);color:var(--blm-dark-inv)}.navbar.is-dark .navbar-brand .navbar-link,.navbar.is-dark .navbar-brand>.navbar-item{color:var(--blm-dark-inv)}.navbar.is-dark .navbar-brand .navbar-link.is-active,.navbar.is-dark .navbar-brand .navbar-link:focus,.navbar.is-dark .navbar-brand .navbar-link:hover,.navbar.is-dark .navbar-brand>a.navbar-item.is-active,.navbar.is-dark .navbar-brand>a.navbar-item:focus,.navbar.is-dark .navbar-brand>a.navbar-item:hover{background-color:hsla(var(--blm-dark-h),var(--blm-dark-s),calc(var(--blm-dark-l) - 5%),var(--blm-dark-a));color:var(--blm-dark-inv)}.navbar.is-dark .navbar-brand .navbar-link::after{border-color:var(--blm-dark-inv)}.navbar.is-dark .navbar-burger{color:var(--blm-dark-inv)}@media screen and (min-width:1024px){.navbar.is-dark .navbar-end .navbar-link,.navbar.is-dark .navbar-end>.navbar-item,.navbar.is-dark .navbar-start .navbar-link,.navbar.is-dark .navbar-start>.navbar-item{color:var(--blm-dark-inv)}.navbar.is-dark .navbar-end .navbar-link.is-active,.navbar.is-dark .navbar-end .navbar-link:focus,.navbar.is-dark .navbar-end .navbar-link:hover,.navbar.is-dark .navbar-end>a.navbar-item.is-active,.navbar.is-dark .navbar-end>a.navbar-item:focus,.navbar.is-dark .navbar-end>a.navbar-item:hover,.navbar.is-dark .navbar-start .navbar-link.is-active,.navbar.is-dark .navbar-start .navbar-link:focus,.navbar.is-dark .navbar-start .navbar-link:hover,.navbar.is-dark .navbar-start>a.navbar-item.is-active,.navbar.is-dark .navbar-start>a.navbar-item:focus,.navbar.is-dark .navbar-start>a.navbar-item:hover{background-color:hsla(var(--blm-dark-h),var(--blm-dark-s),calc(var(--blm-dark-l) - 5%),var(--blm-dark-a));color:var(--blm-dark-inv)}.navbar.is-dark .navbar-end .navbar-link::after,.navbar.is-dark .navbar-start .navbar-link::after{border-color:var(--blm-dark-inv)}.navbar.is-dark .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-dark .navbar-item.has-dropdown:focus .navbar-link,.navbar.is-dark .navbar-item.has-dropdown:hover .navbar-link{background-color:hsla(var(--blm-dark-h),var(--blm-dark-s),calc(var(--blm-dark-l) - 5%),var(--blm-dark-a));color:var(--blm-dark-inv)}.navbar.is-dark .navbar-dropdown a.navbar-item.is-active{background-color:var(--blm-dark);color:var(--blm-dark-inv)}}.navbar.is-primary{background-color:var(--blm-prim);color:var(--blm-prim-inv)}.navbar.is-primary .navbar-brand .navbar-link,.navbar.is-primary .navbar-brand>.navbar-item{color:var(--blm-prim-inv)}.navbar.is-primary .navbar-brand .navbar-link.is-active,.navbar.is-primary .navbar-brand .navbar-link:focus,.navbar.is-primary .navbar-brand .navbar-link:hover,.navbar.is-primary .navbar-brand>a.navbar-item.is-active,.navbar.is-primary .navbar-brand>a.navbar-item:focus,.navbar.is-primary .navbar-brand>a.navbar-item:hover{background-color:hsla(var(--blm-prim-h),var(--blm-prim-s),calc(var(--blm-prim-l) - 5%),var(--blm-prim-a));color:var(--blm-prim-inv)}.navbar.is-primary .navbar-brand .navbar-link::after{border-color:var(--blm-prim-inv)}.navbar.is-primary .navbar-burger{color:var(--blm-prim-inv)}@media screen and (min-width:1024px){.navbar.is-primary .navbar-end .navbar-link,.navbar.is-primary .navbar-end>.navbar-item,.navbar.is-primary .navbar-start .navbar-link,.navbar.is-primary .navbar-start>.navbar-item{color:var(--blm-prim-inv)}.navbar.is-primary .navbar-end .navbar-link.is-active,.navbar.is-primary .navbar-end .navbar-link:focus,.navbar.is-primary .navbar-end .navbar-link:hover,.navbar.is-primary .navbar-end>a.navbar-item.is-active,.navbar.is-primary .navbar-end>a.navbar-item:focus,.navbar.is-primary .navbar-end>a.navbar-item:hover,.navbar.is-primary .navbar-start .navbar-link.is-active,.navbar.is-primary .navbar-start .navbar-link:focus,.navbar.is-primary .navbar-start .navbar-link:hover,.navbar.is-primary .navbar-start>a.navbar-item.is-active,.navbar.is-primary .navbar-start>a.navbar-item:focus,.navbar.is-primary .navbar-start>a.navbar-item:hover{background-color:hsla(var(--blm-prim-h),var(--blm-prim-s),calc(var(--blm-prim-l) - 5%),var(--blm-prim-a));color:var(--blm-prim-inv)}.navbar.is-primary .navbar-end .navbar-link::after,.navbar.is-primary .navbar-start .navbar-link::after{border-color:var(--blm-prim-inv)}.navbar.is-primary .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-primary .navbar-item.has-dropdown:focus .navbar-link,.navbar.is-primary .navbar-item.has-dropdown:hover .navbar-link{background-color:hsla(var(--blm-prim-h),var(--blm-prim-s),calc(var(--blm-prim-l) - 5%),var(--blm-prim-a));color:var(--blm-prim-inv)}.navbar.is-primary .navbar-dropdown a.navbar-item.is-active{background-color:var(--blm-prim);color:var(--blm-prim-inv)}}.navbar.is-link{background-color:var(--blm-link);color:var(--blm-link-inv)}.navbar.is-link .navbar-brand .navbar-link,.navbar.is-link .navbar-brand>.navbar-item{color:var(--blm-link-inv)}.navbar.is-link .navbar-brand .navbar-link.is-active,.navbar.is-link .navbar-brand .navbar-link:focus,.navbar.is-link .navbar-brand .navbar-link:hover,.navbar.is-link .navbar-brand>a.navbar-item.is-active,.navbar.is-link .navbar-brand>a.navbar-item:focus,.navbar.is-link .navbar-brand>a.navbar-item:hover{background-color:hsla(var(--blm-link-h),var(--blm-link-s),calc(var(--blm-link-l) - 5%),var(--blm-link-a));color:var(--blm-link-inv)}.navbar.is-link .navbar-brand .navbar-link::after{border-color:var(--blm-link-inv)}.navbar.is-link .navbar-burger{color:var(--blm-link-inv)}@media screen and (min-width:1024px){.navbar.is-link .navbar-end .navbar-link,.navbar.is-link .navbar-end>.navbar-item,.navbar.is-link .navbar-start .navbar-link,.navbar.is-link .navbar-start>.navbar-item{color:var(--blm-link-inv)}.navbar.is-link .navbar-end .navbar-link.is-active,.navbar.is-link .navbar-end .navbar-link:focus,.navbar.is-link .navbar-end .navbar-link:hover,.navbar.is-link .navbar-end>a.navbar-item.is-active,.navbar.is-link .navbar-end>a.navbar-item:focus,.navbar.is-link .navbar-end>a.navbar-item:hover,.navbar.is-link .navbar-start .navbar-link.is-active,.navbar.is-link .navbar-start .navbar-link:focus,.navbar.is-link .navbar-start .navbar-link:hover,.navbar.is-link .navbar-start>a.navbar-item.is-active,.navbar.is-link .navbar-start>a.navbar-item:focus,.navbar.is-link .navbar-start>a.navbar-item:hover{background-color:hsla(var(--blm-link-h),var(--blm-link-s),calc(var(--blm-link-l) - 5%),var(--blm-link-a));color:var(--blm-link-inv)}.navbar.is-link .navbar-end .navbar-link::after,.navbar.is-link .navbar-start .navbar-link::after{border-color:var(--blm-link-inv)}.navbar.is-link .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-link .navbar-item.has-dropdown:focus .navbar-link,.navbar.is-link .navbar-item.has-dropdown:hover .navbar-link{background-color:hsla(var(--blm-link-h),var(--blm-link-s),calc(var(--blm-link-l) - 5%),var(--blm-link-a));color:var(--blm-link-inv)}.navbar.is-link .navbar-dropdown a.navbar-item.is-active{background-color:var(--blm-link);color:var(--blm-link-inv)}}.navbar.is-info{background-color:var(--blm-info);color:var(--blm-info-inv)}.navbar.is-info .navbar-brand .navbar-link,.navbar.is-info .navbar-brand>.navbar-item{color:var(--blm-info-inv)}.navbar.is-info .navbar-brand .navbar-link.is-active,.navbar.is-info .navbar-brand .navbar-link:focus,.navbar.is-info .navbar-brand .navbar-link:hover,.navbar.is-info .navbar-brand>a.navbar-item.is-active,.navbar.is-info .navbar-brand>a.navbar-item:focus,.navbar.is-info .navbar-brand>a.navbar-item:hover{background-color:hsla(var(--blm-info-h),var(--blm-info-s),calc(var(--blm-info-l) - 5%),var(--blm-info-a));color:var(--blm-info-inv)}.navbar.is-info .navbar-brand .navbar-link::after{border-color:var(--blm-info-inv)}.navbar.is-info .navbar-burger{color:var(--blm-info-inv)}@media screen and (min-width:1024px){.navbar.is-info .navbar-end .navbar-link,.navbar.is-info .navbar-end>.navbar-item,.navbar.is-info .navbar-start .navbar-link,.navbar.is-info .navbar-start>.navbar-item{color:var(--blm-info-inv)}.navbar.is-info .navbar-end .navbar-link.is-active,.navbar.is-info .navbar-end .navbar-link:focus,.navbar.is-info .navbar-end .navbar-link:hover,.navbar.is-info .navbar-end>a.navbar-item.is-active,.navbar.is-info .navbar-end>a.navbar-item:focus,.navbar.is-info .navbar-end>a.navbar-item:hover,.navbar.is-info .navbar-start .navbar-link.is-active,.navbar.is-info .navbar-start .navbar-link:focus,.navbar.is-info .navbar-start .navbar-link:hover,.navbar.is-info .navbar-start>a.navbar-item.is-active,.navbar.is-info .navbar-start>a.navbar-item:focus,.navbar.is-info .navbar-start>a.navbar-item:hover{background-color:hsla(var(--blm-info-h),var(--blm-info-s),calc(var(--blm-info-l) - 5%),var(--blm-info-a));color:var(--blm-info-inv)}.navbar.is-info .navbar-end .navbar-link::after,.navbar.is-info .navbar-start .navbar-link::after{border-color:var(--blm-info-inv)}.navbar.is-info .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-info .navbar-item.has-dropdown:focus .navbar-link,.navbar.is-info .navbar-item.has-dropdown:hover .navbar-link{background-color:hsla(var(--blm-info-h),var(--blm-info-s),calc(var(--blm-info-l) - 5%),var(--blm-info-a));color:var(--blm-info-inv)}.navbar.is-info .navbar-dropdown a.navbar-item.is-active{background-color:var(--blm-info);color:var(--blm-info-inv)}}.navbar.is-success{background-color:var(--blm-sucs);color:var(--blm-sucs-inv)}.navbar.is-success .navbar-brand .navbar-link,.navbar.is-success .navbar-brand>.navbar-item{color:var(--blm-sucs-inv)}.navbar.is-success .navbar-brand .navbar-link.is-active,.navbar.is-success .navbar-brand .navbar-link:focus,.navbar.is-success .navbar-brand .navbar-link:hover,.navbar.is-success .navbar-brand>a.navbar-item.is-active,.navbar.is-success .navbar-brand>a.navbar-item:focus,.navbar.is-success .navbar-brand>a.navbar-item:hover{background-color:hsla(var(--blm-sucs-h),var(--blm-sucs-s),calc(var(--blm-sucs-l) - 5%),var(--blm-sucs-a));color:var(--blm-sucs-inv)}.navbar.is-success .navbar-brand .navbar-link::after{border-color:var(--blm-sucs-inv)}.navbar.is-success .navbar-burger{color:var(--blm-sucs-inv)}@media screen and (min-width:1024px){.navbar.is-success .navbar-end .navbar-link,.navbar.is-success .navbar-end>.navbar-item,.navbar.is-success .navbar-start .navbar-link,.navbar.is-success .navbar-start>.navbar-item{color:var(--blm-sucs-inv)}.navbar.is-success .navbar-end .navbar-link.is-active,.navbar.is-success .navbar-end .navbar-link:focus,.navbar.is-success .navbar-end .navbar-link:hover,.navbar.is-success .navbar-end>a.navbar-item.is-active,.navbar.is-success .navbar-end>a.navbar-item:focus,.navbar.is-success .navbar-end>a.navbar-item:hover,.navbar.is-success .navbar-start .navbar-link.is-active,.navbar.is-success .navbar-start .navbar-link:focus,.navbar.is-success .navbar-start .navbar-link:hover,.navbar.is-success .navbar-start>a.navbar-item.is-active,.navbar.is-success .navbar-start>a.navbar-item:focus,.navbar.is-success .navbar-start>a.navbar-item:hover{background-color:hsla(var(--blm-sucs-h),var(--blm-sucs-s),calc(var(--blm-sucs-l) - 5%),var(--blm-sucs-a));color:var(--blm-sucs-inv)}.navbar.is-success .navbar-end .navbar-link::after,.navbar.is-success .navbar-start .navbar-link::after{border-color:var(--blm-sucs-inv)}.navbar.is-success .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-success .navbar-item.has-dropdown:focus .navbar-link,.navbar.is-success .navbar-item.has-dropdown:hover .navbar-link{background-color:hsla(var(--blm-sucs-h),var(--blm-sucs-s),calc(var(--blm-sucs-l) - 5%),var(--blm-sucs-a));color:var(--blm-sucs-inv)}.navbar.is-success .navbar-dropdown a.navbar-item.is-active{background-color:var(--blm-sucs);color:var(--blm-sucs-inv)}}.navbar.is-warning{background-color:var(--blm-warn);color:var(--blm-warn-inv)}.navbar.is-warning .navbar-brand .navbar-link,.navbar.is-warning .navbar-brand>.navbar-item{color:var(--blm-warn-inv)}.navbar.is-warning .navbar-brand .navbar-link.is-active,.navbar.is-warning .navbar-brand .navbar-link:focus,.navbar.is-warning .navbar-brand .navbar-link:hover,.navbar.is-warning .navbar-brand>a.navbar-item.is-active,.navbar.is-warning .navbar-brand>a.navbar-item:focus,.navbar.is-warning .navbar-brand>a.navbar-item:hover{background-color:hsla(var(--blm-warn-h),var(--blm-warn-s),calc(var(--blm-warn-l) - 5%),var(--blm-warn-a));color:var(--blm-warn-inv)}.navbar.is-warning .navbar-brand .navbar-link::after{border-color:var(--blm-warn-inv)}.navbar.is-warning .navbar-burger{color:var(--blm-warn-inv)}@media screen and (min-width:1024px){.navbar.is-warning .navbar-end .navbar-link,.navbar.is-warning .navbar-end>.navbar-item,.navbar.is-warning .navbar-start .navbar-link,.navbar.is-warning .navbar-start>.navbar-item{color:var(--blm-warn-inv)}.navbar.is-warning .navbar-end .navbar-link.is-active,.navbar.is-warning .navbar-end .navbar-link:focus,.navbar.is-warning .navbar-end .navbar-link:hover,.navbar.is-warning .navbar-end>a.navbar-item.is-active,.navbar.is-warning .navbar-end>a.navbar-item:focus,.navbar.is-warning .navbar-end>a.navbar-item:hover,.navbar.is-warning .navbar-start .navbar-link.is-active,.navbar.is-warning .navbar-start .navbar-link:focus,.navbar.is-warning .navbar-start .navbar-link:hover,.navbar.is-warning .navbar-start>a.navbar-item.is-active,.navbar.is-warning .navbar-start>a.navbar-item:focus,.navbar.is-warning .navbar-start>a.navbar-item:hover{background-color:hsla(var(--blm-warn-h),var(--blm-warn-s),calc(var(--blm-warn-l) - 5%),var(--blm-warn-a));color:var(--blm-warn-inv)}.navbar.is-warning .navbar-end .navbar-link::after,.navbar.is-warning .navbar-start .navbar-link::after{border-color:var(--blm-warn-inv)}.navbar.is-warning .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-warning .navbar-item.has-dropdown:focus .navbar-link,.navbar.is-warning .navbar-item.has-dropdown:hover .navbar-link{background-color:hsla(var(--blm-warn-h),var(--blm-warn-s),calc(var(--blm-warn-l) - 5%),var(--blm-warn-a));color:var(--blm-warn-inv)}.navbar.is-warning .navbar-dropdown a.navbar-item.is-active{background-color:var(--blm-warn);color:var(--blm-warn-inv)}}.navbar.is-danger{background-color:var(--blm-dang);color:var(--blm-dang-inv)}.navbar.is-danger .navbar-brand .navbar-link,.navbar.is-danger .navbar-brand>.navbar-item{color:var(--blm-dang-inv)}.navbar.is-danger .navbar-brand .navbar-link.is-active,.navbar.is-danger .navbar-brand .navbar-link:focus,.navbar.is-danger .navbar-brand .navbar-link:hover,.navbar.is-danger .navbar-brand>a.navbar-item.is-active,.navbar.is-danger .navbar-brand>a.navbar-item:focus,.navbar.is-danger .navbar-brand>a.navbar-item:hover{background-color:hsla(var(--blm-dang-h),var(--blm-dang-s),calc(var(--blm-dang-l) - 5%),var(--blm-dang-a));color:var(--blm-dang-inv)}.navbar.is-danger .navbar-brand .navbar-link::after{border-color:var(--blm-dang-inv)}.navbar.is-danger .navbar-burger{color:var(--blm-dang-inv)}@media screen and (min-width:1024px){.navbar.is-danger .navbar-end .navbar-link,.navbar.is-danger .navbar-end>.navbar-item,.navbar.is-danger .navbar-start .navbar-link,.navbar.is-danger .navbar-start>.navbar-item{color:var(--blm-dang-inv)}.navbar.is-danger .navbar-end .navbar-link.is-active,.navbar.is-danger .navbar-end .navbar-link:focus,.navbar.is-danger .navbar-end .navbar-link:hover,.navbar.is-danger .navbar-end>a.navbar-item.is-active,.navbar.is-danger .navbar-end>a.navbar-item:focus,.navbar.is-danger .navbar-end>a.navbar-item:hover,.navbar.is-danger .navbar-start .navbar-link.is-active,.navbar.is-danger .navbar-start .navbar-link:focus,.navbar.is-danger .navbar-start .navbar-link:hover,.navbar.is-danger .navbar-start>a.navbar-item.is-active,.navbar.is-danger .navbar-start>a.navbar-item:focus,.navbar.is-danger .navbar-start>a.navbar-item:hover{background-color:hsla(var(--blm-dang-h),var(--blm-dang-s),calc(var(--blm-dang-l) - 5%),var(--blm-dang-a));color:var(--blm-dang-inv)}.navbar.is-danger .navbar-end .navbar-link::after,.navbar.is-danger .navbar-start .navbar-link::after{border-color:var(--blm-dang-inv)}.navbar.is-danger .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-danger .navbar-item.has-dropdown:focus .navbar-link,.navbar.is-danger .navbar-item.has-dropdown:hover .navbar-link{background-color:hsla(var(--blm-dang-h),var(--blm-dang-s),calc(var(--blm-dang-l) - 5%),var(--blm-dang-a));color:var(--blm-dang-inv)}.navbar.is-danger .navbar-dropdown a.navbar-item.is-active{background-color:var(--blm-dang);color:var(--blm-dang-inv)}}.navbar>.container{align-items:stretch;display:flex;min-height:var(--blm-nav-height);width:100%}.navbar.has-shadow{box-shadow:var(--blm-nav-box-shadow-s) var(--blm-nav-box-shadow-clr)}.navbar.is-fixed-bottom,.navbar.is-fixed-top{left:0;position:fixed;right:0;z-index:var(--blm-nav-fixed-z)}.navbar.is-fixed-bottom{bottom:0}.navbar.is-fixed-bottom.has-shadow{box-shadow:var(--blm-nav-bottom-box-shadow-s) var(--blm-nav-box-shadow-clr)}.navbar.is-fixed-top{top:0}body.has-navbar-fixed-top,html.has-navbar-fixed-top{padding-top:var(--blm-nav-height)}body.has-navbar-fixed-bottom,html.has-navbar-fixed-bottom{padding-bottom:var(--blm-nav-height)}.navbar-brand,.navbar-tabs{align-items:stretch;display:flex;flex-shrink:0;min-height:var(--blm-nav-height)}.navbar-brand a.navbar-item:focus,.navbar-brand a.navbar-item:hover{background-color:transparent}.navbar-tabs{-webkit-overflow-scrolling:touch;max-width:100vw;overflow-x:auto;overflow-y:hidden}.navbar-burger{color:var(--blm-nav-burger-clr);cursor:pointer;display:block;height:var(--blm-nav-height);position:relative;width:var(--blm-nav-height);margin-left:auto}.navbar-burger span{background-color:currentColor;display:block;height:1px;left:calc(50% - 8px);position:absolute;transform-origin:center;transition-duration:var(--blm-speed);transition-property:background-color,opacity,transform;transition-timing-function:var(--blm-easing);width:16px}.navbar-burger span:nth-child(1){top:calc(50% - 6px)}.navbar-burger span:nth-child(2){top:calc(50% - 1px)}.navbar-burger span:nth-child(3){top:calc(50% + 4px)}.navbar-burger:hover{background-color:hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),.05)}.navbar-burger.is-active span:nth-child(1){transform:translateY(5px) rotate(45deg)}.navbar-burger.is-active span:nth-child(2){opacity:0}.navbar-burger.is-active span:nth-child(3){transform:translateY(-5px) rotate(-45deg)}.navbar-menu{display:none}.navbar-item,.navbar-link{color:var(--blm-nav-itm-clr);display:block;line-height:1.5;padding:.5rem .75rem;position:relative}.navbar-item .icon:only-child,.navbar-link .icon:only-child{margin-left:-.25rem;margin-right:-.25rem}.navbar-link,a.navbar-item{cursor:pointer}.navbar-link.is-active,.navbar-link:focus,.navbar-link:focus-within,.navbar-link:hover,a.navbar-item.is-active,a.navbar-item:focus,a.navbar-item:focus-within,a.navbar-item:hover{background-color:var(--blm-nav-itm-hov-bg-clr);color:var(--blm-nav-itm-hov-clr)}.navbar-item{flex-grow:0;flex-shrink:0}.navbar-item img{max-height:var(--blm-nav-itm-img-max-height)}.navbar-item.has-dropdown{padding:0}.navbar-item.is-expanded{flex-grow:1;flex-shrink:1}.navbar-item.is-tab{border-bottom:1px solid transparent;min-height:var(--blm-nav-height);padding-bottom:calc(.5rem - 1px)}.navbar-item.is-tab:focus,.navbar-item.is-tab:hover{background-color:var(--blm-nav-tab-hov-bg-clr);border-bottom-color:var(--blm-nav-tab-hov-bd-bottom-clr)}.navbar-item.is-tab.is-active{background-color:var(--blm-nav-tab-act-bg-clr);border-bottom-color:var(--blm-nav-tab-act-bd-bottom-clr);border-bottom-style:var(--blm-nav-tab-act-bd-bottom-style);border-bottom-width:var(--blm-nav-tab-act-bd-bottom-width);color:var(--blm-nav-tab-act-clr);padding-bottom:calc(.5rem - var(--blm-nav-tab-act-bd-bottom-width))}.navbar-content{flex-grow:1;flex-shrink:1}.navbar-link:not(.is-arrowless){padding-right:2.5em}.navbar-link:not(.is-arrowless)::after{border-color:var(--blm-nav-drp-arrow);margin-top:-.375em;right:1.125em}.navbar-dropdown{font-size:.875rem;padding-bottom:.5rem;padding-top:.5rem}.navbar-dropdown .navbar-item{padding-left:1.5rem;padding-right:1.5rem}.navbar-divider{background-color:var(--blm-nav-dvd-bg-clr);border:none;display:none;height:var(--blm-nav-dvd-height);margin:.5rem 0}@media screen and (max-width:1023px){.navbar>.container{display:block}.navbar-brand .navbar-item,.navbar-tabs .navbar-item{align-items:center;display:flex}.navbar-link::after{display:none}.navbar-menu{background-color:var(--blm-nav-bg-clr);box-shadow:0 8px 16px hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),.1);padding:.5rem 0}.navbar-menu.is-active{display:block}.navbar.is-fixed-bottom-touch,.navbar.is-fixed-top-touch{left:0;position:fixed;right:0;z-index:var(--blm-nav-fixed-z)}.navbar.is-fixed-bottom-touch{bottom:0}.navbar.is-fixed-bottom-touch.has-shadow{box-shadow:0 -2px 3px hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),.1)}.navbar.is-fixed-top-touch{top:0}.navbar.is-fixed-top .navbar-menu,.navbar.is-fixed-top-touch .navbar-menu{-webkit-overflow-scrolling:touch;max-height:calc(100vh - var(--blm-nav-height));overflow:auto}body.has-navbar-fixed-top-touch,html.has-navbar-fixed-top-touch{padding-top:var(--blm-nav-height)}body.has-navbar-fixed-bottom-touch,html.has-navbar-fixed-bottom-touch{padding-bottom:var(--blm-nav-height)}}@media screen and (min-width:1024px){.navbar,.navbar-end,.navbar-menu,.navbar-start{align-items:stretch;display:flex}.navbar{min-height:var(--blm-nav-height)}.navbar.is-spaced{padding:var(--blm-nav-p-vertical) var(--blm-nav-p-horizontal)}.navbar.is-spaced .navbar-end,.navbar.is-spaced .navbar-start{align-items:center}.navbar.is-spaced .navbar-link,.navbar.is-spaced a.navbar-item{border-radius:var(--blm-radius)}.navbar.is-transparent .navbar-link.is-active,.navbar.is-transparent .navbar-link:focus,.navbar.is-transparent .navbar-link:hover,.navbar.is-transparent a.navbar-item.is-active,.navbar.is-transparent a.navbar-item:focus,.navbar.is-transparent a.navbar-item:hover{background-color:transparent!important}.navbar.is-transparent .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-transparent .navbar-item.has-dropdown.is-hoverable:focus .navbar-link,.navbar.is-transparent .navbar-item.has-dropdown.is-hoverable:focus-within .navbar-link,.navbar.is-transparent .navbar-item.has-dropdown.is-hoverable:hover .navbar-link{background-color:transparent!important}.navbar.is-transparent .navbar-dropdown a.navbar-item:focus,.navbar.is-transparent .navbar-dropdown a.navbar-item:hover{background-color:var(--blm-nav-drp-itm-hov-bg-clr);color:var(--blm-nav-drp-itm-hov-clr)}.navbar.is-transparent .navbar-dropdown a.navbar-item.is-active{background-color:var(--blm-nav-drp-itm-act-bg-clr);color:var(--blm-nav-drp-itm-act-clr)}.navbar-burger{display:none}.navbar-item,.navbar-link{align-items:center;display:flex}.navbar-item.has-dropdown{align-items:stretch}.navbar-item.has-dropdown-up .navbar-link::after{transform:rotate(135deg) translate(.25em,-.25em)}.navbar-item.has-dropdown-up .navbar-dropdown{border-bottom:var(--blm-nav-drp-bd-top);border-radius:var(--blm-nav-drp-radius) var(--blm-nav-drp-radius) 0 0;border-top:none;bottom:100%;box-shadow:0 -8px 8px hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),.1);top:auto}.navbar-item.is-active .navbar-dropdown,.navbar-item.is-hoverable:focus .navbar-dropdown,.navbar-item.is-hoverable:focus-within .navbar-dropdown,.navbar-item.is-hoverable:hover .navbar-dropdown{display:block}.navbar-item.is-active .navbar-dropdown.is-boxed,.navbar-item.is-hoverable:focus .navbar-dropdown.is-boxed,.navbar-item.is-hoverable:focus-within .navbar-dropdown.is-boxed,.navbar-item.is-hoverable:hover .navbar-dropdown.is-boxed,.navbar.is-spaced .navbar-item.is-active .navbar-dropdown,.navbar.is-spaced .navbar-item.is-hoverable:focus .navbar-dropdown,.navbar.is-spaced .navbar-item.is-hoverable:focus-within .navbar-dropdown,.navbar.is-spaced .navbar-item.is-hoverable:hover .navbar-dropdown{opacity:1;pointer-events:auto;transform:translateY(0)}.navbar-menu{flex-grow:1;flex-shrink:0}.navbar-start{justify-content:flex-start;margin-right:auto}.navbar-end{justify-content:flex-end;margin-left:auto}.navbar-dropdown{background-color:var(--blm-nav-drp-bg-clr);border-bottom-left-radius:var(--blm-nav-drp-radius);border-bottom-right-radius:var(--blm-nav-drp-radius);border-top:var(--blm-nav-drp-bd-top);box-shadow:0 8px 8px hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),.1);display:none;font-size:.875rem;left:0;min-width:100%;position:absolute;top:100%;z-index:var(--blm-nav-drp-z)}.navbar-dropdown .navbar-item{padding:.375rem 1rem;white-space:nowrap}.navbar-dropdown a.navbar-item{padding-right:3rem}.navbar-dropdown a.navbar-item:focus,.navbar-dropdown a.navbar-item:hover{background-color:var(--blm-nav-drp-itm-hov-bg-clr);color:var(--blm-nav-drp-itm-hov-clr)}.navbar-dropdown a.navbar-item.is-active{background-color:var(--blm-nav-drp-itm-act-bg-clr);color:var(--blm-nav-drp-itm-act-clr)}.navbar-dropdown.is-boxed,.navbar.is-spaced .navbar-dropdown{border-radius:var(--blm-nav-drp-boxed-radius);border-top:none;box-shadow:var(--blm-nav-drp-boxed-shadow);display:block;opacity:0;pointer-events:none;top:calc(100% + var(--blm-nav-drp-offset));transform:translateY(-5px);transition-duration:var(--blm-speed);transition-property:opacity,transform}.navbar-dropdown.is-right{left:auto;right:0}.navbar-divider{display:block}.container>.navbar .navbar-brand,.navbar>.container .navbar-brand{margin-left:-.75rem}.container>.navbar .navbar-menu,.navbar>.container .navbar-menu{margin-right:-.75rem}.navbar.is-fixed-bottom-desktop,.navbar.is-fixed-top-desktop{left:0;position:fixed;right:0;z-index:var(--blm-nav-fixed-z)}.navbar.is-fixed-bottom-desktop{bottom:0}.navbar.is-fixed-bottom-desktop.has-shadow{box-shadow:0 -2px 3px hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),.1)}.navbar.is-fixed-top-desktop{top:0}body.has-navbar-fixed-top-desktop,html.has-navbar-fixed-top-desktop{padding-top:var(--blm-nav-height)}body.has-navbar-fixed-bottom-desktop,html.has-navbar-fixed-bottom-desktop{padding-bottom:var(--blm-nav-height)}body.has-spaced-navbar-fixed-top,html.has-spaced-navbar-fixed-top{padding-top:calc(var(--blm-nav-height) + var(--blm-nav-p-vertical)*2)}body.has-spaced-navbar-fixed-bottom,html.has-spaced-navbar-fixed-bottom{padding-bottom:calc(var(--blm-nav-height) + var(--blm-nav-p-vertical)*2)}.navbar-link.is-active,a.navbar-item.is-active{color:var(--blm-nav-itm-act-clr)}.navbar-link.is-active:not(:focus):not(:hover),a.navbar-item.is-active:not(:focus):not(:hover){background-color:var(--blm-nav-itm-act-bg-clr)}.navbar-item.has-dropdown.is-active .navbar-link,.navbar-item.has-dropdown:focus .navbar-link,.navbar-item.has-dropdown:hover .navbar-link{background-color:var(--blm-nav-itm-hov-bg-clr)}}.hero.is-fullheight-with-navbar{min-height:calc(100vh - var(--blm-nav-height))}.pagination{font-size:var(--blm-s-normal);margin:var(--blm-pag-m)}.pagination.is-small{font-size:var(--blm-s-small)}.pagination.is-medium{font-size:var(--blm-s-medium)}.pagination.is-large{font-size:var(--blm-s-lg)}.pagination.is-rounded .pagination-next,.pagination.is-rounded .pagination-previous{padding-left:1em;padding-right:1em;border-radius:var(--blm-radius-rounded)}.pagination.is-rounded .pagination-link{border-radius:var(--blm-radius-rounded)}.pagination,.pagination-list{align-items:center;display:flex;justify-content:center;text-align:center}.pagination-ellipsis,.pagination-link,.pagination-next,.pagination-previous{font-size:var(--blm-pag-itm-font-s);justify-content:center;margin:var(--blm-pag-itm-m);padding-left:var(--blm-pag-itm-p-left);padding-right:var(--blm-pag-itm-p-right);text-align:center}.pagination-link,.pagination-next,.pagination-previous{border-color:var(--blm-pag-bd-clr);color:var(--blm-pag-clr);min-width:var(--blm-pag-min-width)}.pagination-link:hover,.pagination-next:hover,.pagination-previous:hover{border-color:var(--blm-pag-hov-bd-clr);color:var(--blm-pag-hov-clr)}.pagination-link:focus,.pagination-next:focus,.pagination-previous:focus{border-color:var(--blm-pag-foc-bd-clr)}.pagination-link:active,.pagination-next:active,.pagination-previous:active{box-shadow:var(--blm-pag-shadow-inset)}.pagination-link[disabled],.pagination-next[disabled],.pagination-previous[disabled]{background-color:var(--blm-pag-dsbl-bg-clr);border-color:var(--blm-pag-dsbl-bd-clr);box-shadow:none;color:var(--blm-pag-dsbl-clr);opacity:.5}.pagination-next,.pagination-previous{padding-left:.75em;padding-right:.75em;white-space:nowrap}.pagination-link.is-current{background-color:var(--blm-pag-cur-bg-clr);border-color:var(--blm-pag-cur-bd-clr);color:var(--blm-pag-cur-clr)}.pagination-ellipsis{color:var(--blm-pag-ellipsis-clr);pointer-events:none}.pagination-list{flex-wrap:wrap}@media screen and (max-width:768px){.pagination{flex-wrap:wrap}.pagination-list li,.pagination-next,.pagination-previous{flex-grow:1;flex-shrink:1}}@media screen and (min-width:769px),print{.pagination-list{flex-grow:1;flex-shrink:1;justify-content:flex-start;order:1}.pagination-previous{order:2}.pagination-next{order:3}.pagination{justify-content:space-between}.pagination.is-centered .pagination-previous{order:1}.pagination.is-centered .pagination-list{justify-content:center;order:2}.pagination.is-centered .pagination-next{order:3}.pagination.is-right .pagination-previous{order:1}.pagination.is-right .pagination-next{order:2}.pagination.is-right .pagination-list{justify-content:flex-end;order:3}}.panel{border-radius:var(--blm-pnl-radius);box-shadow:var(--blm-pnl-shadow);font-size:var(--blm-s-normal)}.panel:not(:last-child){margin-bottom:var(--blm-pnl-m)}.panel.is-white .panel-heading{background-color:var(--blm-white);color:var(--blm-white-inv)}.panel.is-white .panel-tabs a.is-active{border-bottom-color:var(--blm-white)}.panel.is-white .panel-block.is-active .panel-icon{color:var(--blm-white)}.panel.is-black .panel-heading{background-color:var(--blm-black);color:var(--blm-black-inv)}.panel.is-black .panel-tabs a.is-active{border-bottom-color:var(--blm-black)}.panel.is-black .panel-block.is-active .panel-icon{color:var(--blm-black)}.panel.is-light .panel-heading{background-color:var(--blm-light);color:var(--blm-light-inv)}.panel.is-light .panel-tabs a.is-active{border-bottom-color:var(--blm-light)}.panel.is-light .panel-block.is-active .panel-icon{color:var(--blm-light)}.panel.is-dark .panel-heading{background-color:var(--blm-dark);color:var(--blm-dark-inv)}.panel.is-dark .panel-tabs a.is-active{border-bottom-color:var(--blm-dark)}.panel.is-dark .panel-block.is-active .panel-icon{color:var(--blm-dark)}.panel.is-primary .panel-heading{background-color:var(--blm-prim);color:var(--blm-prim-inv)}.panel.is-primary .panel-tabs a.is-active{border-bottom-color:var(--blm-prim)}.panel.is-primary .panel-block.is-active .panel-icon{color:var(--blm-prim)}.panel.is-link .panel-heading{background-color:var(--blm-link);color:var(--blm-link-inv)}.panel.is-link .panel-tabs a.is-active{border-bottom-color:var(--blm-link)}.panel.is-link .panel-block.is-active .panel-icon{color:var(--blm-link)}.panel.is-info .panel-heading{background-color:var(--blm-info);color:var(--blm-info-inv)}.panel.is-info .panel-tabs a.is-active{border-bottom-color:var(--blm-info)}.panel.is-info .panel-block.is-active .panel-icon{color:var(--blm-info)}.panel.is-success .panel-heading{background-color:var(--blm-sucs);color:var(--blm-sucs-inv)}.panel.is-success .panel-tabs a.is-active{border-bottom-color:var(--blm-sucs)}.panel.is-success .panel-block.is-active .panel-icon{color:var(--blm-sucs)}.panel.is-warning .panel-heading{background-color:var(--blm-warn);color:var(--blm-warn-inv)}.panel.is-warning .panel-tabs a.is-active{border-bottom-color:var(--blm-warn)}.panel.is-warning .panel-block.is-active .panel-icon{color:var(--blm-warn)}.panel.is-danger .panel-heading{background-color:var(--blm-dang);color:var(--blm-dang-inv)}.panel.is-danger .panel-tabs a.is-active{border-bottom-color:var(--blm-dang)}.panel.is-danger .panel-block.is-active .panel-icon{color:var(--blm-dang)}.panel-block:not(:last-child),.panel-tabs:not(:last-child){border-bottom:var(--blm-pnl-itm-bd)}.panel-heading{background-color:var(--blm-pnl-hdg-bg-clr);border-radius:var(--blm-pnl-radius) var(--blm-pnl-radius) 0 0;color:var(--blm-pnl-hdg-clr);font-size:var(--blm-pnl-hdg-s);font-weight:var(--blm-pnl-hdg-weight);line-height:var(--blm-pnl-hdg-line-height);padding:var(--blm-pnl-hdg-p)}.panel-tabs{align-items:flex-end;display:flex;font-size:var(--blm-pnl-tabs-font-s);justify-content:center}.panel-tabs a{border-bottom:var(--blm-pnl-tab-bd-bottom);margin-bottom:-1px;padding:.5em}.panel-tabs a.is-active{border-bottom-color:var(--blm-pnl-tab-act-bd-bottom-clr);color:var(--blm-pnl-tab-act-clr)}.panel-list a{color:var(--blm-pnl-list-itm-clr)}.panel-list a:hover{color:var(--blm-pnl-list-itm-hov-clr)}.panel-block{align-items:center;color:var(--blm-pnl-block-clr);display:flex;justify-content:flex-start;padding:.5em .75em}.panel-block input[type=checkbox]{margin-right:.75em}.panel-block>.control{flex-grow:1;flex-shrink:1;width:100%}.panel-block.is-wrapped{flex-wrap:wrap}.panel-block.is-active{border-left-color:var(--blm-pnl-block-act-bd-left-clr);color:var(--blm-pnl-block-act-clr)}.panel-block.is-active .panel-icon{color:var(--blm-pnl-block-act-icon-clr)}.panel-block:last-child{border-bottom-left-radius:var(--blm-pnl-radius);border-bottom-right-radius:var(--blm-pnl-radius)}a.panel-block,label.panel-block{cursor:pointer}a.panel-block:hover,label.panel-block:hover{background-color:var(--blm-pnl-block-hov-bg-clr)}.panel-icon{display:inline-block;font-size:14px;height:1em;line-height:1em;text-align:center;vertical-align:top;width:1em;color:var(--blm-pnl-icon-clr);margin-right:.75em}.panel-icon .fa{font-size:inherit;line-height:inherit}.tabs{-webkit-overflow-scrolling:touch;align-items:stretch;display:flex;font-size:var(--blm-s-normal);justify-content:space-between;overflow:hidden;overflow-x:auto;white-space:nowrap}.tabs a{align-items:center;border-bottom-color:var(--blm-tabs-bd-bottom-clr);border-bottom-style:var(--blm-tabs-bd-bottom-style);border-bottom-width:var(--blm-tabs-bd-bottom-width);color:var(--blm-tabs-link-clr);display:flex;justify-content:center;margin-bottom:calc(-1*var(--blm-tabs-bd-bottom-width));padding:var(--blm-tabs-link-p);vertical-align:top}.tabs a:hover{border-bottom-color:var(--blm-tabs-link-hov-bd-bottom-clr);color:var(--blm-tabs-link-hov-clr)}.tabs li{display:block}.tabs li.is-active a{border-bottom-color:var(--blm-tabs-link-act-bd-bottom-clr);color:var(--blm-tabs-link-act-clr)}.tabs ul{align-items:center;border-bottom-color:var(--blm-tabs-bd-bottom-clr);border-bottom-style:var(--blm-tabs-bd-bottom-style);border-bottom-width:var(--blm-tabs-bd-bottom-width);display:flex;flex-grow:1;flex-shrink:0;justify-content:flex-start}.tabs ul.is-left{padding-right:.75em}.tabs ul.is-center{flex:none;justify-content:center;padding-left:.75em;padding-right:.75em}.tabs ul.is-right{justify-content:flex-end;padding-left:.75em}.tabs .icon:first-child{margin-right:.5em}.tabs .icon:last-child{margin-left:.5em}.tabs.is-centered ul{justify-content:center}.tabs.is-right ul{justify-content:flex-end}.tabs.is-boxed a{border:1px solid transparent;border-radius:var(--blm-tabs-boxed-link-radius) var(--blm-tabs-boxed-link-radius) 0 0}.tabs.is-boxed a:hover{background-color:var(--blm-tabs-boxed-link-hov-bg-clr);border-bottom-color:var(--blm-tabs-boxed-link-hov-bd-bottom-clr)}.tabs.is-boxed li.is-active a{background-color:var(--blm-tabs-boxed-link-act-bg-clr);border-color:var(--blm-tabs-boxed-link-act-bd-clr);border-bottom-color:var(--blm-tabs-boxed-link-act-bd-bottom-clr)!important}.tabs.is-fullwidth li{flex-grow:1;flex-shrink:0}.tabs.is-toggle a{border-color:var(--blm-tabs-tgl-link-bd-clr);border-style:var(--blm-tabs-tgl-link-bd-style);border-width:var(--blm-tabs-tgl-link-bd-width);margin-bottom:0;position:relative}.tabs.is-toggle a:hover{background-color:var(--blm-tabs-tgl-link-hov-bg-clr);border-color:var(--blm-tabs-tgl-link-hov-bd-clr);z-index:2}.tabs.is-toggle li+li{margin-left:calc(-1*var(--blm-tabs-tgl-link-bd-width))}.tabs.is-toggle li:first-child a{border-top-left-radius:var(--blm-tabs-tgl-link-radius);border-bottom-left-radius:var(--blm-tabs-tgl-link-radius)}.tabs.is-toggle li:last-child a{border-bottom-right-radius:var(--blm-tabs-tgl-link-radius);border-top-right-radius:var(--blm-tabs-tgl-link-radius)}.tabs.is-toggle li.is-active a{background-color:var(--blm-tabs-tgl-link-act-bg-clr);border-color:var(--blm-tabs-tgl-link-act-bd-clr);color:var(--blm-tabs-tgl-link-act-clr);z-index:1}.tabs.is-toggle ul{border-bottom:none}.tabs.is-toggle.is-toggle-rounded li:first-child a{border-bottom-left-radius:var(--blm-radius-rounded);border-top-left-radius:var(--blm-radius-rounded);padding-left:1.25em}.tabs.is-toggle.is-toggle-rounded li:last-child a{border-bottom-right-radius:var(--blm-radius-rounded);border-top-right-radius:var(--blm-radius-rounded);padding-right:1.25em}.tabs.is-small{font-size:var(--blm-s-small)}.tabs.is-medium{font-size:var(--blm-s-medium)}.tabs.is-large{font-size:var(--blm-s-lg)}.column{display:block;flex-basis:0;flex-grow:1;flex-shrink:1;padding:var(--blm-column-gap)}.columns.is-mobile>.column.is-narrow{flex:none}.columns.is-mobile>.column.is-full{flex:none;width:100%}.columns.is-mobile>.column.is-three-quarters{flex:none;width:75%}.columns.is-mobile>.column.is-two-thirds{flex:none;width:66.6666%}.columns.is-mobile>.column.is-half{flex:none;width:50%}.columns.is-mobile>.column.is-one-third{flex:none;width:33.3333%}.columns.is-mobile>.column.is-one-quarter{flex:none;width:25%}.columns.is-mobile>.column.is-one-fifth{flex:none;width:20%}.columns.is-mobile>.column.is-two-fifths{flex:none;width:40%}.columns.is-mobile>.column.is-three-fifths{flex:none;width:60%}.columns.is-mobile>.column.is-four-fifths{flex:none;width:80%}.columns.is-mobile>.column.is-offset-three-quarters{margin-left:75%}.columns.is-mobile>.column.is-offset-two-thirds{margin-left:66.6666%}.columns.is-mobile>.column.is-offset-half{margin-left:50%}.columns.is-mobile>.column.is-offset-one-third{margin-left:33.3333%}.columns.is-mobile>.column.is-offset-one-quarter{margin-left:25%}.columns.is-mobile>.column.is-offset-one-fifth{margin-left:20%}.columns.is-mobile>.column.is-offset-two-fifths{margin-left:40%}.columns.is-mobile>.column.is-offset-three-fifths{margin-left:60%}.columns.is-mobile>.column.is-offset-four-fifths{margin-left:80%}.columns.is-mobile>.column.is-0{flex:none;width:0%}.columns.is-mobile>.column.is-offset-0{margin-left:0}.columns.is-mobile>.column.is-1{flex:none;width:8.33333%}.columns.is-mobile>.column.is-offset-1{margin-left:8.33333%}.columns.is-mobile>.column.is-2{flex:none;width:16.66667%}.columns.is-mobile>.column.is-offset-2{margin-left:16.66667%}.columns.is-mobile>.column.is-3{flex:none;width:25%}.columns.is-mobile>.column.is-offset-3{margin-left:25%}.columns.is-mobile>.column.is-4{flex:none;width:33.33333%}.columns.is-mobile>.column.is-offset-4{margin-left:33.33333%}.columns.is-mobile>.column.is-5{flex:none;width:41.66667%}.columns.is-mobile>.column.is-offset-5{margin-left:41.66667%}.columns.is-mobile>.column.is-6{flex:none;width:50%}.columns.is-mobile>.column.is-offset-6{margin-left:50%}.columns.is-mobile>.column.is-7{flex:none;width:58.33333%}.columns.is-mobile>.column.is-offset-7{margin-left:58.33333%}.columns.is-mobile>.column.is-8{flex:none;width:66.66667%}.columns.is-mobile>.column.is-offset-8{margin-left:66.66667%}.columns.is-mobile>.column.is-9{flex:none;width:75%}.columns.is-mobile>.column.is-offset-9{margin-left:75%}.columns.is-mobile>.column.is-10{flex:none;width:83.33333%}.columns.is-mobile>.column.is-offset-10{margin-left:83.33333%}.columns.is-mobile>.column.is-11{flex:none;width:91.66667%}.columns.is-mobile>.column.is-offset-11{margin-left:91.66667%}.columns.is-mobile>.column.is-12{flex:none;width:100%}.columns.is-mobile>.column.is-offset-12{margin-left:100%}@media screen and (max-width:768px){.column.is-narrow-mobile{flex:none}.column.is-full-mobile{flex:none;width:100%}.column.is-three-quarters-mobile{flex:none;width:75%}.column.is-two-thirds-mobile{flex:none;width:66.6666%}.column.is-half-mobile{flex:none;width:50%}.column.is-one-third-mobile{flex:none;width:33.3333%}.column.is-one-quarter-mobile{flex:none;width:25%}.column.is-one-fifth-mobile{flex:none;width:20%}.column.is-two-fifths-mobile{flex:none;width:40%}.column.is-three-fifths-mobile{flex:none;width:60%}.column.is-four-fifths-mobile{flex:none;width:80%}.column.is-offset-three-quarters-mobile{margin-left:75%}.column.is-offset-two-thirds-mobile{margin-left:66.6666%}.column.is-offset-half-mobile{margin-left:50%}.column.is-offset-one-third-mobile{margin-left:33.3333%}.column.is-offset-one-quarter-mobile{margin-left:25%}.column.is-offset-one-fifth-mobile{margin-left:20%}.column.is-offset-two-fifths-mobile{margin-left:40%}.column.is-offset-three-fifths-mobile{margin-left:60%}.column.is-offset-four-fifths-mobile{margin-left:80%}.column.is-0-mobile{flex:none;width:0%}.column.is-offset-0-mobile{margin-left:0}.column.is-1-mobile{flex:none;width:8.33333%}.column.is-offset-1-mobile{margin-left:8.33333%}.column.is-2-mobile{flex:none;width:16.66667%}.column.is-offset-2-mobile{margin-left:16.66667%}.column.is-3-mobile{flex:none;width:25%}.column.is-offset-3-mobile{margin-left:25%}.column.is-4-mobile{flex:none;width:33.33333%}.column.is-offset-4-mobile{margin-left:33.33333%}.column.is-5-mobile{flex:none;width:41.66667%}.column.is-offset-5-mobile{margin-left:41.66667%}.column.is-6-mobile{flex:none;width:50%}.column.is-offset-6-mobile{margin-left:50%}.column.is-7-mobile{flex:none;width:58.33333%}.column.is-offset-7-mobile{margin-left:58.33333%}.column.is-8-mobile{flex:none;width:66.66667%}.column.is-offset-8-mobile{margin-left:66.66667%}.column.is-9-mobile{flex:none;width:75%}.column.is-offset-9-mobile{margin-left:75%}.column.is-10-mobile{flex:none;width:83.33333%}.column.is-offset-10-mobile{margin-left:83.33333%}.column.is-11-mobile{flex:none;width:91.66667%}.column.is-offset-11-mobile{margin-left:91.66667%}.column.is-12-mobile{flex:none;width:100%}.column.is-offset-12-mobile{margin-left:100%}.columns.is-variable.is-0-mobile{--columnGap:0rem}}@media screen and (min-width:769px),print{.column.is-narrow,.column.is-narrow-tablet{flex:none}.column.is-full,.column.is-full-tablet{flex:none;width:100%}.column.is-three-quarters,.column.is-three-quarters-tablet{flex:none;width:75%}.column.is-two-thirds,.column.is-two-thirds-tablet{flex:none;width:66.6666%}.column.is-half,.column.is-half-tablet{flex:none;width:50%}.column.is-one-third,.column.is-one-third-tablet{flex:none;width:33.3333%}.column.is-one-quarter,.column.is-one-quarter-tablet{flex:none;width:25%}.column.is-one-fifth,.column.is-one-fifth-tablet{flex:none;width:20%}.column.is-two-fifths,.column.is-two-fifths-tablet{flex:none;width:40%}.column.is-three-fifths,.column.is-three-fifths-tablet{flex:none;width:60%}.column.is-four-fifths,.column.is-four-fifths-tablet{flex:none;width:80%}.column.is-offset-three-quarters,.column.is-offset-three-quarters-tablet{margin-left:75%}.column.is-offset-two-thirds,.column.is-offset-two-thirds-tablet{margin-left:66.6666%}.column.is-offset-half,.column.is-offset-half-tablet{margin-left:50%}.column.is-offset-one-third,.column.is-offset-one-third-tablet{margin-left:33.3333%}.column.is-offset-one-quarter,.column.is-offset-one-quarter-tablet{margin-left:25%}.column.is-offset-one-fifth,.column.is-offset-one-fifth-tablet{margin-left:20%}.column.is-offset-two-fifths,.column.is-offset-two-fifths-tablet{margin-left:40%}.column.is-offset-three-fifths,.column.is-offset-three-fifths-tablet{margin-left:60%}.column.is-offset-four-fifths,.column.is-offset-four-fifths-tablet{margin-left:80%}.column.is-0,.column.is-0-tablet{flex:none;width:0%}.column.is-offset-0,.column.is-offset-0-tablet{margin-left:0}.column.is-1,.column.is-1-tablet{flex:none;width:8.33333%}.column.is-offset-1,.column.is-offset-1-tablet{margin-left:8.33333%}.column.is-2,.column.is-2-tablet{flex:none;width:16.66667%}.column.is-offset-2,.column.is-offset-2-tablet{margin-left:16.66667%}.column.is-3,.column.is-3-tablet{flex:none;width:25%}.column.is-offset-3,.column.is-offset-3-tablet{margin-left:25%}.column.is-4,.column.is-4-tablet{flex:none;width:33.33333%}.column.is-offset-4,.column.is-offset-4-tablet{margin-left:33.33333%}.column.is-5,.column.is-5-tablet{flex:none;width:41.66667%}.column.is-offset-5,.column.is-offset-5-tablet{margin-left:41.66667%}.column.is-6,.column.is-6-tablet{flex:none;width:50%}.column.is-offset-6,.column.is-offset-6-tablet{margin-left:50%}.column.is-7,.column.is-7-tablet{flex:none;width:58.33333%}.column.is-offset-7,.column.is-offset-7-tablet{margin-left:58.33333%}.column.is-8,.column.is-8-tablet{flex:none;width:66.66667%}.column.is-offset-8,.column.is-offset-8-tablet{margin-left:66.66667%}.column.is-9,.column.is-9-tablet{flex:none;width:75%}.column.is-offset-9,.column.is-offset-9-tablet{margin-left:75%}.column.is-10,.column.is-10-tablet{flex:none;width:83.33333%}.column.is-offset-10,.column.is-offset-10-tablet{margin-left:83.33333%}.column.is-11,.column.is-11-tablet{flex:none;width:91.66667%}.column.is-offset-11,.column.is-offset-11-tablet{margin-left:91.66667%}.column.is-12,.column.is-12-tablet{flex:none;width:100%}.column.is-offset-12,.column.is-offset-12-tablet{margin-left:100%}.columns:not(.is-desktop){display:flex}}@media screen and (max-width:1023px){.column.is-narrow-touch{flex:none}.column.is-full-touch{flex:none;width:100%}.column.is-three-quarters-touch{flex:none;width:75%}.column.is-two-thirds-touch{flex:none;width:66.6666%}.column.is-half-touch{flex:none;width:50%}.column.is-one-third-touch{flex:none;width:33.3333%}.column.is-one-quarter-touch{flex:none;width:25%}.column.is-one-fifth-touch{flex:none;width:20%}.column.is-two-fifths-touch{flex:none;width:40%}.column.is-three-fifths-touch{flex:none;width:60%}.column.is-four-fifths-touch{flex:none;width:80%}.column.is-offset-three-quarters-touch{margin-left:75%}.column.is-offset-two-thirds-touch{margin-left:66.6666%}.column.is-offset-half-touch{margin-left:50%}.column.is-offset-one-third-touch{margin-left:33.3333%}.column.is-offset-one-quarter-touch{margin-left:25%}.column.is-offset-one-fifth-touch{margin-left:20%}.column.is-offset-two-fifths-touch{margin-left:40%}.column.is-offset-three-fifths-touch{margin-left:60%}.column.is-offset-four-fifths-touch{margin-left:80%}.column.is-0-touch{flex:none;width:0%}.column.is-offset-0-touch{margin-left:0}.column.is-1-touch{flex:none;width:8.33333%}.column.is-offset-1-touch{margin-left:8.33333%}.column.is-2-touch{flex:none;width:16.66667%}.column.is-offset-2-touch{margin-left:16.66667%}.column.is-3-touch{flex:none;width:25%}.column.is-offset-3-touch{margin-left:25%}.column.is-4-touch{flex:none;width:33.33333%}.column.is-offset-4-touch{margin-left:33.33333%}.column.is-5-touch{flex:none;width:41.66667%}.column.is-offset-5-touch{margin-left:41.66667%}.column.is-6-touch{flex:none;width:50%}.column.is-offset-6-touch{margin-left:50%}.column.is-7-touch{flex:none;width:58.33333%}.column.is-offset-7-touch{margin-left:58.33333%}.column.is-8-touch{flex:none;width:66.66667%}.column.is-offset-8-touch{margin-left:66.66667%}.column.is-9-touch{flex:none;width:75%}.column.is-offset-9-touch{margin-left:75%}.column.is-10-touch{flex:none;width:83.33333%}.column.is-offset-10-touch{margin-left:83.33333%}.column.is-11-touch{flex:none;width:91.66667%}.column.is-offset-11-touch{margin-left:91.66667%}.column.is-12-touch{flex:none;width:100%}.column.is-offset-12-touch{margin-left:100%}.columns.is-variable.is-0-touch{--columnGap:0rem}}@media screen and (min-width:1024px){.column.is-narrow-desktop{flex:none}.column.is-full-desktop{flex:none;width:100%}.column.is-three-quarters-desktop{flex:none;width:75%}.column.is-two-thirds-desktop{flex:none;width:66.6666%}.column.is-half-desktop{flex:none;width:50%}.column.is-one-third-desktop{flex:none;width:33.3333%}.column.is-one-quarter-desktop{flex:none;width:25%}.column.is-one-fifth-desktop{flex:none;width:20%}.column.is-two-fifths-desktop{flex:none;width:40%}.column.is-three-fifths-desktop{flex:none;width:60%}.column.is-four-fifths-desktop{flex:none;width:80%}.column.is-offset-three-quarters-desktop{margin-left:75%}.column.is-offset-two-thirds-desktop{margin-left:66.6666%}.column.is-offset-half-desktop{margin-left:50%}.column.is-offset-one-third-desktop{margin-left:33.3333%}.column.is-offset-one-quarter-desktop{margin-left:25%}.column.is-offset-one-fifth-desktop{margin-left:20%}.column.is-offset-two-fifths-desktop{margin-left:40%}.column.is-offset-three-fifths-desktop{margin-left:60%}.column.is-offset-four-fifths-desktop{margin-left:80%}.column.is-0-desktop{flex:none;width:0%}.column.is-offset-0-desktop{margin-left:0}.column.is-1-desktop{flex:none;width:8.33333%}.column.is-offset-1-desktop{margin-left:8.33333%}.column.is-2-desktop{flex:none;width:16.66667%}.column.is-offset-2-desktop{margin-left:16.66667%}.column.is-3-desktop{flex:none;width:25%}.column.is-offset-3-desktop{margin-left:25%}.column.is-4-desktop{flex:none;width:33.33333%}.column.is-offset-4-desktop{margin-left:33.33333%}.column.is-5-desktop{flex:none;width:41.66667%}.column.is-offset-5-desktop{margin-left:41.66667%}.column.is-6-desktop{flex:none;width:50%}.column.is-offset-6-desktop{margin-left:50%}.column.is-7-desktop{flex:none;width:58.33333%}.column.is-offset-7-desktop{margin-left:58.33333%}.column.is-8-desktop{flex:none;width:66.66667%}.column.is-offset-8-desktop{margin-left:66.66667%}.column.is-9-desktop{flex:none;width:75%}.column.is-offset-9-desktop{margin-left:75%}.column.is-10-desktop{flex:none;width:83.33333%}.column.is-offset-10-desktop{margin-left:83.33333%}.column.is-11-desktop{flex:none;width:91.66667%}.column.is-offset-11-desktop{margin-left:91.66667%}.column.is-12-desktop{flex:none;width:100%}.column.is-offset-12-desktop{margin-left:100%}.columns.is-desktop{display:flex}}@media screen and (min-width:1216px){.column.is-narrow-widescreen{flex:none}.column.is-full-widescreen{flex:none;width:100%}.column.is-three-quarters-widescreen{flex:none;width:75%}.column.is-two-thirds-widescreen{flex:none;width:66.6666%}.column.is-half-widescreen{flex:none;width:50%}.column.is-one-third-widescreen{flex:none;width:33.3333%}.column.is-one-quarter-widescreen{flex:none;width:25%}.column.is-one-fifth-widescreen{flex:none;width:20%}.column.is-two-fifths-widescreen{flex:none;width:40%}.column.is-three-fifths-widescreen{flex:none;width:60%}.column.is-four-fifths-widescreen{flex:none;width:80%}.column.is-offset-three-quarters-widescreen{margin-left:75%}.column.is-offset-two-thirds-widescreen{margin-left:66.6666%}.column.is-offset-half-widescreen{margin-left:50%}.column.is-offset-one-third-widescreen{margin-left:33.3333%}.column.is-offset-one-quarter-widescreen{margin-left:25%}.column.is-offset-one-fifth-widescreen{margin-left:20%}.column.is-offset-two-fifths-widescreen{margin-left:40%}.column.is-offset-three-fifths-widescreen{margin-left:60%}.column.is-offset-four-fifths-widescreen{margin-left:80%}.column.is-0-widescreen{flex:none;width:0%}.column.is-offset-0-widescreen{margin-left:0}.column.is-1-widescreen{flex:none;width:8.33333%}.column.is-offset-1-widescreen{margin-left:8.33333%}.column.is-2-widescreen{flex:none;width:16.66667%}.column.is-offset-2-widescreen{margin-left:16.66667%}.column.is-3-widescreen{flex:none;width:25%}.column.is-offset-3-widescreen{margin-left:25%}.column.is-4-widescreen{flex:none;width:33.33333%}.column.is-offset-4-widescreen{margin-left:33.33333%}.column.is-5-widescreen{flex:none;width:41.66667%}.column.is-offset-5-widescreen{margin-left:41.66667%}.column.is-6-widescreen{flex:none;width:50%}.column.is-offset-6-widescreen{margin-left:50%}.column.is-7-widescreen{flex:none;width:58.33333%}.column.is-offset-7-widescreen{margin-left:58.33333%}.column.is-8-widescreen{flex:none;width:66.66667%}.column.is-offset-8-widescreen{margin-left:66.66667%}.column.is-9-widescreen{flex:none;width:75%}.column.is-offset-9-widescreen{margin-left:75%}.column.is-10-widescreen{flex:none;width:83.33333%}.column.is-offset-10-widescreen{margin-left:83.33333%}.column.is-11-widescreen{flex:none;width:91.66667%}.column.is-offset-11-widescreen{margin-left:91.66667%}.column.is-12-widescreen{flex:none;width:100%}.column.is-offset-12-widescreen{margin-left:100%}.columns.is-variable.is-0-widescreen{--columnGap:0rem}}@media screen and (min-width:1408px){.column.is-narrow-fullhd{flex:none}.column.is-full-fullhd{flex:none;width:100%}.column.is-three-quarters-fullhd{flex:none;width:75%}.column.is-two-thirds-fullhd{flex:none;width:66.6666%}.column.is-half-fullhd{flex:none;width:50%}.column.is-one-third-fullhd{flex:none;width:33.3333%}.column.is-one-quarter-fullhd{flex:none;width:25%}.column.is-one-fifth-fullhd{flex:none;width:20%}.column.is-two-fifths-fullhd{flex:none;width:40%}.column.is-three-fifths-fullhd{flex:none;width:60%}.column.is-four-fifths-fullhd{flex:none;width:80%}.column.is-offset-three-quarters-fullhd{margin-left:75%}.column.is-offset-two-thirds-fullhd{margin-left:66.6666%}.column.is-offset-half-fullhd{margin-left:50%}.column.is-offset-one-third-fullhd{margin-left:33.3333%}.column.is-offset-one-quarter-fullhd{margin-left:25%}.column.is-offset-one-fifth-fullhd{margin-left:20%}.column.is-offset-two-fifths-fullhd{margin-left:40%}.column.is-offset-three-fifths-fullhd{margin-left:60%}.column.is-offset-four-fifths-fullhd{margin-left:80%}.column.is-0-fullhd{flex:none;width:0%}.column.is-offset-0-fullhd{margin-left:0}.column.is-1-fullhd{flex:none;width:8.33333%}.column.is-offset-1-fullhd{margin-left:8.33333%}.column.is-2-fullhd{flex:none;width:16.66667%}.column.is-offset-2-fullhd{margin-left:16.66667%}.column.is-3-fullhd{flex:none;width:25%}.column.is-offset-3-fullhd{margin-left:25%}.column.is-4-fullhd{flex:none;width:33.33333%}.column.is-offset-4-fullhd{margin-left:33.33333%}.column.is-5-fullhd{flex:none;width:41.66667%}.column.is-offset-5-fullhd{margin-left:41.66667%}.column.is-6-fullhd{flex:none;width:50%}.column.is-offset-6-fullhd{margin-left:50%}.column.is-7-fullhd{flex:none;width:58.33333%}.column.is-offset-7-fullhd{margin-left:58.33333%}.column.is-8-fullhd{flex:none;width:66.66667%}.column.is-offset-8-fullhd{margin-left:66.66667%}.column.is-9-fullhd{flex:none;width:75%}.column.is-offset-9-fullhd{margin-left:75%}.column.is-10-fullhd{flex:none;width:83.33333%}.column.is-offset-10-fullhd{margin-left:83.33333%}.column.is-11-fullhd{flex:none;width:91.66667%}.column.is-offset-11-fullhd{margin-left:91.66667%}.column.is-12-fullhd{flex:none;width:100%}.column.is-offset-12-fullhd{margin-left:100%}.columns.is-variable.is-0-fullhd{--columnGap:0rem}}.columns{margin:calc(-1*var(--blm-column-gap))}.columns:not(:last-child){margin-bottom:calc(1.5rem - var(--blm-column-gap))}.columns.is-centered{justify-content:center}.columns.is-gapless{margin-left:0;margin-right:0;margin-top:0}.columns.is-gapless>.column{margin:0;padding:0!important}.columns.is-gapless:not(:last-child){margin-bottom:1.5rem}.columns.is-gapless:last-child{margin-bottom:0}.columns.is-mobile{display:flex}.columns.is-multiline{flex-wrap:wrap}.columns.is-vcentered{align-items:center}.columns.is-variable{--columnGap:0.75rem;margin-left:calc(-1*var(--columnGap));margin-right:calc(-1*var(--columnGap))}.columns.is-variable .column{padding-left:var(--columnGap);padding-right:var(--columnGap)}.columns.is-variable.is-0{--columnGap:0rem}.columns.is-variable.is-1{--columnGap:0.25rem}.columns.is-variable.is-2{--columnGap:0.5rem}.columns.is-variable.is-3{--columnGap:0.75rem}.columns.is-variable.is-4{--columnGap:1rem}.columns.is-variable.is-5{--columnGap:1.25rem}.columns.is-variable.is-6{--columnGap:1.5rem}.columns.is-variable.is-7{--columnGap:1.75rem}.columns.is-variable.is-8{--columnGap:2rem}.tile{align-items:stretch;display:block;flex-basis:0;flex-grow:1;flex-shrink:1;min-height:-webkit-min-content;min-height:-moz-min-content;min-height:min-content}.tile.is-ancestor{margin:calc(var(--blm-tile-spacing)*-1)}.tile.is-ancestor:not(:last-child){margin-bottom:var(--blm-tile-spacing)}.tile.is-child{margin:0!important}.tile.is-parent{padding:var(--blm-tile-spacing)}.tile.is-vertical{flex-direction:column}.tile.is-vertical>.tile.is-child:not(:last-child){margin-bottom:1.5rem!important}@media screen and (min-width:769px),print{.columns.is-variable.is-0-tablet{--columnGap:0rem}.columns.is-variable.is-1-tablet{--columnGap:0.25rem}.columns.is-variable.is-2-tablet{--columnGap:0.5rem}.columns.is-variable.is-3-tablet{--columnGap:0.75rem}.columns.is-variable.is-4-tablet{--columnGap:1rem}.columns.is-variable.is-5-tablet{--columnGap:1.25rem}.columns.is-variable.is-6-tablet{--columnGap:1.5rem}.columns.is-variable.is-7-tablet{--columnGap:1.75rem}.columns.is-variable.is-8-tablet{--columnGap:2rem}.tile:not(.is-child){display:flex}.tile.is-1{flex:none;width:8.33333%}.tile.is-2{flex:none;width:16.66667%}.tile.is-3{flex:none;width:25%}.tile.is-4{flex:none;width:33.33333%}.tile.is-5{flex:none;width:41.66667%}.tile.is-6{flex:none;width:50%}.tile.is-7{flex:none;width:58.33333%}.tile.is-8{flex:none;width:66.66667%}.tile.is-9{flex:none;width:75%}.tile.is-10{flex:none;width:83.33333%}.tile.is-11{flex:none;width:91.66667%}.tile.is-12{flex:none;width:100%}}.has-text-white{color:var(--blm-white)!important}a.has-text-white:focus,a.has-text-white:hover{color:hsla(var(--blm-white-h),var(--blm-white-s),calc(var(--blm-white-l) - 10%),var(--blm-white-a))!important}.has-background-white{background-color:var(--blm-white)!important}.has-text-black{color:var(--blm-black)!important}a.has-text-black:focus,a.has-text-black:hover{color:hsla(var(--blm-black-h),var(--blm-black-s),calc(var(--blm-black-l) - 10%),var(--blm-black-a))!important}.has-background-black{background-color:var(--blm-black)!important}.has-text-light{color:var(--blm-light)!important}a.has-text-light:focus,a.has-text-light:hover{color:hsla(var(--blm-light-h),var(--blm-light-s),calc(var(--blm-light-l) - 10%),var(--blm-light-a))!important}.has-background-light{background-color:var(--blm-light)!important}.has-text-dark{color:var(--blm-dark)!important}a.has-text-dark:focus,a.has-text-dark:hover{color:hsla(var(--blm-dark-h),var(--blm-dark-s),calc(var(--blm-dark-l) - 10%),var(--blm-dark-a))!important}.has-background-dark{background-color:var(--blm-dark)!important}.has-text-primary{color:var(--blm-prim)!important}a.has-text-primary:focus,a.has-text-primary:hover{color:hsla(var(--blm-prim-h),var(--blm-prim-s),calc(var(--blm-prim-l) - 10%),var(--blm-prim-a))!important}.has-background-primary{background-color:var(--blm-prim)!important}.has-text-primary-light{color:var(--blm-prim-light)!important}a.has-text-primary-light:focus,a.has-text-primary-light:hover{color:hsla(var(--blm-prim-light-h),var(--blm-prim-light-s),calc(var(--blm-prim-light-l) - 10%),var(--blm-prim-light-a))!important}.has-background-primary-light{background-color:var(--blm-prim-light)!important}.has-text-primary-dark{color:var(--blm-prim-dark)!important}a.has-text-primary-dark:focus,a.has-text-primary-dark:hover{color:hsla(var(--blm-prim-dark-h),var(--blm-prim-dark-s),calc(var(--blm-prim-dark-l) + 10%),var(--blm-prim-dark-a))!important}.has-background-primary-dark{background-color:var(--blm-prim-dark)!important}.has-text-link{color:var(--blm-link)!important}a.has-text-link:focus,a.has-text-link:hover{color:hsla(var(--blm-link-h),var(--blm-link-s),calc(var(--blm-link-l) - 10%),var(--blm-link-a))!important}.has-background-link{background-color:var(--blm-link)!important}.has-text-link-light{color:var(--blm-link-light)!important}a.has-text-link-light:focus,a.has-text-link-light:hover{color:hsla(var(--blm-link-light-h),var(--blm-link-light-s),calc(var(--blm-link-light-l) - 10%),var(--blm-link-light-a))!important}.has-background-link-light{background-color:var(--blm-link-light)!important}.has-text-link-dark{color:var(--blm-link-dark)!important}a.has-text-link-dark:focus,a.has-text-link-dark:hover{color:hsla(var(--blm-link-dark-h),var(--blm-link-dark-s),calc(var(--blm-link-dark-l) + 10%),var(--blm-link-dark-a))!important}.has-background-link-dark{background-color:var(--blm-link-dark)!important}.has-text-info{color:var(--blm-info)!important}a.has-text-info:focus,a.has-text-info:hover{color:hsla(var(--blm-info-h),var(--blm-info-s),calc(var(--blm-info-l) - 10%),var(--blm-info-a))!important}.has-background-info{background-color:var(--blm-info)!important}.has-text-info-light{color:var(--blm-info-light)!important}a.has-text-info-light:focus,a.has-text-info-light:hover{color:hsla(var(--blm-info-light-h),var(--blm-info-light-s),calc(var(--blm-info-light-l) - 10%),var(--blm-info-light-a))!important}.has-background-info-light{background-color:var(--blm-info-light)!important}.has-text-info-dark{color:var(--blm-info-dark)!important}a.has-text-info-dark:focus,a.has-text-info-dark:hover{color:hsla(var(--blm-info-dark-h),var(--blm-info-dark-s),calc(var(--blm-info-dark-l) + 10%),var(--blm-info-dark-a))!important}.has-background-info-dark{background-color:var(--blm-info-dark)!important}.has-text-success{color:var(--blm-sucs)!important}a.has-text-success:focus,a.has-text-success:hover{color:hsla(var(--blm-sucs-h),var(--blm-sucs-s),calc(var(--blm-sucs-l) - 10%),var(--blm-sucs-a))!important}.has-background-success{background-color:var(--blm-sucs)!important}.has-text-success-light{color:var(--blm-sucs-light)!important}a.has-text-success-light:focus,a.has-text-success-light:hover{color:hsla(var(--blm-sucs-light-h),var(--blm-sucs-light-s),calc(var(--blm-sucs-light-l) - 10%),var(--blm-sucs-light-a))!important}.has-background-success-light{background-color:var(--blm-sucs-light)!important}.has-text-success-dark{color:var(--blm-sucs-dark)!important}a.has-text-success-dark:focus,a.has-text-success-dark:hover{color:hsla(var(--blm-sucs-dark-h),var(--blm-sucs-dark-s),calc(var(--blm-sucs-dark-l) + 10%),var(--blm-sucs-dark-a))!important}.has-background-success-dark{background-color:var(--blm-sucs-dark)!important}.has-text-warning{color:var(--blm-warn)!important}a.has-text-warning:focus,a.has-text-warning:hover{color:hsla(var(--blm-warn-h),var(--blm-warn-s),calc(var(--blm-warn-l) - 10%),var(--blm-warn-a))!important}.has-background-warning{background-color:var(--blm-warn)!important}.has-text-warning-light{color:var(--blm-warn-light)!important}a.has-text-warning-light:focus,a.has-text-warning-light:hover{color:hsla(var(--blm-warn-light-h),var(--blm-warn-light-s),calc(var(--blm-warn-light-l) - 10%),var(--blm-warn-light-a))!important}.has-background-warning-light{background-color:var(--blm-warn-light)!important}.has-text-warning-dark{color:var(--blm-warn-dark)!important}a.has-text-warning-dark:focus,a.has-text-warning-dark:hover{color:hsla(var(--blm-warn-dark-h),var(--blm-warn-dark-s),calc(var(--blm-warn-dark-l) + 10%),var(--blm-warn-dark-a))!important}.has-background-warning-dark{background-color:var(--blm-warn-dark)!important}.has-text-danger{color:var(--blm-dang)!important}a.has-text-danger:focus,a.has-text-danger:hover{color:hsla(var(--blm-dang-h),var(--blm-dang-s),calc(var(--blm-dang-l) - 10%),var(--blm-dang-a))!important}.has-background-danger{background-color:var(--blm-dang)!important}.has-text-danger-light{color:var(--blm-dang-light)!important}a.has-text-danger-light:focus,a.has-text-danger-light:hover{color:hsla(var(--blm-dang-light-h),var(--blm-dang-light-s),calc(var(--blm-dang-light-l) - 10%),var(--blm-dang-light-a))!important}.has-background-danger-light{background-color:var(--blm-dang-light)!important}.has-text-danger-dark{color:var(--blm-dang-dark)!important}a.has-text-danger-dark:focus,a.has-text-danger-dark:hover{color:hsla(var(--blm-dang-dark-h),var(--blm-dang-dark-s),calc(var(--blm-dang-dark-l) + 10%),var(--blm-dang-dark-a))!important}.has-background-danger-dark{background-color:var(--blm-dang-dark)!important}.has-text-black-bis{color:var(--blm-black-bis)!important}.has-background-black-bis{background-color:var(--blm-black-bis)!important}.has-text-black-ter{color:var(--blm-black-ter)!important}.has-background-black-ter{background-color:var(--blm-black-ter)!important}.has-text-grey-darker{color:var(--blm-grey-darker)!important}.has-background-grey-darker{background-color:var(--blm-grey-darker)!important}.has-text-grey-dark{color:var(--blm-grey-dark)!important}.has-background-grey-dark{background-color:var(--blm-grey-dark)!important}.has-text-grey{color:var(--blm-grey)!important}.has-background-grey{background-color:var(--blm-grey)!important}.has-text-grey-light{color:var(--blm-grey-light)!important}.has-background-grey-light{background-color:var(--blm-grey-light)!important}.has-text-grey-lighter{color:var(--blm-grey-lighter)!important}.has-background-grey-lighter{background-color:var(--blm-grey-lighter)!important}.has-text-white-ter{color:var(--blm-white-ter)!important}.has-background-white-ter{background-color:var(--blm-white-ter)!important}.has-text-white-bis{color:var(--blm-white-bis)!important}.has-background-white-bis{background-color:var(--blm-white-bis)!important}.is-clearfix::after{clear:both;content:\\" \\";display:table}.is-pulled-left{float:left!important}.is-pulled-right{float:right!important}.is-radiusless{border-radius:0!important}.is-shadowless{box-shadow:none!important}.is-clipped{overflow:hidden!important}.is-relative{position:relative!important}.is-marginless{margin:0!important}.is-paddingless{padding:0!important}.mt-0{margin-top:0!important}.mr-0{margin-right:0!important}.mb-0{margin-bottom:0!important}.ml-0{margin-left:0!important}.mx-0{margin-left:0!important;margin-right:0!important}.my-0{margin-top:0!important;margin-bottom:0!important}.mt-1{margin-top:.25rem!important}.mr-1{margin-right:.25rem!important}.mb-1{margin-bottom:.25rem!important}.ml-1{margin-left:.25rem!important}.mx-1{margin-left:.25rem!important;margin-right:.25rem!important}.my-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.mt-2{margin-top:.5rem!important}.mr-2{margin-right:.5rem!important}.mb-2{margin-bottom:.5rem!important}.ml-2{margin-left:.5rem!important}.mx-2{margin-left:.5rem!important;margin-right:.5rem!important}.my-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.mt-3{margin-top:.75rem!important}.mr-3{margin-right:.75rem!important}.mb-3{margin-bottom:.75rem!important}.ml-3{margin-left:.75rem!important}.mx-3{margin-left:.75rem!important;margin-right:.75rem!important}.my-3{margin-top:.75rem!important;margin-bottom:.75rem!important}.mt-4{margin-top:1rem!important}.mr-4{margin-right:1rem!important}.mb-4{margin-bottom:1rem!important}.ml-4{margin-left:1rem!important}.mx-4{margin-left:1rem!important;margin-right:1rem!important}.my-4{margin-top:1rem!important;margin-bottom:1rem!important}.mt-5{margin-top:1.5rem!important}.mr-5{margin-right:1.5rem!important}.mb-5{margin-bottom:1.5rem!important}.ml-5{margin-left:1.5rem!important}.mx-5{margin-left:1.5rem!important;margin-right:1.5rem!important}.my-5{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.mt-6{margin-top:3rem!important}.mr-6{margin-right:3rem!important}.mb-6{margin-bottom:3rem!important}.ml-6{margin-left:3rem!important}.mx-6{margin-left:3rem!important;margin-right:3rem!important}.my-6{margin-top:3rem!important;margin-bottom:3rem!important}.pt-0{padding-top:0!important}.pr-0{padding-right:0!important}.pb-0{padding-bottom:0!important}.pl-0{padding-left:0!important}.px-0{padding-left:0!important;padding-right:0!important}.py-0{padding-top:0!important;padding-bottom:0!important}.pt-1{padding-top:.25rem!important}.pr-1{padding-right:.25rem!important}.pb-1{padding-bottom:.25rem!important}.pl-1{padding-left:.25rem!important}.px-1{padding-left:.25rem!important;padding-right:.25rem!important}.py-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.pt-2{padding-top:.5rem!important}.pr-2{padding-right:.5rem!important}.pb-2{padding-bottom:.5rem!important}.pl-2{padding-left:.5rem!important}.px-2{padding-left:.5rem!important;padding-right:.5rem!important}.py-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.pt-3{padding-top:.75rem!important}.pr-3{padding-right:.75rem!important}.pb-3{padding-bottom:.75rem!important}.pl-3{padding-left:.75rem!important}.px-3{padding-left:.75rem!important;padding-right:.75rem!important}.py-3{padding-top:.75rem!important;padding-bottom:.75rem!important}.pt-4{padding-top:1rem!important}.pr-4{padding-right:1rem!important}.pb-4{padding-bottom:1rem!important}.pl-4{padding-left:1rem!important}.px-4{padding-left:1rem!important;padding-right:1rem!important}.py-4{padding-top:1rem!important;padding-bottom:1rem!important}.pt-5{padding-top:1.5rem!important}.pr-5{padding-right:1.5rem!important}.pb-5{padding-bottom:1.5rem!important}.pl-5{padding-left:1.5rem!important}.px-5{padding-left:1.5rem!important;padding-right:1.5rem!important}.py-5{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.pt-6{padding-top:3rem!important}.pr-6{padding-right:3rem!important}.pb-6{padding-bottom:3rem!important}.pl-6{padding-left:3rem!important}.px-6{padding-left:3rem!important;padding-right:3rem!important}.py-6{padding-top:3rem!important;padding-bottom:3rem!important}.is-size-1{font-size:var(--blm-s-1)!important}.is-size-2{font-size:var(--blm-s-2)!important}.is-size-3{font-size:var(--blm-s-3)!important}.is-size-4{font-size:var(--blm-s-4)!important}.is-size-5{font-size:var(--blm-s-5)!important}.is-size-6{font-size:var(--blm-s-6)!important}.is-size-7{font-size:var(--blm-s-7)!important}@media screen and (max-width:768px){.columns.is-variable.is-1-mobile{--columnGap:0.25rem}.columns.is-variable.is-2-mobile{--columnGap:0.5rem}.columns.is-variable.is-3-mobile{--columnGap:0.75rem}.columns.is-variable.is-4-mobile{--columnGap:1rem}.columns.is-variable.is-5-mobile{--columnGap:1.25rem}.columns.is-variable.is-6-mobile{--columnGap:1.5rem}.columns.is-variable.is-7-mobile{--columnGap:1.75rem}.columns.is-variable.is-8-mobile{--columnGap:2rem}.is-size-1-mobile{font-size:var(--blm-s-1)!important}.is-size-2-mobile{font-size:var(--blm-s-2)!important}.is-size-3-mobile{font-size:var(--blm-s-3)!important}.is-size-4-mobile{font-size:var(--blm-s-4)!important}.is-size-5-mobile{font-size:var(--blm-s-5)!important}.is-size-6-mobile{font-size:var(--blm-s-6)!important}.is-size-7-mobile{font-size:var(--blm-s-7)!important}}@media screen and (min-width:769px),print{.is-size-1-tablet{font-size:var(--blm-s-1)!important}.is-size-2-tablet{font-size:var(--blm-s-2)!important}.is-size-3-tablet{font-size:var(--blm-s-3)!important}.is-size-4-tablet{font-size:var(--blm-s-4)!important}.is-size-5-tablet{font-size:var(--blm-s-5)!important}.is-size-6-tablet{font-size:var(--blm-s-6)!important}.is-size-7-tablet{font-size:var(--blm-s-7)!important}}@media screen and (max-width:1023px){.columns.is-variable.is-1-touch{--columnGap:0.25rem}.columns.is-variable.is-2-touch{--columnGap:0.5rem}.columns.is-variable.is-3-touch{--columnGap:0.75rem}.columns.is-variable.is-4-touch{--columnGap:1rem}.columns.is-variable.is-5-touch{--columnGap:1.25rem}.columns.is-variable.is-6-touch{--columnGap:1.5rem}.columns.is-variable.is-7-touch{--columnGap:1.75rem}.columns.is-variable.is-8-touch{--columnGap:2rem}.is-size-1-touch{font-size:var(--blm-s-1)!important}.is-size-2-touch{font-size:var(--blm-s-2)!important}.is-size-3-touch{font-size:var(--blm-s-3)!important}.is-size-4-touch{font-size:var(--blm-s-4)!important}.is-size-5-touch{font-size:var(--blm-s-5)!important}.is-size-6-touch{font-size:var(--blm-s-6)!important}.is-size-7-touch{font-size:var(--blm-s-7)!important}}@media screen and (min-width:1024px){.columns.is-variable.is-0-desktop{--columnGap:0rem}.columns.is-variable.is-1-desktop{--columnGap:0.25rem}.columns.is-variable.is-2-desktop{--columnGap:0.5rem}.columns.is-variable.is-3-desktop{--columnGap:0.75rem}.columns.is-variable.is-4-desktop{--columnGap:1rem}.columns.is-variable.is-5-desktop{--columnGap:1.25rem}.columns.is-variable.is-6-desktop{--columnGap:1.5rem}.columns.is-variable.is-7-desktop{--columnGap:1.75rem}.columns.is-variable.is-8-desktop{--columnGap:2rem}.is-size-1-desktop{font-size:var(--blm-s-1)!important}.is-size-2-desktop{font-size:var(--blm-s-2)!important}.is-size-3-desktop{font-size:var(--blm-s-3)!important}.is-size-4-desktop{font-size:var(--blm-s-4)!important}.is-size-5-desktop{font-size:var(--blm-s-5)!important}.is-size-6-desktop{font-size:var(--blm-s-6)!important}.is-size-7-desktop{font-size:var(--blm-s-7)!important}}.has-text-centered{text-align:center!important}.has-text-justified{text-align:justify!important}.has-text-left{text-align:left!important}.has-text-right{text-align:right!important}@media screen and (min-width:769px),print{.has-text-centered-tablet{text-align:center!important}}@media screen and (min-width:769px) and (max-width:1023px){.columns.is-variable.is-0-tablet-only{--columnGap:0rem}.columns.is-variable.is-1-tablet-only{--columnGap:0.25rem}.columns.is-variable.is-2-tablet-only{--columnGap:0.5rem}.columns.is-variable.is-3-tablet-only{--columnGap:0.75rem}.columns.is-variable.is-4-tablet-only{--columnGap:1rem}.columns.is-variable.is-5-tablet-only{--columnGap:1.25rem}.columns.is-variable.is-6-tablet-only{--columnGap:1.5rem}.columns.is-variable.is-7-tablet-only{--columnGap:1.75rem}.columns.is-variable.is-8-tablet-only{--columnGap:2rem}.has-text-centered-tablet-only{text-align:center!important}}@media screen and (max-width:1023px){.has-text-centered-touch{text-align:center!important}}@media screen and (min-width:1024px){.has-text-centered-desktop{text-align:center!important}}@media screen and (min-width:1024px) and (max-width:1215px){.columns.is-variable.is-0-desktop-only{--columnGap:0rem}.columns.is-variable.is-1-desktop-only{--columnGap:0.25rem}.columns.is-variable.is-2-desktop-only{--columnGap:0.5rem}.columns.is-variable.is-3-desktop-only{--columnGap:0.75rem}.columns.is-variable.is-4-desktop-only{--columnGap:1rem}.columns.is-variable.is-5-desktop-only{--columnGap:1.25rem}.columns.is-variable.is-6-desktop-only{--columnGap:1.5rem}.columns.is-variable.is-7-desktop-only{--columnGap:1.75rem}.columns.is-variable.is-8-desktop-only{--columnGap:2rem}.has-text-centered-desktop-only{text-align:center!important}}@media screen and (min-width:1216px){.columns.is-variable.is-1-widescreen{--columnGap:0.25rem}.columns.is-variable.is-2-widescreen{--columnGap:0.5rem}.columns.is-variable.is-3-widescreen{--columnGap:0.75rem}.columns.is-variable.is-4-widescreen{--columnGap:1rem}.columns.is-variable.is-5-widescreen{--columnGap:1.25rem}.columns.is-variable.is-6-widescreen{--columnGap:1.5rem}.columns.is-variable.is-7-widescreen{--columnGap:1.75rem}.columns.is-variable.is-8-widescreen{--columnGap:2rem}.is-size-1-widescreen{font-size:var(--blm-s-1)!important}.is-size-2-widescreen{font-size:var(--blm-s-2)!important}.is-size-3-widescreen{font-size:var(--blm-s-3)!important}.is-size-4-widescreen{font-size:var(--blm-s-4)!important}.is-size-5-widescreen{font-size:var(--blm-s-5)!important}.is-size-6-widescreen{font-size:var(--blm-s-6)!important}.is-size-7-widescreen{font-size:var(--blm-s-7)!important}.has-text-centered-widescreen{text-align:center!important}}@media screen and (min-width:1216px) and (max-width:1407px){.columns.is-variable.is-0-widescreen-only{--columnGap:0rem}.columns.is-variable.is-1-widescreen-only{--columnGap:0.25rem}.columns.is-variable.is-2-widescreen-only{--columnGap:0.5rem}.columns.is-variable.is-3-widescreen-only{--columnGap:0.75rem}.columns.is-variable.is-4-widescreen-only{--columnGap:1rem}.columns.is-variable.is-5-widescreen-only{--columnGap:1.25rem}.columns.is-variable.is-6-widescreen-only{--columnGap:1.5rem}.columns.is-variable.is-7-widescreen-only{--columnGap:1.75rem}.columns.is-variable.is-8-widescreen-only{--columnGap:2rem}.has-text-centered-widescreen-only{text-align:center!important}}@media screen and (min-width:1408px){.columns.is-variable.is-1-fullhd{--columnGap:0.25rem}.columns.is-variable.is-2-fullhd{--columnGap:0.5rem}.columns.is-variable.is-3-fullhd{--columnGap:0.75rem}.columns.is-variable.is-4-fullhd{--columnGap:1rem}.columns.is-variable.is-5-fullhd{--columnGap:1.25rem}.columns.is-variable.is-6-fullhd{--columnGap:1.5rem}.columns.is-variable.is-7-fullhd{--columnGap:1.75rem}.columns.is-variable.is-8-fullhd{--columnGap:2rem}.is-size-1-fullhd{font-size:var(--blm-s-1)!important}.is-size-2-fullhd{font-size:var(--blm-s-2)!important}.is-size-3-fullhd{font-size:var(--blm-s-3)!important}.is-size-4-fullhd{font-size:var(--blm-s-4)!important}.is-size-5-fullhd{font-size:var(--blm-s-5)!important}.is-size-6-fullhd{font-size:var(--blm-s-6)!important}.is-size-7-fullhd{font-size:var(--blm-s-7)!important}.has-text-centered-fullhd{text-align:center!important}}@media screen and (max-width:768px){.has-text-centered-mobile{text-align:center!important}.has-text-justified-mobile{text-align:justify!important}}@media screen and (min-width:769px),print{.has-text-justified-tablet{text-align:justify!important}}@media screen and (min-width:769px) and (max-width:1023px){.has-text-justified-tablet-only{text-align:justify!important}}@media screen and (max-width:1023px){.has-text-justified-touch{text-align:justify!important}}@media screen and (min-width:1024px){.has-text-justified-desktop{text-align:justify!important}}@media screen and (min-width:1024px) and (max-width:1215px){.has-text-justified-desktop-only{text-align:justify!important}}@media screen and (min-width:1216px){.has-text-justified-widescreen{text-align:justify!important}}@media screen and (min-width:1216px) and (max-width:1407px){.has-text-justified-widescreen-only{text-align:justify!important}}@media screen and (min-width:1408px){.has-text-justified-fullhd{text-align:justify!important}.has-text-left-fullhd{text-align:left!important}}@media screen and (min-width:769px),print{.has-text-left-tablet{text-align:left!important}}@media screen and (min-width:769px) and (max-width:1023px){.has-text-left-tablet-only{text-align:left!important}}@media screen and (max-width:1023px){.has-text-left-touch{text-align:left!important}}@media screen and (min-width:1024px){.has-text-left-desktop{text-align:left!important}}@media screen and (min-width:1024px) and (max-width:1215px){.has-text-left-desktop-only{text-align:left!important}}@media screen and (min-width:1216px){.has-text-left-widescreen{text-align:left!important}}@media screen and (min-width:1216px) and (max-width:1407px){.has-text-left-widescreen-only{text-align:left!important}}@media screen and (max-width:768px){.has-text-left-mobile{text-align:left!important}.has-text-right-mobile{text-align:right!important}.is-block-mobile{display:block!important}}.is-capitalized{text-transform:capitalize!important}.is-lowercase{text-transform:lowercase!important}.is-uppercase{text-transform:uppercase!important}.is-italic{font-style:italic!important}.has-text-weight-light{font-weight:var(--blm-weight-light)!important}.has-text-weight-normal{font-weight:var(--blm-weight-normal)!important}.has-text-weight-medium{font-weight:var(--blm-weight-medium)!important}.has-text-weight-semibold{font-weight:var(--blm-weight-semibold)!important}.has-text-weight-bold{font-weight:var(--blm-weight-bold)!important}.is-family-primary{font-family:var(--blm-family-prim)!important}.is-family-secondary{font-family:var(--blm-family-secondary)!important}.is-family-sans-serif{font-family:var(--blm-family-sans-serif)!important}.is-family-monospace{font-family:var(--blm-family-monospace)!important}.is-family-code{font-family:var(--blm-family-code)!important}.is-block{display:block!important}@media screen and (min-width:769px),print{.has-text-right-tablet{text-align:right!important}.is-block-tablet{display:block!important}}@media screen and (min-width:769px) and (max-width:1023px){.has-text-right-tablet-only{text-align:right!important}.is-block-tablet-only{display:block!important}}@media screen and (max-width:1023px){.has-text-right-touch{text-align:right!important}.is-block-touch{display:block!important}}@media screen and (min-width:1024px){.has-text-right-desktop{text-align:right!important}.is-block-desktop{display:block!important}}@media screen and (min-width:1024px) and (max-width:1215px){.has-text-right-desktop-only{text-align:right!important}.is-block-desktop-only{display:block!important}}@media screen and (min-width:1216px){.has-text-right-widescreen{text-align:right!important}.is-block-widescreen{display:block!important}}@media screen and (min-width:1216px) and (max-width:1407px){.has-text-right-widescreen-only{text-align:right!important}.is-block-widescreen-only{display:block!important}}@media screen and (min-width:1408px){.has-text-right-fullhd{text-align:right!important}.is-block-fullhd{display:block!important}.is-flex-fullhd{display:flex!important}}.is-flex{display:flex!important}@media screen and (max-width:768px){.is-flex-mobile{display:flex!important}}@media screen and (min-width:769px),print{.is-flex-tablet{display:flex!important}}@media screen and (min-width:769px) and (max-width:1023px){.is-flex-tablet-only{display:flex!important}}@media screen and (max-width:1023px){.is-flex-touch{display:flex!important}}@media screen and (min-width:1024px){.is-flex-desktop{display:flex!important}}@media screen and (min-width:1024px) and (max-width:1215px){.is-flex-desktop-only{display:flex!important}}@media screen and (min-width:1216px){.is-flex-widescreen{display:flex!important}}@media screen and (min-width:1216px) and (max-width:1407px){.is-flex-widescreen-only{display:flex!important}.is-inline-widescreen-only{display:inline!important}}.is-inline{display:inline!important}@media screen and (max-width:768px){.is-inline-mobile{display:inline!important}}@media screen and (min-width:769px),print{.is-inline-tablet{display:inline!important}}@media screen and (min-width:769px) and (max-width:1023px){.is-inline-tablet-only{display:inline!important}}@media screen and (max-width:1023px){.is-inline-touch{display:inline!important}}@media screen and (min-width:1024px){.is-inline-desktop{display:inline!important}}@media screen and (min-width:1024px) and (max-width:1215px){.is-inline-desktop-only{display:inline!important}}@media screen and (min-width:1216px){.is-inline-widescreen{display:inline!important}}@media screen and (min-width:1408px){.is-inline-fullhd{display:inline!important}.is-inline-block-fullhd{display:inline-block!important}}.is-inline-block{display:inline-block!important}@media screen and (max-width:768px){.is-inline-block-mobile{display:inline-block!important}}@media screen and (min-width:769px),print{.is-inline-block-tablet{display:inline-block!important}}@media screen and (min-width:769px) and (max-width:1023px){.is-inline-block-tablet-only{display:inline-block!important}}@media screen and (max-width:1023px){.is-inline-block-touch{display:inline-block!important}}@media screen and (min-width:1024px){.is-inline-block-desktop{display:inline-block!important}}@media screen and (min-width:1024px) and (max-width:1215px){.is-inline-block-desktop-only{display:inline-block!important}}@media screen and (min-width:1216px){.is-inline-block-widescreen{display:inline-block!important}}@media screen and (min-width:1216px) and (max-width:1407px){.is-inline-block-widescreen-only{display:inline-block!important}.is-inline-flex-widescreen-only{display:inline-flex!important}}.is-inline-flex{display:inline-flex!important}@media screen and (max-width:768px){.is-inline-flex-mobile{display:inline-flex!important}}@media screen and (min-width:769px),print{.is-inline-flex-tablet{display:inline-flex!important}}@media screen and (min-width:769px) and (max-width:1023px){.is-inline-flex-tablet-only{display:inline-flex!important}}@media screen and (max-width:1023px){.is-inline-flex-touch{display:inline-flex!important}}@media screen and (min-width:1024px){.is-inline-flex-desktop{display:inline-flex!important}}@media screen and (min-width:1024px) and (max-width:1215px){.is-inline-flex-desktop-only{display:inline-flex!important}}@media screen and (min-width:1216px){.is-inline-flex-widescreen{display:inline-flex!important}}@media screen and (min-width:1408px){.is-inline-flex-fullhd{display:inline-flex!important}.is-hidden-fullhd{display:none!important}}.is-hidden{display:none!important}.is-sr-only{border:none!important;clip:rect(0,0,0,0)!important;height:.01em!important;overflow:hidden!important;padding:0!important;position:absolute!important;white-space:nowrap!important;width:.01em!important}.is-invisible{visibility:hidden!important}@media screen and (max-width:768px){.is-hidden-mobile{display:none!important}.is-invisible-mobile{visibility:hidden!important}.hero.is-white.is-bold .navbar-menu{background-image:linear-gradient(141deg,hsla(calc(var(--blm-white-h) - 10),calc(var(--blm-white-s) + 10%),calc(var(--blm-white-l) - 10%),var(--blm-white-a)) 0,var(--blm-white) 71%,hsla(calc(var(--blm-white-h) + 10),calc(var(--blm-white-s) + 5%),calc(var(--blm-white-l) + 5%),var(--blm-white-a)) 100%)}}@media screen and (min-width:769px),print{.is-hidden-tablet{display:none!important}.is-invisible-tablet{visibility:hidden!important}}@media screen and (min-width:769px) and (max-width:1023px){.is-hidden-tablet-only{display:none!important}.is-invisible-tablet-only{visibility:hidden!important}}@media screen and (max-width:1023px){.is-hidden-touch{display:none!important}.is-invisible-touch{visibility:hidden!important}.hero.is-white .navbar-menu{background-color:var(--blm-white)}}@media screen and (min-width:1024px){.is-hidden-desktop{display:none!important}.is-invisible-desktop{visibility:hidden!important}.section.is-medium{padding:var(--blm-sct-p-medium)}.section.is-large{padding:var(--blm-sct-p-lg)}}@media screen and (min-width:1024px) and (max-width:1215px){.is-hidden-desktop-only{display:none!important}.is-invisible-desktop-only{visibility:hidden!important}}@media screen and (min-width:1216px){.is-hidden-widescreen{display:none!important}.is-invisible-widescreen{visibility:hidden!important}}@media screen and (min-width:1216px) and (max-width:1407px){.is-hidden-widescreen-only{display:none!important}.is-invisible-widescreen-only{visibility:hidden!important}}@media screen and (min-width:1408px){.is-invisible-fullhd{visibility:hidden!important}}.hero{align-items:stretch;display:flex;flex-direction:column;justify-content:space-between}.hero .navbar{background:0 0}.hero .tabs ul{border-bottom:none}.hero.is-white{background-color:var(--blm-white);color:var(--blm-white-inv)}.hero.is-white a:not(.button):not(.dropdown-item):not(.tag):not(.pagination-link.is-current),.hero.is-white strong{color:inherit}.hero.is-white .title{color:var(--blm-white-inv)}.hero.is-white .subtitle{color:hsla(var(--blm-white-inv-h),var(--blm-white-inv-s),var(--blm-white-inv-l),.9)}.hero.is-white .subtitle a:not(.button),.hero.is-white .subtitle strong{color:var(--blm-white-inv)}.hero.is-white .navbar-item,.hero.is-white .navbar-link{color:hsla(var(--blm-white-inv-h),var(--blm-white-inv-s),var(--blm-white-inv-l),.7)}.hero.is-white .navbar-link.is-active,.hero.is-white .navbar-link:hover,.hero.is-white a.navbar-item.is-active,.hero.is-white a.navbar-item:hover{background-color:hsla(var(--blm-white-h),var(--blm-white-s),calc(var(--blm-white-l) - 5%),var(--blm-white-a));color:var(--blm-white-inv)}.hero.is-white .tabs a{color:var(--blm-white-inv);opacity:.9}.hero.is-white .tabs a:hover,.hero.is-white .tabs li.is-active a{opacity:1}.hero.is-white .tabs.is-boxed a,.hero.is-white .tabs.is-toggle a{color:var(--blm-white-inv)}.hero.is-white .tabs.is-boxed a:hover,.hero.is-white .tabs.is-toggle a:hover{background-color:hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),.1)}.hero.is-white .tabs.is-boxed li.is-active a,.hero.is-white .tabs.is-boxed li.is-active a:hover,.hero.is-white .tabs.is-toggle li.is-active a,.hero.is-white .tabs.is-toggle li.is-active a:hover{background-color:var(--blm-white-inv);border-color:var(--blm-white-inv);color:var(--blm-white)}.hero.is-white.is-bold{background-image:linear-gradient(141deg,hsla(calc(var(--blm-white-h) - 10),calc(var(--blm-white-s) + 10%),calc(var(--blm-white-l) - 10%),var(--blm-white-a)) 0,var(--blm-white) 71%,hsla(calc(var(--blm-white-h) + 10),calc(var(--blm-white-s) + 5%),calc(var(--blm-white-l) + 5%),var(--blm-white-a)) 100%)}.hero.is-black{background-color:var(--blm-black);color:var(--blm-black-inv)}.hero.is-black a:not(.button):not(.dropdown-item):not(.tag):not(.pagination-link.is-current),.hero.is-black strong{color:inherit}.hero.is-black .title{color:var(--blm-black-inv)}.hero.is-black .subtitle{color:hsla(var(--blm-black-inv-h),var(--blm-black-inv-s),var(--blm-black-inv-l),.9)}.hero.is-black .subtitle a:not(.button),.hero.is-black .subtitle strong{color:var(--blm-black-inv)}.hero.is-black .navbar-item,.hero.is-black .navbar-link{color:hsla(var(--blm-black-inv-h),var(--blm-black-inv-s),var(--blm-black-inv-l),.7)}.hero.is-black .navbar-link.is-active,.hero.is-black .navbar-link:hover,.hero.is-black a.navbar-item.is-active,.hero.is-black a.navbar-item:hover{background-color:hsla(var(--blm-black-h),var(--blm-black-s),calc(var(--blm-black-l) - 5%),var(--blm-black-a));color:var(--blm-black-inv)}.hero.is-black .tabs a{color:var(--blm-black-inv);opacity:.9}.hero.is-black .tabs a:hover,.hero.is-black .tabs li.is-active a{opacity:1}.hero.is-black .tabs.is-boxed a,.hero.is-black .tabs.is-toggle a{color:var(--blm-black-inv)}.hero.is-black .tabs.is-boxed a:hover,.hero.is-black .tabs.is-toggle a:hover{background-color:hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),.1)}.hero.is-black .tabs.is-boxed li.is-active a,.hero.is-black .tabs.is-boxed li.is-active a:hover,.hero.is-black .tabs.is-toggle li.is-active a,.hero.is-black .tabs.is-toggle li.is-active a:hover{background-color:var(--blm-black-inv);border-color:var(--blm-black-inv);color:var(--blm-black)}.hero.is-black.is-bold{background-image:linear-gradient(141deg,hsla(calc(var(--blm-black-h) - 10),calc(var(--blm-black-s) + 10%),calc(var(--blm-black-l) - 10%),var(--blm-black-a)) 0,var(--blm-black) 71%,hsla(calc(var(--blm-black-h) + 10),calc(var(--blm-black-s) + 5%),calc(var(--blm-black-l) + 5%),var(--blm-black-a)) 100%)}.hero.is-light{background-color:var(--blm-light);color:var(--blm-light-inv)}.hero.is-light a:not(.button):not(.dropdown-item):not(.tag):not(.pagination-link.is-current),.hero.is-light strong{color:inherit}.hero.is-light .title{color:var(--blm-light-inv)}.hero.is-light .subtitle{color:hsla(var(--blm-light-inv-h),var(--blm-light-inv-s),var(--blm-light-inv-l),.9)}.hero.is-light .subtitle a:not(.button),.hero.is-light .subtitle strong{color:var(--blm-light-inv)}.hero.is-light .navbar-item,.hero.is-light .navbar-link{color:hsla(var(--blm-light-inv-h),var(--blm-light-inv-s),var(--blm-light-inv-l),.7)}.hero.is-light .navbar-link.is-active,.hero.is-light .navbar-link:hover,.hero.is-light a.navbar-item.is-active,.hero.is-light a.navbar-item:hover{background-color:hsla(var(--blm-light-h),var(--blm-light-s),calc(var(--blm-light-l) - 5%),var(--blm-light-a));color:var(--blm-light-inv)}.hero.is-light .tabs a{color:var(--blm-light-inv);opacity:.9}.hero.is-light .tabs a:hover,.hero.is-light .tabs li.is-active a{opacity:1}.hero.is-light .tabs.is-boxed a,.hero.is-light .tabs.is-toggle a{color:var(--blm-light-inv)}.hero.is-light .tabs.is-boxed a:hover,.hero.is-light .tabs.is-toggle a:hover{background-color:hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),.1)}.hero.is-light .tabs.is-boxed li.is-active a,.hero.is-light .tabs.is-boxed li.is-active a:hover,.hero.is-light .tabs.is-toggle li.is-active a,.hero.is-light .tabs.is-toggle li.is-active a:hover{background-color:var(--blm-light-inv);border-color:var(--blm-light-inv);color:var(--blm-light)}.hero.is-light.is-bold{background-image:linear-gradient(141deg,hsla(calc(var(--blm-light-h) - 10),calc(var(--blm-light-s) + 10%),calc(var(--blm-light-l) - 10%),var(--blm-light-a)) 0,var(--blm-light) 71%,hsla(calc(var(--blm-light-h) + 10),calc(var(--blm-light-s) + 5%),calc(var(--blm-light-l) + 5%),var(--blm-light-a)) 100%)}.hero.is-dark{background-color:var(--blm-dark);color:var(--blm-dark-inv)}.hero.is-dark a:not(.button):not(.dropdown-item):not(.tag):not(.pagination-link.is-current),.hero.is-dark strong{color:inherit}.hero.is-dark .title{color:var(--blm-dark-inv)}.hero.is-dark .subtitle{color:hsla(var(--blm-dark-inv-h),var(--blm-dark-inv-s),var(--blm-dark-inv-l),.9)}.hero.is-dark .subtitle a:not(.button),.hero.is-dark .subtitle strong{color:var(--blm-dark-inv)}.hero.is-dark .navbar-item,.hero.is-dark .navbar-link{color:hsla(var(--blm-dark-inv-h),var(--blm-dark-inv-s),var(--blm-dark-inv-l),.7)}.hero.is-dark .navbar-link.is-active,.hero.is-dark .navbar-link:hover,.hero.is-dark a.navbar-item.is-active,.hero.is-dark a.navbar-item:hover{background-color:hsla(var(--blm-dark-h),var(--blm-dark-s),calc(var(--blm-dark-l) - 5%),var(--blm-dark-a));color:var(--blm-dark-inv)}.hero.is-dark .tabs a{color:var(--blm-dark-inv);opacity:.9}.hero.is-dark .tabs a:hover,.hero.is-dark .tabs li.is-active a{opacity:1}.hero.is-dark .tabs.is-boxed a,.hero.is-dark .tabs.is-toggle a{color:var(--blm-dark-inv)}.hero.is-dark .tabs.is-boxed a:hover,.hero.is-dark .tabs.is-toggle a:hover{background-color:hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),.1)}.hero.is-dark .tabs.is-boxed li.is-active a,.hero.is-dark .tabs.is-boxed li.is-active a:hover,.hero.is-dark .tabs.is-toggle li.is-active a,.hero.is-dark .tabs.is-toggle li.is-active a:hover{background-color:var(--blm-dark-inv);border-color:var(--blm-dark-inv);color:var(--blm-dark)}.hero.is-dark.is-bold{background-image:linear-gradient(141deg,hsla(calc(var(--blm-dark-h) - 10),calc(var(--blm-dark-s) + 10%),calc(var(--blm-dark-l) - 10%),var(--blm-dark-a)) 0,var(--blm-dark) 71%,hsla(calc(var(--blm-dark-h) + 10),calc(var(--blm-dark-s) + 5%),calc(var(--blm-dark-l) + 5%),var(--blm-dark-a)) 100%)}.hero.is-primary{background-color:var(--blm-prim);color:var(--blm-prim-inv)}.hero.is-primary a:not(.button):not(.dropdown-item):not(.tag):not(.pagination-link.is-current),.hero.is-primary strong{color:inherit}.hero.is-primary .title{color:var(--blm-prim-inv)}.hero.is-primary .subtitle{color:hsla(var(--blm-prim-inv-h),var(--blm-prim-inv-s),var(--blm-prim-inv-l),.9)}.hero.is-primary .subtitle a:not(.button),.hero.is-primary .subtitle strong{color:var(--blm-prim-inv)}.hero.is-primary .navbar-item,.hero.is-primary .navbar-link{color:hsla(var(--blm-prim-inv-h),var(--blm-prim-inv-s),var(--blm-prim-inv-l),.7)}.hero.is-primary .navbar-link.is-active,.hero.is-primary .navbar-link:hover,.hero.is-primary a.navbar-item.is-active,.hero.is-primary a.navbar-item:hover{background-color:hsla(var(--blm-prim-h),var(--blm-prim-s),calc(var(--blm-prim-l) - 5%),var(--blm-prim-a));color:var(--blm-prim-inv)}.hero.is-primary .tabs a{color:var(--blm-prim-inv);opacity:.9}.hero.is-primary .tabs a:hover,.hero.is-primary .tabs li.is-active a{opacity:1}.hero.is-primary .tabs.is-boxed a,.hero.is-primary .tabs.is-toggle a{color:var(--blm-prim-inv)}.hero.is-primary .tabs.is-boxed a:hover,.hero.is-primary .tabs.is-toggle a:hover{background-color:hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),.1)}.hero.is-primary .tabs.is-boxed li.is-active a,.hero.is-primary .tabs.is-boxed li.is-active a:hover,.hero.is-primary .tabs.is-toggle li.is-active a,.hero.is-primary .tabs.is-toggle li.is-active a:hover{background-color:var(--blm-prim-inv);border-color:var(--blm-prim-inv);color:var(--blm-prim)}.hero.is-primary.is-bold{background-image:linear-gradient(141deg,hsla(calc(var(--blm-prim-h) - 10),calc(var(--blm-prim-s) + 10%),calc(var(--blm-prim-l) - 10%),var(--blm-prim-a)) 0,var(--blm-prim) 71%,hsla(calc(var(--blm-prim-h) + 10),calc(var(--blm-prim-s) + 5%),calc(var(--blm-prim-l) + 5%),var(--blm-prim-a)) 100%)}.hero.is-link{background-color:var(--blm-link);color:var(--blm-link-inv)}.hero.is-link a:not(.button):not(.dropdown-item):not(.tag):not(.pagination-link.is-current),.hero.is-link strong{color:inherit}.hero.is-link .title{color:var(--blm-link-inv)}.hero.is-link .subtitle{color:hsla(var(--blm-link-inv-h),var(--blm-link-inv-s),var(--blm-link-inv-l),.9)}.hero.is-link .subtitle a:not(.button),.hero.is-link .subtitle strong{color:var(--blm-link-inv)}.hero.is-link .navbar-item,.hero.is-link .navbar-link{color:hsla(var(--blm-link-inv-h),var(--blm-link-inv-s),var(--blm-link-inv-l),.7)}.hero.is-link .navbar-link.is-active,.hero.is-link .navbar-link:hover,.hero.is-link a.navbar-item.is-active,.hero.is-link a.navbar-item:hover{background-color:hsla(var(--blm-link-h),var(--blm-link-s),calc(var(--blm-link-l) - 5%),var(--blm-link-a));color:var(--blm-link-inv)}.hero.is-link .tabs a{color:var(--blm-link-inv);opacity:.9}.hero.is-link .tabs a:hover,.hero.is-link .tabs li.is-active a{opacity:1}.hero.is-link .tabs.is-boxed a,.hero.is-link .tabs.is-toggle a{color:var(--blm-link-inv)}.hero.is-link .tabs.is-boxed a:hover,.hero.is-link .tabs.is-toggle a:hover{background-color:hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),.1)}.hero.is-link .tabs.is-boxed li.is-active a,.hero.is-link .tabs.is-boxed li.is-active a:hover,.hero.is-link .tabs.is-toggle li.is-active a,.hero.is-link .tabs.is-toggle li.is-active a:hover{background-color:var(--blm-link-inv);border-color:var(--blm-link-inv);color:var(--blm-link)}.hero.is-link.is-bold{background-image:linear-gradient(141deg,hsla(calc(var(--blm-link-h) - 10),calc(var(--blm-link-s) + 10%),calc(var(--blm-link-l) - 10%),var(--blm-link-a)) 0,var(--blm-link) 71%,hsla(calc(var(--blm-link-h) + 10),calc(var(--blm-link-s) + 5%),calc(var(--blm-link-l) + 5%),var(--blm-link-a)) 100%)}.hero.is-info{background-color:var(--blm-info);color:var(--blm-info-inv)}.hero.is-info a:not(.button):not(.dropdown-item):not(.tag):not(.pagination-link.is-current),.hero.is-info strong{color:inherit}.hero.is-info .title{color:var(--blm-info-inv)}.hero.is-info .subtitle{color:hsla(var(--blm-info-inv-h),var(--blm-info-inv-s),var(--blm-info-inv-l),.9)}.hero.is-info .subtitle a:not(.button),.hero.is-info .subtitle strong{color:var(--blm-info-inv)}.hero.is-info .navbar-item,.hero.is-info .navbar-link{color:hsla(var(--blm-info-inv-h),var(--blm-info-inv-s),var(--blm-info-inv-l),.7)}.hero.is-info .navbar-link.is-active,.hero.is-info .navbar-link:hover,.hero.is-info a.navbar-item.is-active,.hero.is-info a.navbar-item:hover{background-color:hsla(var(--blm-info-h),var(--blm-info-s),calc(var(--blm-info-l) - 5%),var(--blm-info-a));color:var(--blm-info-inv)}.hero.is-info .tabs a{color:var(--blm-info-inv);opacity:.9}.hero.is-info .tabs a:hover,.hero.is-info .tabs li.is-active a{opacity:1}.hero.is-info .tabs.is-boxed a,.hero.is-info .tabs.is-toggle a{color:var(--blm-info-inv)}.hero.is-info .tabs.is-boxed a:hover,.hero.is-info .tabs.is-toggle a:hover{background-color:hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),.1)}.hero.is-info .tabs.is-boxed li.is-active a,.hero.is-info .tabs.is-boxed li.is-active a:hover,.hero.is-info .tabs.is-toggle li.is-active a,.hero.is-info .tabs.is-toggle li.is-active a:hover{background-color:var(--blm-info-inv);border-color:var(--blm-info-inv);color:var(--blm-info)}.hero.is-info.is-bold{background-image:linear-gradient(141deg,hsla(calc(var(--blm-info-h) - 10),calc(var(--blm-info-s) + 10%),calc(var(--blm-info-l) - 10%),var(--blm-info-a)) 0,var(--blm-info) 71%,hsla(calc(var(--blm-info-h) + 10),calc(var(--blm-info-s) + 5%),calc(var(--blm-info-l) + 5%),var(--blm-info-a)) 100%)}.hero.is-success{background-color:var(--blm-sucs);color:var(--blm-sucs-inv)}.hero.is-success a:not(.button):not(.dropdown-item):not(.tag):not(.pagination-link.is-current),.hero.is-success strong{color:inherit}.hero.is-success .title{color:var(--blm-sucs-inv)}.hero.is-success .subtitle{color:hsla(var(--blm-sucs-inv-h),var(--blm-sucs-inv-s),var(--blm-sucs-inv-l),.9)}.hero.is-success .subtitle a:not(.button),.hero.is-success .subtitle strong{color:var(--blm-sucs-inv)}.hero.is-success .navbar-item,.hero.is-success .navbar-link{color:hsla(var(--blm-sucs-inv-h),var(--blm-sucs-inv-s),var(--blm-sucs-inv-l),.7)}.hero.is-success .navbar-link.is-active,.hero.is-success .navbar-link:hover,.hero.is-success a.navbar-item.is-active,.hero.is-success a.navbar-item:hover{background-color:hsla(var(--blm-sucs-h),var(--blm-sucs-s),calc(var(--blm-sucs-l) - 5%),var(--blm-sucs-a));color:var(--blm-sucs-inv)}.hero.is-success .tabs a{color:var(--blm-sucs-inv);opacity:.9}.hero.is-success .tabs a:hover,.hero.is-success .tabs li.is-active a{opacity:1}.hero.is-success .tabs.is-boxed a,.hero.is-success .tabs.is-toggle a{color:var(--blm-sucs-inv)}.hero.is-success .tabs.is-boxed a:hover,.hero.is-success .tabs.is-toggle a:hover{background-color:hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),.1)}.hero.is-success .tabs.is-boxed li.is-active a,.hero.is-success .tabs.is-boxed li.is-active a:hover,.hero.is-success .tabs.is-toggle li.is-active a,.hero.is-success .tabs.is-toggle li.is-active a:hover{background-color:var(--blm-sucs-inv);border-color:var(--blm-sucs-inv);color:var(--blm-sucs)}.hero.is-success.is-bold{background-image:linear-gradient(141deg,hsla(calc(var(--blm-sucs-h) - 10),calc(var(--blm-sucs-s) + 10%),calc(var(--blm-sucs-l) - 10%),var(--blm-sucs-a)) 0,var(--blm-sucs) 71%,hsla(calc(var(--blm-sucs-h) + 10),calc(var(--blm-sucs-s) + 5%),calc(var(--blm-sucs-l) + 5%),var(--blm-sucs-a)) 100%)}.hero.is-warning{background-color:var(--blm-warn);color:var(--blm-warn-inv)}.hero.is-warning a:not(.button):not(.dropdown-item):not(.tag):not(.pagination-link.is-current),.hero.is-warning strong{color:inherit}.hero.is-warning .title{color:var(--blm-warn-inv)}.hero.is-warning .subtitle{color:hsla(var(--blm-warn-inv-h),var(--blm-warn-inv-s),var(--blm-warn-inv-l),.9)}.hero.is-warning .subtitle a:not(.button),.hero.is-warning .subtitle strong{color:var(--blm-warn-inv)}.hero.is-warning .navbar-item,.hero.is-warning .navbar-link{color:hsla(var(--blm-warn-inv-h),var(--blm-warn-inv-s),var(--blm-warn-inv-l),.7)}.hero.is-warning .navbar-link.is-active,.hero.is-warning .navbar-link:hover,.hero.is-warning a.navbar-item.is-active,.hero.is-warning a.navbar-item:hover{background-color:hsla(var(--blm-warn-h),var(--blm-warn-s),calc(var(--blm-warn-l) - 5%),var(--blm-warn-a));color:var(--blm-warn-inv)}.hero.is-warning .tabs a{color:var(--blm-warn-inv);opacity:.9}.hero.is-warning .tabs a:hover,.hero.is-warning .tabs li.is-active a{opacity:1}.hero.is-warning .tabs.is-boxed a,.hero.is-warning .tabs.is-toggle a{color:var(--blm-warn-inv)}.hero.is-warning .tabs.is-boxed a:hover,.hero.is-warning .tabs.is-toggle a:hover{background-color:hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),.1)}.hero.is-warning .tabs.is-boxed li.is-active a,.hero.is-warning .tabs.is-boxed li.is-active a:hover,.hero.is-warning .tabs.is-toggle li.is-active a,.hero.is-warning .tabs.is-toggle li.is-active a:hover{background-color:var(--blm-warn-inv);border-color:var(--blm-warn-inv);color:var(--blm-warn)}.hero.is-warning.is-bold{background-image:linear-gradient(141deg,hsla(calc(var(--blm-warn-h) - 10),calc(var(--blm-warn-s) + 10%),calc(var(--blm-warn-l) - 10%),var(--blm-warn-a)) 0,var(--blm-warn) 71%,hsla(calc(var(--blm-warn-h) + 10),calc(var(--blm-warn-s) + 5%),calc(var(--blm-warn-l) + 5%),var(--blm-warn-a)) 100%)}.hero.is-danger{background-color:var(--blm-dang);color:var(--blm-dang-inv)}.hero.is-danger a:not(.button):not(.dropdown-item):not(.tag):not(.pagination-link.is-current),.hero.is-danger strong{color:inherit}.hero.is-danger .title{color:var(--blm-dang-inv)}.hero.is-danger .subtitle{color:hsla(var(--blm-dang-inv-h),var(--blm-dang-inv-s),var(--blm-dang-inv-l),.9)}.hero.is-danger .subtitle a:not(.button),.hero.is-danger .subtitle strong{color:var(--blm-dang-inv)}@media screen and (max-width:1023px){.hero.is-black .navbar-menu{background-color:var(--blm-black)}.hero.is-light .navbar-menu{background-color:var(--blm-light)}.hero.is-dark .navbar-menu{background-color:var(--blm-dark)}.hero.is-primary .navbar-menu{background-color:var(--blm-prim)}.hero.is-link .navbar-menu{background-color:var(--blm-link)}.hero.is-info .navbar-menu{background-color:var(--blm-info)}.hero.is-success .navbar-menu{background-color:var(--blm-sucs)}.hero.is-warning .navbar-menu{background-color:var(--blm-warn)}.hero.is-danger .navbar-menu{background-color:var(--blm-dang)}}.hero.is-danger .navbar-item,.hero.is-danger .navbar-link{color:hsla(var(--blm-dang-inv-h),var(--blm-dang-inv-s),var(--blm-dang-inv-l),.7)}.hero.is-danger .navbar-link.is-active,.hero.is-danger .navbar-link:hover,.hero.is-danger a.navbar-item.is-active,.hero.is-danger a.navbar-item:hover{background-color:hsla(var(--blm-dang-h),var(--blm-dang-s),calc(var(--blm-dang-l) - 5%),var(--blm-dang-a));color:var(--blm-dang-inv)}.hero.is-danger .tabs a{color:var(--blm-dang-inv);opacity:.9}.hero.is-danger .tabs a:hover,.hero.is-danger .tabs li.is-active a{opacity:1}.hero.is-danger .tabs.is-boxed a,.hero.is-danger .tabs.is-toggle a{color:var(--blm-dang-inv)}.hero.is-danger .tabs.is-boxed a:hover,.hero.is-danger .tabs.is-toggle a:hover{background-color:hsla(var(--blm-sch-inv-h),var(--blm-sch-inv-s),var(--blm-sch-inv-l),.1)}.hero.is-danger .tabs.is-boxed li.is-active a,.hero.is-danger .tabs.is-boxed li.is-active a:hover,.hero.is-danger .tabs.is-toggle li.is-active a,.hero.is-danger .tabs.is-toggle li.is-active a:hover{background-color:var(--blm-dang-inv);border-color:var(--blm-dang-inv);color:var(--blm-dang)}.hero.is-danger.is-bold{background-image:linear-gradient(141deg,hsla(calc(var(--blm-dang-h) - 10),calc(var(--blm-dang-s) + 10%),calc(var(--blm-dang-l) - 10%),var(--blm-dang-a)) 0,var(--blm-dang) 71%,hsla(calc(var(--blm-dang-h) + 10),calc(var(--blm-dang-s) + 5%),calc(var(--blm-dang-l) + 5%),var(--blm-dang-a)) 100%)}.hero.is-small .hero-body{padding:var(--blm-hero-body-p-small)}.hero.is-fullheight .hero-body,.hero.is-fullheight-with-navbar .hero-body,.hero.is-halfheight .hero-body{align-items:center;display:flex}.hero.is-fullheight .hero-body>.container,.hero.is-fullheight-with-navbar .hero-body>.container,.hero.is-halfheight .hero-body>.container{flex-grow:1;flex-shrink:1}.hero.is-halfheight{min-height:50vh}.hero.is-fullheight{min-height:100vh}.hero-video{overflow:hidden}.hero-video video{left:50%;min-height:100%;min-width:100%;position:absolute;top:50%;transform:translate3d(-50%,-50%,0)}.hero-video.is-transparent{opacity:.3}.hero-buttons{margin-top:1.5rem}@media screen and (max-width:768px){.hero.is-black.is-bold .navbar-menu{background-image:linear-gradient(141deg,hsla(calc(var(--blm-black-h) - 10),calc(var(--blm-black-s) + 10%),calc(var(--blm-black-l) - 10%),var(--blm-black-a)) 0,var(--blm-black) 71%,hsla(calc(var(--blm-black-h) + 10),calc(var(--blm-black-s) + 5%),calc(var(--blm-black-l) + 5%),var(--blm-black-a)) 100%)}.hero.is-light.is-bold .navbar-menu{background-image:linear-gradient(141deg,hsla(calc(var(--blm-light-h) - 10),calc(var(--blm-light-s) + 10%),calc(var(--blm-light-l) - 10%),var(--blm-light-a)) 0,var(--blm-light) 71%,hsla(calc(var(--blm-light-h) + 10),calc(var(--blm-light-s) + 5%),calc(var(--blm-light-l) + 5%),var(--blm-light-a)) 100%)}.hero.is-dark.is-bold .navbar-menu{background-image:linear-gradient(141deg,hsla(calc(var(--blm-dark-h) - 10),calc(var(--blm-dark-s) + 10%),calc(var(--blm-dark-l) - 10%),var(--blm-dark-a)) 0,var(--blm-dark) 71%,hsla(calc(var(--blm-dark-h) + 10),calc(var(--blm-dark-s) + 5%),calc(var(--blm-dark-l) + 5%),var(--blm-dark-a)) 100%)}.hero.is-primary.is-bold .navbar-menu{background-image:linear-gradient(141deg,hsla(calc(var(--blm-prim-h) - 10),calc(var(--blm-prim-s) + 10%),calc(var(--blm-prim-l) - 10%),var(--blm-prim-a)) 0,var(--blm-prim) 71%,hsla(calc(var(--blm-prim-h) + 10),calc(var(--blm-prim-s) + 5%),calc(var(--blm-prim-l) + 5%),var(--blm-prim-a)) 100%)}.hero.is-link.is-bold .navbar-menu{background-image:linear-gradient(141deg,hsla(calc(var(--blm-link-h) - 10),calc(var(--blm-link-s) + 10%),calc(var(--blm-link-l) - 10%),var(--blm-link-a)) 0,var(--blm-link) 71%,hsla(calc(var(--blm-link-h) + 10),calc(var(--blm-link-s) + 5%),calc(var(--blm-link-l) + 5%),var(--blm-link-a)) 100%)}.hero.is-info.is-bold .navbar-menu{background-image:linear-gradient(141deg,hsla(calc(var(--blm-info-h) - 10),calc(var(--blm-info-s) + 10%),calc(var(--blm-info-l) - 10%),var(--blm-info-a)) 0,var(--blm-info) 71%,hsla(calc(var(--blm-info-h) + 10),calc(var(--blm-info-s) + 5%),calc(var(--blm-info-l) + 5%),var(--blm-info-a)) 100%)}.hero.is-success.is-bold .navbar-menu{background-image:linear-gradient(141deg,hsla(calc(var(--blm-sucs-h) - 10),calc(var(--blm-sucs-s) + 10%),calc(var(--blm-sucs-l) - 10%),var(--blm-sucs-a)) 0,var(--blm-sucs) 71%,hsla(calc(var(--blm-sucs-h) + 10),calc(var(--blm-sucs-s) + 5%),calc(var(--blm-sucs-l) + 5%),var(--blm-sucs-a)) 100%)}.hero.is-warning.is-bold .navbar-menu{background-image:linear-gradient(141deg,hsla(calc(var(--blm-warn-h) - 10),calc(var(--blm-warn-s) + 10%),calc(var(--blm-warn-l) - 10%),var(--blm-warn-a)) 0,var(--blm-warn) 71%,hsla(calc(var(--blm-warn-h) + 10),calc(var(--blm-warn-s) + 5%),calc(var(--blm-warn-l) + 5%),var(--blm-warn-a)) 100%)}.hero.is-danger.is-bold .navbar-menu{background-image:linear-gradient(141deg,hsla(calc(var(--blm-dang-h) - 10),calc(var(--blm-dang-s) + 10%),calc(var(--blm-dang-l) - 10%),var(--blm-dang-a)) 0,var(--blm-dang) 71%,hsla(calc(var(--blm-dang-h) + 10),calc(var(--blm-dang-s) + 5%),calc(var(--blm-dang-l) + 5%),var(--blm-dang-a)) 100%)}.hero-video{display:none}.hero-buttons .button{display:flex}.hero-buttons .button:not(:last-child){margin-bottom:.75rem}}@media screen and (min-width:769px),print{.hero.is-medium .hero-body{padding:var(--blm-hero-body-p-medium)}.hero.is-large .hero-body{padding:var(--blm-hero-body-p-lg)}.hero-buttons{display:flex;justify-content:center}.hero-buttons .button:not(:last-child){margin-right:1.5rem}}.hero-foot,.hero-head{flex-grow:0;flex-shrink:0}.hero-body{flex-grow:1;flex-shrink:0;padding:var(--blm-hero-body-p)}.section{padding:var(--blm-sct-p)}.footer{background-color:var(--blm-ft-bg-clr);padding:var(--blm-ft-p);color:var(--blm-ft-clr)}:root,[data-theme]{--blm-turquoise:hsla(var(--blm-turquoise-h), var(--blm-turquoise-s), var(--blm-turquoise-l), var(--blm-turquoise-a));--blm-turquoise-h:171;--blm-turquoise-s:100%;--blm-turquoise-l:41%;--blm-turquoise-a:1;--blm-cyan:hsla(var(--blm-cyan-h), var(--blm-cyan-s), var(--blm-cyan-l), var(--blm-cyan-a));--blm-cyan-h:204;--blm-cyan-s:71%;--blm-cyan-l:53%;--blm-cyan-a:1;--blm-green:hsla(var(--blm-green-h), var(--blm-green-s), var(--blm-green-l), var(--blm-green-a));--blm-green-h:141;--blm-green-s:53%;--blm-green-l:53%;--blm-green-a:1;--blm-yellow:hsla(var(--blm-yellow-h), var(--blm-yellow-s), var(--blm-yellow-l), var(--blm-yellow-a));--blm-yellow-h:48;--blm-yellow-s:100%;--blm-yellow-l:67%;--blm-yellow-a:1;--blm-red:hsla(var(--blm-red-h), var(--blm-red-s), var(--blm-red-l), var(--blm-red-a));--blm-red-h:348;--blm-red-s:86%;--blm-red-l:61%;--blm-red-a:1;--blm-white-ter:hsla(var(--blm-white-ter-h), var(--blm-white-ter-s), var(--blm-white-ter-l), var(--blm-white-ter-a));--blm-white-ter-h:0;--blm-white-ter-s:0%;--blm-white-ter-l:96%;--blm-white-ter-a:1;--blm-grey-darker:hsla(var(--blm-grey-darker-h), var(--blm-grey-darker-s), var(--blm-grey-darker-l), var(--blm-grey-darker-a));--blm-grey-darker-h:0;--blm-grey-darker-s:0%;--blm-grey-darker-l:21%;--blm-grey-darker-a:1;--blm-orange:hsla(var(--blm-orange-h), var(--blm-orange-s), var(--blm-orange-l), var(--blm-orange-a));--blm-orange-h:14;--blm-orange-s:100%;--blm-orange-l:53%;--blm-orange-a:1;--blm-blue:hsla(var(--blm-blue-h), var(--blm-blue-s), var(--blm-blue-l), var(--blm-blue-a));--blm-blue-h:217;--blm-blue-s:71%;--blm-blue-l:53%;--blm-blue-a:1;--blm-purple:hsla(var(--blm-purple-h), var(--blm-purple-s), var(--blm-purple-l), var(--blm-purple-a));--blm-purple-h:271;--blm-purple-s:100%;--blm-purple-l:71%;--blm-purple-a:1;--blm-prim:hsla(var(--blm-prim-h), var(--blm-prim-s), var(--blm-prim-l), var(--blm-prim-a));--blm-prim-h:var(--blm-turquoise-h);--blm-prim-s:var(--blm-turquoise-s);--blm-prim-l:var(--blm-turquoise-l);--blm-prim-a:var(--blm-turquoise-a);--blm-info:hsla(var(--blm-info-h), var(--blm-info-s), var(--blm-info-l), var(--blm-info-a));--blm-info-h:var(--blm-cyan-h);--blm-info-s:var(--blm-cyan-s);--blm-info-l:var(--blm-cyan-l);--blm-info-a:var(--blm-cyan-a);--blm-sucs:hsla(var(--blm-sucs-h), var(--blm-sucs-s), var(--blm-sucs-l), var(--blm-sucs-a));--blm-sucs-h:var(--blm-green-h);--blm-sucs-s:var(--blm-green-s);--blm-sucs-l:var(--blm-green-l);--blm-sucs-a:var(--blm-green-a);--blm-warn:hsla(var(--blm-warn-h), var(--blm-warn-s), var(--blm-warn-l), var(--blm-warn-a));--blm-warn-h:var(--blm-yellow-h);--blm-warn-s:var(--blm-yellow-s);--blm-warn-l:var(--blm-yellow-l);--blm-warn-a:var(--blm-yellow-a);--blm-dang:hsla(var(--blm-dang-h), var(--blm-dang-s), var(--blm-dang-l), var(--blm-dang-a));--blm-dang-h:var(--blm-red-h);--blm-dang-s:var(--blm-red-s);--blm-dang-l:var(--blm-red-l);--blm-dang-a:var(--blm-red-a);--blm-light:hsla(var(--blm-light-h), var(--blm-light-s), var(--blm-light-l), var(--blm-light-a));--blm-light-h:var(--blm-white-ter-h);--blm-light-s:var(--blm-white-ter-s);--blm-light-l:var(--blm-white-ter-l);--blm-light-a:var(--blm-white-ter-a);--blm-dark:hsla(var(--blm-dark-h), var(--blm-dark-s), var(--blm-dark-l), var(--blm-dark-a));--blm-dark-h:var(--blm-grey-darker-h);--blm-dark-s:var(--blm-grey-darker-s);--blm-dark-l:var(--blm-grey-darker-l);--blm-dark-a:var(--blm-grey-darker-a);--blm-black:hsla(var(--blm-black-h), var(--blm-black-s), var(--blm-black-l), var(--blm-black-a));--blm-black-h:0;--blm-black-s:0%;--blm-black-l:4%;--blm-black-a:1;--blm-white:hsla(var(--blm-white-h), var(--blm-white-s), var(--blm-white-l), var(--blm-white-a));--blm-white-h:0;--blm-white-s:0%;--blm-white-l:100%;--blm-white-a:1;--blm-white-bis:hsla(var(--blm-white-bis-h), var(--blm-white-bis-s), var(--blm-white-bis-l), var(--blm-white-bis-a));--blm-white-bis-h:0;--blm-white-bis-s:0%;--blm-white-bis-l:98%;--blm-white-bis-a:1;--blm-black-bis:hsla(var(--blm-black-bis-h), var(--blm-black-bis-s), var(--blm-black-bis-l), var(--blm-black-bis-a));--blm-black-bis-h:0;--blm-black-bis-s:0%;--blm-black-bis-l:7%;--blm-black-bis-a:1;--blm-black-ter:hsla(var(--blm-black-ter-h), var(--blm-black-ter-s), var(--blm-black-ter-l), var(--blm-black-ter-a));--blm-black-ter-h:0;--blm-black-ter-s:0%;--blm-black-ter-l:14%;--blm-black-ter-a:1;--blm-grey-lighter:hsla(var(--blm-grey-lighter-h), var(--blm-grey-lighter-s), var(--blm-grey-lighter-l), var(--blm-grey-lighter-a));--blm-grey-lighter-h:0;--blm-grey-lighter-s:0%;--blm-grey-lighter-l:86%;--blm-grey-lighter-a:1;--blm-grey-light:hsla(var(--blm-grey-light-h), var(--blm-grey-light-s), var(--blm-grey-light-l), var(--blm-grey-light-a));--blm-grey-light-h:0;--blm-grey-light-s:0%;--blm-grey-light-l:71%;--blm-grey-light-a:1;--blm-grey-lightest:hsla(var(--blm-grey-lightest-h), var(--blm-grey-lightest-s), var(--blm-grey-lightest-l), var(--blm-grey-lightest-a));--blm-grey-lightest-h:0;--blm-grey-lightest-s:0%;--blm-grey-lightest-l:93%;--blm-grey-lightest-a:1;--blm-grey-dark:hsla(var(--blm-grey-dark-h), var(--blm-grey-dark-s), var(--blm-grey-dark-l), var(--blm-grey-dark-a));--blm-grey-dark-h:0;--blm-grey-dark-s:0%;--blm-grey-dark-l:29%;--blm-grey-dark-a:1;--blm-txt:hsla(var(--blm-txt-h), var(--blm-txt-s), var(--blm-txt-l), var(--blm-txt-a));--blm-txt-h:var(--blm-grey-dark-h);--blm-txt-s:var(--blm-grey-dark-s);--blm-txt-l:var(--blm-grey-dark-l);--blm-txt-a:var(--blm-grey-dark-a);--blm-grey:hsla(var(--blm-grey-h), var(--blm-grey-s), var(--blm-grey-l), var(--blm-grey-a));--blm-grey-h:0;--blm-grey-s:0%;--blm-grey-l:48%;--blm-grey-a:1;--blm-bg:hsla(var(--blm-bg-h), var(--blm-bg-s), var(--blm-bg-l), var(--blm-bg-a));--blm-bg-h:var(--blm-white-ter-h);--blm-bg-s:var(--blm-white-ter-s);--blm-bg-l:var(--blm-white-ter-l);--blm-bg-a:var(--blm-white-ter-a);--blm-link:hsla(var(--blm-link-h), var(--blm-link-s), var(--blm-link-l), var(--blm-link-a));--blm-link-h:var(--blm-blue-h);--blm-link-s:var(--blm-blue-s);--blm-link-l:var(--blm-blue-l);--blm-link-a:var(--blm-blue-a);--blm-family-sans-serif:BlinkMacSystemFont,-apple-system,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Helvetica,Arial,sans-serif;--blm-family-monospace:monospace;--blm-s-7:0.75rem;--blm-s-6:1rem;--blm-s-5:1.25rem;--blm-s-4:1.5rem;--blm-s-1:3rem;--blm-s-2:2.5rem;--blm-s-3:2rem;--blm-radius:4px;--blm-radius-small:2px;--blm-ctrl-bd-width:1px;--blm-ctrl-radius:var(--blm-radius);--blm-s-normal:var(--blm-s-6);--blm-ctrl-height:2.5em;--blm-ctrl-line-height:1.5;--blm-ctrl-p-vertical:calc(0.5em - var(--blm-ctrl-bd-width));--blm-ctrl-p-horizontal:calc(0.75em - var(--blm-ctrl-bd-width));--blm-sch-inv:hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), var(--blm-sch-inv-a));--blm-sch-inv-h:var(--blm-black-h);--blm-sch-inv-s:var(--blm-black-s);--blm-sch-inv-l:var(--blm-black-l);--blm-sch-inv-a:var(--blm-black-a);--blm-radius-rounded:290486px;--blm-sch-main:hsla(var(--blm-sch-main-h), var(--blm-sch-main-s), var(--blm-sch-main-l), var(--blm-sch-main-a));--blm-sch-main-h:var(--blm-white-h);--blm-sch-main-s:var(--blm-white-s);--blm-sch-main-l:var(--blm-white-l);--blm-sch-main-a:var(--blm-white-a);--blm-family-prim:var(--blm-family-sans-serif);--blm-weight-normal:400;--blm-family-code:var(--blm-family-monospace);--blm-txt-strong:hsla(var(--blm-txt-strong-h), var(--blm-txt-strong-s), var(--blm-txt-strong-l), var(--blm-txt-strong-a));--blm-txt-strong-h:var(--blm-grey-darker-h);--blm-txt-strong-s:var(--blm-grey-darker-s);--blm-txt-strong-l:var(--blm-grey-darker-l);--blm-txt-strong-a:var(--blm-grey-darker-a);--blm-weight-bold:700;--blm-radius-lg:6px;--blm-box-bg-clr:hsla(var(--blm-box-bg-clr-h), var(--blm-box-bg-clr-s), var(--blm-box-bg-clr-l), var(--blm-box-bg-clr-a));--blm-box-bg-clr-h:var(--blm-sch-main-h);--blm-box-bg-clr-s:var(--blm-sch-main-s);--blm-box-bg-clr-l:var(--blm-sch-main-l);--blm-box-bg-clr-a:var(--blm-sch-main-a);--blm-box-radius:var(--blm-radius-lg);--blm-box-shadow:0 0.5em 1em -0.125em hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.1),0 0px 0 1px hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.02);--blm-box-clr:hsla(var(--blm-box-clr-h), var(--blm-box-clr-s), var(--blm-box-clr-l), var(--blm-box-clr-a));--blm-box-clr-h:var(--blm-txt-h);--blm-box-clr-s:var(--blm-txt-s);--blm-box-clr-l:var(--blm-txt-l);--blm-box-clr-a:var(--blm-txt-a);--blm-box-p:1.25rem;--blm-box-link-hov-shadow:0 0.5em 1em -0.125em hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.1),0 0 0 1px var(--blm-link);--blm-box-link-act-shadow:inset 0 1px 2px hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.2),0 0 0 1px var(--blm-link);--blm-bd:hsla(var(--blm-bd-h), var(--blm-bd-s), var(--blm-bd-l), var(--blm-bd-a));--blm-bd-h:var(--blm-grey-lighter-h);--blm-bd-s:var(--blm-grey-lighter-s);--blm-bd-l:var(--blm-grey-lighter-l);--blm-bd-a:var(--blm-grey-lighter-a);--blm-bt-bd-width:var(--blm-ctrl-bd-width);--blm-link-hov:hsla(var(--blm-link-hov-h), var(--blm-link-hov-s), var(--blm-link-hov-l), var(--blm-link-hov-a));--blm-link-hov-h:var(--blm-grey-darker-h);--blm-link-hov-s:var(--blm-grey-darker-s);--blm-link-hov-l:var(--blm-grey-darker-l);--blm-link-hov-a:var(--blm-grey-darker-a);--blm-link-hov-bd:hsla(var(--blm-link-hov-bd-h), var(--blm-link-hov-bd-s), var(--blm-link-hov-bd-l), var(--blm-link-hov-bd-a));--blm-link-hov-bd-h:var(--blm-grey-light-h);--blm-link-hov-bd-s:var(--blm-grey-light-s);--blm-link-hov-bd-l:var(--blm-grey-light-l);--blm-link-hov-bd-a:var(--blm-grey-light-a);--blm-link-foc:hsla(var(--blm-link-foc-h), var(--blm-link-foc-s), var(--blm-link-foc-l), var(--blm-link-foc-a));--blm-link-foc-h:var(--blm-grey-darker-h);--blm-link-foc-s:var(--blm-grey-darker-s);--blm-link-foc-l:var(--blm-grey-darker-l);--blm-link-foc-a:var(--blm-grey-darker-a);--blm-link-foc-bd:hsla(var(--blm-link-foc-bd-h), var(--blm-link-foc-bd-s), var(--blm-link-foc-bd-l), var(--blm-link-foc-bd-a));--blm-link-foc-bd-h:var(--blm-blue-h);--blm-link-foc-bd-s:var(--blm-blue-s);--blm-link-foc-bd-l:var(--blm-blue-l);--blm-link-foc-bd-a:var(--blm-blue-a);--blm-link-act:hsla(var(--blm-link-act-h), var(--blm-link-act-s), var(--blm-link-act-l), var(--blm-link-act-a));--blm-link-act-h:var(--blm-grey-darker-h);--blm-link-act-s:var(--blm-grey-darker-s);--blm-link-act-l:var(--blm-grey-darker-l);--blm-link-act-a:var(--blm-grey-darker-a);--blm-link-act-bd:hsla(var(--blm-link-act-bd-h), var(--blm-link-act-bd-s), var(--blm-link-act-bd-l), var(--blm-link-act-bd-a));--blm-link-act-bd-h:var(--blm-grey-dark-h);--blm-link-act-bd-s:var(--blm-grey-dark-s);--blm-link-act-bd-l:var(--blm-grey-dark-l);--blm-link-act-bd-a:var(--blm-grey-dark-a);--blm-txt-light:hsla(var(--blm-txt-light-h), var(--blm-txt-light-s), var(--blm-txt-light-l), var(--blm-txt-light-a));--blm-txt-light-h:var(--blm-grey-h);--blm-txt-light-s:var(--blm-grey-s);--blm-txt-light-l:var(--blm-grey-l);--blm-txt-light-a:var(--blm-grey-a);--blm-sch-main-ter:hsla(var(--blm-sch-main-ter-h), var(--blm-sch-main-ter-s), var(--blm-sch-main-ter-l), var(--blm-sch-main-ter-a));--blm-sch-main-ter-h:var(--blm-white-ter-h);--blm-sch-main-ter-s:var(--blm-white-ter-s);--blm-sch-main-ter-l:var(--blm-white-ter-l);--blm-sch-main-ter-a:var(--blm-white-ter-a);--blm-bt-bg-clr:hsla(var(--blm-bt-bg-clr-h), var(--blm-bt-bg-clr-s), var(--blm-bt-bg-clr-l), var(--blm-bt-bg-clr-a));--blm-bt-bg-clr-h:var(--blm-sch-main-h);--blm-bt-bg-clr-s:var(--blm-sch-main-s);--blm-bt-bg-clr-l:var(--blm-sch-main-l);--blm-bt-bg-clr-a:var(--blm-sch-main-a);--blm-bt-bd-clr:hsla(var(--blm-bt-bd-clr-h), var(--blm-bt-bd-clr-s), var(--blm-bt-bd-clr-l), var(--blm-bt-bd-clr-a));--blm-bt-bd-clr-h:var(--blm-bd-h);--blm-bt-bd-clr-s:var(--blm-bd-s);--blm-bt-bd-clr-l:var(--blm-bd-l);--blm-bt-bd-clr-a:var(--blm-bd-a);--blm-bt-clr:hsla(var(--blm-bt-clr-h), var(--blm-bt-clr-s), var(--blm-bt-clr-l), var(--blm-bt-clr-a));--blm-bt-clr-h:var(--blm-txt-strong-h);--blm-bt-clr-s:var(--blm-txt-strong-s);--blm-bt-clr-l:var(--blm-txt-strong-l);--blm-bt-clr-a:var(--blm-txt-strong-a);--blm-bt-family:inherit;--blm-bt-p-vertical:calc(0.5em - var(--blm-bt-bd-width));--blm-bt-p-horizontal:1em;--blm-bt-hov-bd-clr:hsla(var(--blm-bt-hov-bd-clr-h), var(--blm-bt-hov-bd-clr-s), var(--blm-bt-hov-bd-clr-l), var(--blm-bt-hov-bd-clr-a));--blm-bt-hov-bd-clr-h:var(--blm-link-hov-bd-h);--blm-bt-hov-bd-clr-s:var(--blm-link-hov-bd-s);--blm-bt-hov-bd-clr-l:var(--blm-link-hov-bd-l);--blm-bt-hov-bd-clr-a:var(--blm-link-hov-bd-a);--blm-bt-hov-clr:hsla(var(--blm-bt-hov-clr-h), var(--blm-bt-hov-clr-s), var(--blm-bt-hov-clr-l), var(--blm-bt-hov-clr-a));--blm-bt-hov-clr-h:var(--blm-link-hov-h);--blm-bt-hov-clr-s:var(--blm-link-hov-s);--blm-bt-hov-clr-l:var(--blm-link-hov-l);--blm-bt-hov-clr-a:var(--blm-link-hov-a);--blm-bt-foc-bd-clr:hsla(var(--blm-bt-foc-bd-clr-h), var(--blm-bt-foc-bd-clr-s), var(--blm-bt-foc-bd-clr-l), var(--blm-bt-foc-bd-clr-a));--blm-bt-foc-bd-clr-h:var(--blm-link-foc-bd-h);--blm-bt-foc-bd-clr-s:var(--blm-link-foc-bd-s);--blm-bt-foc-bd-clr-l:var(--blm-link-foc-bd-l);--blm-bt-foc-bd-clr-a:var(--blm-link-foc-bd-a);--blm-bt-foc-clr:hsla(var(--blm-bt-foc-clr-h), var(--blm-bt-foc-clr-s), var(--blm-bt-foc-clr-l), var(--blm-bt-foc-clr-a));--blm-bt-foc-clr-h:var(--blm-link-foc-h);--blm-bt-foc-clr-s:var(--blm-link-foc-s);--blm-bt-foc-clr-l:var(--blm-link-foc-l);--blm-bt-foc-clr-a:var(--blm-link-foc-a);--blm-bt-foc-box-shadow-s:0 0 0 0.125em;--blm-bt-foc-box-shadow-clr:hsla(var(--blm-bt-foc-box-shadow-clr-h), var(--blm-bt-foc-box-shadow-clr-s), var(--blm-bt-foc-box-shadow-clr-l), var(--blm-bt-foc-box-shadow-clr-a));--blm-bt-foc-box-shadow-clr-h:var(--blm-link-h);--blm-bt-foc-box-shadow-clr-s:var(--blm-link-s);--blm-bt-foc-box-shadow-clr-l:var(--blm-link-l);--blm-bt-foc-box-shadow-clr-a:0.25;--blm-bt-act-bd-clr:hsla(var(--blm-bt-act-bd-clr-h), var(--blm-bt-act-bd-clr-s), var(--blm-bt-act-bd-clr-l), var(--blm-bt-act-bd-clr-a));--blm-bt-act-bd-clr-h:var(--blm-link-act-bd-h);--blm-bt-act-bd-clr-s:var(--blm-link-act-bd-s);--blm-bt-act-bd-clr-l:var(--blm-link-act-bd-l);--blm-bt-act-bd-clr-a:var(--blm-link-act-bd-a);--blm-bt-act-clr:hsla(var(--blm-bt-act-clr-h), var(--blm-bt-act-clr-s), var(--blm-bt-act-clr-l), var(--blm-bt-act-clr-a));--blm-bt-act-clr-h:var(--blm-link-act-h);--blm-bt-act-clr-s:var(--blm-link-act-s);--blm-bt-act-clr-l:var(--blm-link-act-l);--blm-bt-act-clr-a:var(--blm-link-act-a);--blm-bt-txt-clr:hsla(var(--blm-bt-txt-clr-h), var(--blm-bt-txt-clr-s), var(--blm-bt-txt-clr-l), var(--blm-bt-txt-clr-a));--blm-bt-txt-clr-h:var(--blm-txt-h);--blm-bt-txt-clr-s:var(--blm-txt-s);--blm-bt-txt-clr-l:var(--blm-txt-l);--blm-bt-txt-clr-a:var(--blm-txt-a);--blm-bt-txt-decoration:underline;--blm-bt-txt-hov-bg-clr:hsla(var(--blm-bt-txt-hov-bg-clr-h), var(--blm-bt-txt-hov-bg-clr-s), var(--blm-bt-txt-hov-bg-clr-l), var(--blm-bt-txt-hov-bg-clr-a));--blm-bt-txt-hov-bg-clr-h:var(--blm-bg-h);--blm-bt-txt-hov-bg-clr-s:var(--blm-bg-s);--blm-bt-txt-hov-bg-clr-l:var(--blm-bg-l);--blm-bt-txt-hov-bg-clr-a:var(--blm-bg-a);--blm-bt-txt-hov-clr:hsla(var(--blm-bt-txt-hov-clr-h), var(--blm-bt-txt-hov-clr-s), var(--blm-bt-txt-hov-clr-l), var(--blm-bt-txt-hov-clr-a));--blm-bt-txt-hov-clr-h:var(--blm-txt-strong-h);--blm-bt-txt-hov-clr-s:var(--blm-txt-strong-s);--blm-bt-txt-hov-clr-l:var(--blm-txt-strong-l);--blm-bt-txt-hov-clr-a:var(--blm-txt-strong-a);--blm-white-inv:hsla(var(--blm-white-inv-h), var(--blm-white-inv-s), var(--blm-white-inv-l), var(--blm-white-inv-a));--blm-white-inv-h:var(--blm-black-h);--blm-white-inv-s:var(--blm-black-s);--blm-white-inv-l:var(--blm-black-l);--blm-white-inv-a:var(--blm-black-a);--blm-black-inv:hsla(var(--blm-black-inv-h), var(--blm-black-inv-s), var(--blm-black-inv-l), var(--blm-black-inv-a));--blm-black-inv-h:var(--blm-white-h);--blm-black-inv-s:var(--blm-white-s);--blm-black-inv-l:var(--blm-white-l);--blm-black-inv-a:var(--blm-white-a);--blm-light-inv:hsla(var(--blm-light-inv-h), var(--blm-light-inv-s), var(--blm-light-inv-l), var(--blm-light-inv-a));--blm-light-inv-h:0;--blm-light-inv-s:0%;--blm-light-inv-l:0%;--blm-light-inv-a:0.7;--blm-dark-inv:hsla(var(--blm-dark-inv-h), var(--blm-dark-inv-s), var(--blm-dark-inv-l), var(--blm-dark-inv-a));--blm-dark-inv-h:0;--blm-dark-inv-s:0%;--blm-dark-inv-l:100%;--blm-dark-inv-a:1;--blm-prim-inv:hsla(var(--blm-prim-inv-h), var(--blm-prim-inv-s), var(--blm-prim-inv-l), var(--blm-prim-inv-a));--blm-prim-inv-h:0;--blm-prim-inv-s:0%;--blm-prim-inv-l:100%;--blm-prim-inv-a:1;--blm-prim-light:hsla(var(--blm-prim-light-h), var(--blm-prim-light-s), var(--blm-prim-light-l), var(--blm-prim-light-a));--blm-prim-light-h:171;--blm-prim-light-s:100%;--blm-prim-light-l:96%;--blm-prim-light-a:1;--blm-prim-dark:hsla(var(--blm-prim-dark-h), var(--blm-prim-dark-s), var(--blm-prim-dark-l), var(--blm-prim-dark-a));--blm-prim-dark-h:171;--blm-prim-dark-s:100%;--blm-prim-dark-l:29%;--blm-prim-dark-a:1;--blm-link-inv:hsla(var(--blm-link-inv-h), var(--blm-link-inv-s), var(--blm-link-inv-l), var(--blm-link-inv-a));--blm-link-inv-h:0;--blm-link-inv-s:0%;--blm-link-inv-l:100%;--blm-link-inv-a:1;--blm-link-light:hsla(var(--blm-link-light-h), var(--blm-link-light-s), var(--blm-link-light-l), var(--blm-link-light-a));--blm-link-light-h:217;--blm-link-light-s:71%;--blm-link-light-l:96%;--blm-link-light-a:1;--blm-link-dark:hsla(var(--blm-link-dark-h), var(--blm-link-dark-s), var(--blm-link-dark-l), var(--blm-link-dark-a));--blm-link-dark-h:217;--blm-link-dark-s:71%;--blm-link-dark-l:45%;--blm-link-dark-a:1;--blm-info-inv:hsla(var(--blm-info-inv-h), var(--blm-info-inv-s), var(--blm-info-inv-l), var(--blm-info-inv-a));--blm-info-inv-h:0;--blm-info-inv-s:0%;--blm-info-inv-l:100%;--blm-info-inv-a:1;--blm-info-light:hsla(var(--blm-info-light-h), var(--blm-info-light-s), var(--blm-info-light-l), var(--blm-info-light-a));--blm-info-light-h:204;--blm-info-light-s:71%;--blm-info-light-l:96%;--blm-info-light-a:1;--blm-info-dark:hsla(var(--blm-info-dark-h), var(--blm-info-dark-s), var(--blm-info-dark-l), var(--blm-info-dark-a));--blm-info-dark-h:204;--blm-info-dark-s:71%;--blm-info-dark-l:39%;--blm-info-dark-a:1;--blm-sucs-inv:hsla(var(--blm-sucs-inv-h), var(--blm-sucs-inv-s), var(--blm-sucs-inv-l), var(--blm-sucs-inv-a));--blm-sucs-inv-h:0;--blm-sucs-inv-s:0%;--blm-sucs-inv-l:100%;--blm-sucs-inv-a:1;--blm-sucs-light:hsla(var(--blm-sucs-light-h), var(--blm-sucs-light-s), var(--blm-sucs-light-l), var(--blm-sucs-light-a));--blm-sucs-light-h:141;--blm-sucs-light-s:53%;--blm-sucs-light-l:96%;--blm-sucs-light-a:1;--blm-sucs-dark:hsla(var(--blm-sucs-dark-h), var(--blm-sucs-dark-s), var(--blm-sucs-dark-l), var(--blm-sucs-dark-a));--blm-sucs-dark-h:141;--blm-sucs-dark-s:53%;--blm-sucs-dark-l:31%;--blm-sucs-dark-a:1;--blm-warn-inv:hsla(var(--blm-warn-inv-h), var(--blm-warn-inv-s), var(--blm-warn-inv-l), var(--blm-warn-inv-a));--blm-warn-inv-h:0;--blm-warn-inv-s:0%;--blm-warn-inv-l:0%;--blm-warn-inv-a:0.7;--blm-warn-light:hsla(var(--blm-warn-light-h), var(--blm-warn-light-s), var(--blm-warn-light-l), var(--blm-warn-light-a));--blm-warn-light-h:48;--blm-warn-light-s:100%;--blm-warn-light-l:96%;--blm-warn-light-a:1;--blm-warn-dark:hsla(var(--blm-warn-dark-h), var(--blm-warn-dark-s), var(--blm-warn-dark-l), var(--blm-warn-dark-a));--blm-warn-dark-h:48;--blm-warn-dark-s:100%;--blm-warn-dark-l:29%;--blm-warn-dark-a:1;--blm-dang-inv:hsla(var(--blm-dang-inv-h), var(--blm-dang-inv-s), var(--blm-dang-inv-l), var(--blm-dang-inv-a));--blm-dang-inv-h:0;--blm-dang-inv-s:0%;--blm-dang-inv-l:100%;--blm-dang-inv-a:1;--blm-dang-light:hsla(var(--blm-dang-light-h), var(--blm-dang-light-s), var(--blm-dang-light-l), var(--blm-dang-light-a));--blm-dang-light-h:348;--blm-dang-light-s:86%;--blm-dang-light-l:96%;--blm-dang-light-a:1;--blm-dang-dark:hsla(var(--blm-dang-dark-h), var(--blm-dang-dark-s), var(--blm-dang-dark-l), var(--blm-dang-dark-a));--blm-dang-dark-h:348;--blm-dang-dark-s:86%;--blm-dang-dark-l:43%;--blm-dang-dark-a:1;--blm-s-small:var(--blm-s-7);--blm-s-medium:var(--blm-s-5);--blm-s-lg:var(--blm-s-4);--blm-bt-dsbl-bg-clr:hsla(var(--blm-bt-dsbl-bg-clr-h), var(--blm-bt-dsbl-bg-clr-s), var(--blm-bt-dsbl-bg-clr-l), var(--blm-bt-dsbl-bg-clr-a));--blm-bt-dsbl-bg-clr-h:var(--blm-sch-main-h);--blm-bt-dsbl-bg-clr-s:var(--blm-sch-main-s);--blm-bt-dsbl-bg-clr-l:var(--blm-sch-main-l);--blm-bt-dsbl-bg-clr-a:var(--blm-sch-main-a);--blm-bt-dsbl-bd-clr:hsla(var(--blm-bt-dsbl-bd-clr-h), var(--blm-bt-dsbl-bd-clr-s), var(--blm-bt-dsbl-bd-clr-l), var(--blm-bt-dsbl-bd-clr-a));--blm-bt-dsbl-bd-clr-h:var(--blm-bd-h);--blm-bt-dsbl-bd-clr-s:var(--blm-bd-s);--blm-bt-dsbl-bd-clr-l:var(--blm-bd-l);--blm-bt-dsbl-bd-clr-a:var(--blm-bd-a);--blm-bt-dsbl-shadow:none;--blm-bt-dsbl-opacity:0.5;--blm-bt-static-bg-clr:hsla(var(--blm-bt-static-bg-clr-h), var(--blm-bt-static-bg-clr-s), var(--blm-bt-static-bg-clr-l), var(--blm-bt-static-bg-clr-a));--blm-bt-static-bg-clr-h:var(--blm-sch-main-ter-h);--blm-bt-static-bg-clr-s:var(--blm-sch-main-ter-s);--blm-bt-static-bg-clr-l:var(--blm-sch-main-ter-l);--blm-bt-static-bg-clr-a:var(--blm-sch-main-ter-a);--blm-bt-static-bd-clr:hsla(var(--blm-bt-static-bd-clr-h), var(--blm-bt-static-bd-clr-s), var(--blm-bt-static-bd-clr-l), var(--blm-bt-static-bd-clr-a));--blm-bt-static-bd-clr-h:var(--blm-bd-h);--blm-bt-static-bd-clr-s:var(--blm-bd-s);--blm-bt-static-bd-clr-l:var(--blm-bd-l);--blm-bt-static-bd-clr-a:var(--blm-bd-a);--blm-bt-static-clr:hsla(var(--blm-bt-static-clr-h), var(--blm-bt-static-clr-s), var(--blm-bt-static-clr-l), var(--blm-bt-static-clr-a));--blm-bt-static-clr-h:var(--blm-txt-light-h);--blm-bt-static-clr-s:var(--blm-txt-light-s);--blm-bt-static-clr-l:var(--blm-txt-light-l);--blm-bt-static-clr-a:var(--blm-txt-light-a);--blm-weight-semibold:600;--blm-ct-hdg-clr:hsla(var(--blm-ct-hdg-clr-h), var(--blm-ct-hdg-clr-s), var(--blm-ct-hdg-clr-l), var(--blm-ct-hdg-clr-a));--blm-ct-hdg-clr-h:var(--blm-txt-strong-h);--blm-ct-hdg-clr-s:var(--blm-txt-strong-s);--blm-ct-hdg-clr-l:var(--blm-txt-strong-l);--blm-ct-hdg-clr-a:var(--blm-txt-strong-a);--blm-ct-hdg-weight:var(--blm-weight-semibold);--blm-ct-hdg-line-height:1.125;--blm-ct-blockquote-bg-clr:hsla(var(--blm-ct-blockquote-bg-clr-h), var(--blm-ct-blockquote-bg-clr-s), var(--blm-ct-blockquote-bg-clr-l), var(--blm-ct-blockquote-bg-clr-a));--blm-ct-blockquote-bg-clr-h:var(--blm-bg-h);--blm-ct-blockquote-bg-clr-s:var(--blm-bg-s);--blm-ct-blockquote-bg-clr-l:var(--blm-bg-l);--blm-ct-blockquote-bg-clr-a:var(--blm-bg-a);--blm-ct-blockquote-bd-left:5px solid var(--blm-bd);--blm-ct-blockquote-p:1.25em 1.5em;--blm-ct-pre-p:1.25em 1.5em;--blm-ct-table-cell-bd:1px solid var(--blm-bd);--blm-ct-table-cell-bd-width:0 0 1px;--blm-ct-table-cell-p:0.5em 0.75em;--blm-ct-table-cell-hdg-clr:hsla(var(--blm-ct-table-cell-hdg-clr-h), var(--blm-ct-table-cell-hdg-clr-s), var(--blm-ct-table-cell-hdg-clr-l), var(--blm-ct-table-cell-hdg-clr-a));--blm-ct-table-cell-hdg-clr-h:var(--blm-txt-strong-h);--blm-ct-table-cell-hdg-clr-s:var(--blm-txt-strong-s);--blm-ct-table-cell-hdg-clr-l:var(--blm-txt-strong-l);--blm-ct-table-cell-hdg-clr-a:var(--blm-txt-strong-a);--blm-ct-table-head-cell-bd-width:0 0 2px;--blm-ct-table-head-cell-clr:hsla(var(--blm-ct-table-head-cell-clr-h), var(--blm-ct-table-head-cell-clr-s), var(--blm-ct-table-head-cell-clr-l), var(--blm-ct-table-head-cell-clr-a));--blm-ct-table-head-cell-clr-h:var(--blm-txt-strong-h);--blm-ct-table-head-cell-clr-s:var(--blm-txt-strong-s);--blm-ct-table-head-cell-clr-l:var(--blm-txt-strong-l);--blm-ct-table-head-cell-clr-a:var(--blm-txt-strong-a);--blm-ct-table-foot-cell-bd-width:2px 0 0;--blm-ct-table-foot-cell-clr:hsla(var(--blm-ct-table-foot-cell-clr-h), var(--blm-ct-table-foot-cell-clr-s), var(--blm-ct-table-foot-cell-clr-l), var(--blm-ct-table-foot-cell-clr-a));--blm-ct-table-foot-cell-clr-h:var(--blm-txt-strong-h);--blm-ct-table-foot-cell-clr-s:var(--blm-txt-strong-s);--blm-ct-table-foot-cell-clr-l:var(--blm-txt-strong-l);--blm-ct-table-foot-cell-clr-a:var(--blm-txt-strong-a);--blm-icon-dim:1.5rem;--blm-icon-dim-small:1rem;--blm-icon-dim-medium:2rem;--blm-icon-dim-lg:3rem;--blm-noti-bg-clr:hsla(var(--blm-noti-bg-clr-h), var(--blm-noti-bg-clr-s), var(--blm-noti-bg-clr-l), var(--blm-noti-bg-clr-a));--blm-noti-bg-clr-h:var(--blm-bg-h);--blm-noti-bg-clr-s:var(--blm-bg-s);--blm-noti-bg-clr-l:var(--blm-bg-l);--blm-noti-bg-clr-a:var(--blm-bg-a);--blm-noti-radius:var(--blm-radius);--blm-noti-p-vertical:1.25rem;--blm-noti-p-right:2.5rem;--blm-noti-p-left:1.5rem;--blm-noti-code-bg-clr:hsla(var(--blm-noti-code-bg-clr-h), var(--blm-noti-code-bg-clr-s), var(--blm-noti-code-bg-clr-l), var(--blm-noti-code-bg-clr-a));--blm-noti-code-bg-clr-h:var(--blm-sch-main-h);--blm-noti-code-bg-clr-s:var(--blm-sch-main-s);--blm-noti-code-bg-clr-l:var(--blm-sch-main-l);--blm-noti-code-bg-clr-a:var(--blm-sch-main-a);--blm-bd-light:hsla(var(--blm-bd-light-h), var(--blm-bd-light-s), var(--blm-bd-light-l), var(--blm-bd-light-a));--blm-bd-light-h:var(--blm-grey-lightest-h);--blm-bd-light-s:var(--blm-grey-lightest-s);--blm-bd-light-l:var(--blm-grey-lightest-l);--blm-bd-light-a:var(--blm-grey-lightest-a);--blm-prg-bd-radius:var(--blm-radius-rounded);--blm-prg-bar-bg-clr:hsla(var(--blm-prg-bar-bg-clr-h), var(--blm-prg-bar-bg-clr-s), var(--blm-prg-bar-bg-clr-l), var(--blm-prg-bar-bg-clr-a));--blm-prg-bar-bg-clr-h:var(--blm-bd-light-h);--blm-prg-bar-bg-clr-s:var(--blm-bd-light-s);--blm-prg-bar-bg-clr-l:var(--blm-bd-light-l);--blm-prg-bar-bg-clr-a:var(--blm-bd-light-a);--blm-prg-value-bg-clr:hsla(var(--blm-prg-value-bg-clr-h), var(--blm-prg-value-bg-clr-s), var(--blm-prg-value-bg-clr-l), var(--blm-prg-value-bg-clr-a));--blm-prg-value-bg-clr-h:var(--blm-txt-h);--blm-prg-value-bg-clr-s:var(--blm-txt-s);--blm-prg-value-bg-clr-l:var(--blm-txt-l);--blm-prg-value-bg-clr-a:var(--blm-txt-a);--blm-prg-indeterminate-duration:1.5s;--blm-sch-main-bis:hsla(var(--blm-sch-main-bis-h), var(--blm-sch-main-bis-s), var(--blm-sch-main-bis-l), var(--blm-sch-main-bis-a));--blm-sch-main-bis-h:var(--blm-white-bis-h);--blm-sch-main-bis-s:var(--blm-white-bis-s);--blm-sch-main-bis-l:var(--blm-white-bis-l);--blm-sch-main-bis-a:var(--blm-white-bis-a);--blm-table-bg-clr:hsla(var(--blm-table-bg-clr-h), var(--blm-table-bg-clr-s), var(--blm-table-bg-clr-l), var(--blm-table-bg-clr-a));--blm-table-bg-clr-h:var(--blm-sch-main-h);--blm-table-bg-clr-s:var(--blm-sch-main-s);--blm-table-bg-clr-l:var(--blm-sch-main-l);--blm-table-bg-clr-a:var(--blm-sch-main-a);--blm-table-clr:hsla(var(--blm-table-clr-h), var(--blm-table-clr-s), var(--blm-table-clr-l), var(--blm-table-clr-a));--blm-table-clr-h:var(--blm-txt-strong-h);--blm-table-clr-s:var(--blm-txt-strong-s);--blm-table-clr-l:var(--blm-txt-strong-l);--blm-table-clr-a:var(--blm-txt-strong-a);--blm-table-cell-bd:1px solid var(--blm-bd);--blm-table-cell-bd-width:0 0 1px;--blm-table-cell-p:0.5em 0.75em;--blm-table-row-act-bg-clr:hsla(var(--blm-table-row-act-bg-clr-h), var(--blm-table-row-act-bg-clr-s), var(--blm-table-row-act-bg-clr-l), var(--blm-table-row-act-bg-clr-a));--blm-table-row-act-bg-clr-h:var(--blm-prim-h);--blm-table-row-act-bg-clr-s:var(--blm-prim-s);--blm-table-row-act-bg-clr-l:var(--blm-prim-l);--blm-table-row-act-bg-clr-a:var(--blm-prim-a);--blm-table-row-act-clr:hsla(var(--blm-table-row-act-clr-h), var(--blm-table-row-act-clr-s), var(--blm-table-row-act-clr-l), var(--blm-table-row-act-clr-a));--blm-table-row-act-clr-h:var(--blm-prim-inv-h);--blm-table-row-act-clr-s:var(--blm-prim-inv-s);--blm-table-row-act-clr-l:var(--blm-prim-inv-l);--blm-table-row-act-clr-a:var(--blm-prim-inv-a);--blm-table-cell-hdg-clr:hsla(var(--blm-table-cell-hdg-clr-h), var(--blm-table-cell-hdg-clr-s), var(--blm-table-cell-hdg-clr-l), var(--blm-table-cell-hdg-clr-a));--blm-table-cell-hdg-clr-h:var(--blm-txt-strong-h);--blm-table-cell-hdg-clr-s:var(--blm-txt-strong-s);--blm-table-cell-hdg-clr-l:var(--blm-txt-strong-l);--blm-table-cell-hdg-clr-a:var(--blm-txt-strong-a);--blm-table-head-bg-clr:hsla(var(--blm-table-head-bg-clr-h), var(--blm-table-head-bg-clr-s), var(--blm-table-head-bg-clr-l), var(--blm-table-head-bg-clr-a));--blm-table-head-bg-clr-h:0;--blm-table-head-bg-clr-s:0%;--blm-table-head-bg-clr-l:0%;--blm-table-head-bg-clr-a:0;--blm-table-head-cell-bd-width:0 0 2px;--blm-table-head-cell-clr:hsla(var(--blm-table-head-cell-clr-h), var(--blm-table-head-cell-clr-s), var(--blm-table-head-cell-clr-l), var(--blm-table-head-cell-clr-a));--blm-table-head-cell-clr-h:var(--blm-txt-strong-h);--blm-table-head-cell-clr-s:var(--blm-txt-strong-s);--blm-table-head-cell-clr-l:var(--blm-txt-strong-l);--blm-table-head-cell-clr-a:var(--blm-txt-strong-a);--blm-table-foot-bg-clr:hsla(var(--blm-table-foot-bg-clr-h), var(--blm-table-foot-bg-clr-s), var(--blm-table-foot-bg-clr-l), var(--blm-table-foot-bg-clr-a));--blm-table-foot-bg-clr-h:0;--blm-table-foot-bg-clr-s:0%;--blm-table-foot-bg-clr-l:0%;--blm-table-foot-bg-clr-a:0;--blm-table-foot-cell-bd-width:2px 0 0;--blm-table-foot-cell-clr:hsla(var(--blm-table-foot-cell-clr-h), var(--blm-table-foot-cell-clr-s), var(--blm-table-foot-cell-clr-l), var(--blm-table-foot-cell-clr-a));--blm-table-foot-cell-clr-h:var(--blm-txt-strong-h);--blm-table-foot-cell-clr-s:var(--blm-txt-strong-s);--blm-table-foot-cell-clr-l:var(--blm-txt-strong-l);--blm-table-foot-cell-clr-a:var(--blm-txt-strong-a);--blm-table-body-bg-clr:hsla(var(--blm-table-body-bg-clr-h), var(--blm-table-body-bg-clr-s), var(--blm-table-body-bg-clr-l), var(--blm-table-body-bg-clr-a));--blm-table-body-bg-clr-h:0;--blm-table-body-bg-clr-s:0%;--blm-table-body-bg-clr-l:0%;--blm-table-body-bg-clr-a:0;--blm-table-row-hov-bg-clr:hsla(var(--blm-table-row-hov-bg-clr-h), var(--blm-table-row-hov-bg-clr-s), var(--blm-table-row-hov-bg-clr-l), var(--blm-table-row-hov-bg-clr-a));--blm-table-row-hov-bg-clr-h:var(--blm-sch-main-bis-h);--blm-table-row-hov-bg-clr-s:var(--blm-sch-main-bis-s);--blm-table-row-hov-bg-clr-l:var(--blm-sch-main-bis-l);--blm-table-row-hov-bg-clr-a:var(--blm-sch-main-bis-a);--blm-table-striped-row-even-hov-bg-clr:hsla(var(--blm-table-striped-row-even-hov-bg-clr-h), var(--blm-table-striped-row-even-hov-bg-clr-s), var(--blm-table-striped-row-even-hov-bg-clr-l), var(--blm-table-striped-row-even-hov-bg-clr-a));--blm-table-striped-row-even-hov-bg-clr-h:var(--blm-sch-main-ter-h);--blm-table-striped-row-even-hov-bg-clr-s:var(--blm-sch-main-ter-s);--blm-table-striped-row-even-hov-bg-clr-l:var(--blm-sch-main-ter-l);--blm-table-striped-row-even-hov-bg-clr-a:var(--blm-sch-main-ter-a);--blm-table-striped-row-even-bg-clr:hsla(var(--blm-table-striped-row-even-bg-clr-h), var(--blm-table-striped-row-even-bg-clr-s), var(--blm-table-striped-row-even-bg-clr-l), var(--blm-table-striped-row-even-bg-clr-a));--blm-table-striped-row-even-bg-clr-h:var(--blm-sch-main-bis-h);--blm-table-striped-row-even-bg-clr-s:var(--blm-sch-main-bis-s);--blm-table-striped-row-even-bg-clr-l:var(--blm-sch-main-bis-l);--blm-table-striped-row-even-bg-clr-a:var(--blm-sch-main-bis-a);--blm-tag-bg-clr:hsla(var(--blm-tag-bg-clr-h), var(--blm-tag-bg-clr-s), var(--blm-tag-bg-clr-l), var(--blm-tag-bg-clr-a));--blm-tag-bg-clr-h:var(--blm-bg-h);--blm-tag-bg-clr-s:var(--blm-bg-s);--blm-tag-bg-clr-l:var(--blm-bg-l);--blm-tag-bg-clr-a:var(--blm-bg-a);--blm-tag-radius:var(--blm-radius);--blm-tag-clr:hsla(var(--blm-tag-clr-h), var(--blm-tag-clr-s), var(--blm-tag-clr-l), var(--blm-tag-clr-a));--blm-tag-clr-h:var(--blm-txt-h);--blm-tag-clr-s:var(--blm-txt-s);--blm-tag-clr-l:var(--blm-txt-l);--blm-tag-clr-a:var(--blm-txt-a);--blm-tag-delete-m:1px;--blm-title-sub-s:0.75em;--blm-title-sup-s:0.75em;--blm-title-clr:hsla(var(--blm-title-clr-h), var(--blm-title-clr-s), var(--blm-title-clr-l), var(--blm-title-clr-a));--blm-title-clr-h:var(--blm-txt-strong-h);--blm-title-clr-s:var(--blm-txt-strong-s);--blm-title-clr-l:var(--blm-txt-strong-l);--blm-title-clr-a:var(--blm-txt-strong-a);--blm-title-family:inherit;--blm-title-s:var(--blm-s-3);--blm-title-weight:var(--blm-weight-semibold);--blm-title-line-height:1.125;--blm-title-strong-clr:inherit;--blm-title-strong-weight:inherit;--blm-subtitle-negative-m:-1.25rem;--blm-subtitle-clr:hsla(var(--blm-subtitle-clr-h), var(--blm-subtitle-clr-s), var(--blm-subtitle-clr-l), var(--blm-subtitle-clr-a));--blm-subtitle-clr-h:var(--blm-txt-h);--blm-subtitle-clr-s:var(--blm-txt-s);--blm-subtitle-clr-l:var(--blm-txt-l);--blm-subtitle-clr-a:var(--blm-txt-a);--blm-subtitle-family:inherit;--blm-subtitle-s:var(--blm-s-5);--blm-subtitle-weight:var(--blm-weight-normal);--blm-subtitle-line-height:1.25;--blm-subtitle-strong-clr:hsla(var(--blm-subtitle-strong-clr-h), var(--blm-subtitle-strong-clr-s), var(--blm-subtitle-strong-clr-l), var(--blm-subtitle-strong-clr-a));--blm-subtitle-strong-clr-h:var(--blm-txt-strong-h);--blm-subtitle-strong-clr-s:var(--blm-txt-strong-s);--blm-subtitle-strong-clr-l:var(--blm-txt-strong-l);--blm-subtitle-strong-clr-a:var(--blm-txt-strong-a);--blm-subtitle-strong-weight:var(--blm-weight-semibold);--blm-input-clr:hsla(var(--blm-input-clr-h), var(--blm-input-clr-s), var(--blm-input-clr-l), var(--blm-input-clr-a));--blm-input-clr-h:var(--blm-txt-strong-h);--blm-input-clr-s:var(--blm-txt-strong-s);--blm-input-clr-l:var(--blm-txt-strong-l);--blm-bd-hov:hsla(var(--blm-bd-hov-h), var(--blm-bd-hov-s), var(--blm-bd-hov-l), var(--blm-bd-hov-a));--blm-bd-hov-h:var(--blm-grey-light-h);--blm-bd-hov-s:var(--blm-grey-light-s);--blm-bd-hov-l:var(--blm-grey-light-l);--blm-bd-hov-a:var(--blm-grey-light-a);--blm-input-dsbl-clr:hsla(var(--blm-input-dsbl-clr-h), var(--blm-input-dsbl-clr-s), var(--blm-input-dsbl-clr-l), var(--blm-input-dsbl-clr-a));--blm-input-dsbl-clr-h:var(--blm-txt-light-h);--blm-input-dsbl-clr-s:var(--blm-txt-light-s);--blm-input-dsbl-clr-l:var(--blm-txt-light-l);--blm-input-bg-clr:hsla(var(--blm-input-bg-clr-h), var(--blm-input-bg-clr-s), var(--blm-input-bg-clr-l), var(--blm-input-bg-clr-a));--blm-input-bg-clr-h:var(--blm-sch-main-h);--blm-input-bg-clr-s:var(--blm-sch-main-s);--blm-input-bg-clr-l:var(--blm-sch-main-l);--blm-input-bg-clr-a:var(--blm-sch-main-a);--blm-input-bd-clr:hsla(var(--blm-input-bd-clr-h), var(--blm-input-bd-clr-s), var(--blm-input-bd-clr-l), var(--blm-input-bd-clr-a));--blm-input-bd-clr-h:var(--blm-bd-h);--blm-input-bd-clr-s:var(--blm-bd-s);--blm-input-bd-clr-l:var(--blm-bd-l);--blm-input-bd-clr-a:var(--blm-bd-a);--blm-input-radius:var(--blm-radius);--blm-input-clr-a:var(--blm-txt-strong-a);--blm-input-placeholder-clr:hsla(var(--blm-input-placeholder-clr-h), var(--blm-input-placeholder-clr-s), var(--blm-input-placeholder-clr-l), var(--blm-input-placeholder-clr-a));--blm-input-placeholder-clr-h:var(--blm-input-clr-h);--blm-input-placeholder-clr-s:var(--blm-input-clr-s);--blm-input-placeholder-clr-l:var(--blm-input-clr-l);--blm-input-placeholder-clr-a:0.3;--blm-input-hov-bd-clr:hsla(var(--blm-input-hov-bd-clr-h), var(--blm-input-hov-bd-clr-s), var(--blm-input-hov-bd-clr-l), var(--blm-input-hov-bd-clr-a));--blm-input-hov-bd-clr-h:var(--blm-bd-hov-h);--blm-input-hov-bd-clr-s:var(--blm-bd-hov-s);--blm-input-hov-bd-clr-l:var(--blm-bd-hov-l);--blm-input-hov-bd-clr-a:var(--blm-bd-hov-a);--blm-input-foc-bd-clr:hsla(var(--blm-input-foc-bd-clr-h), var(--blm-input-foc-bd-clr-s), var(--blm-input-foc-bd-clr-l), var(--blm-input-foc-bd-clr-a));--blm-input-foc-bd-clr-h:var(--blm-link-h);--blm-input-foc-bd-clr-s:var(--blm-link-s);--blm-input-foc-bd-clr-l:var(--blm-link-l);--blm-input-foc-bd-clr-a:var(--blm-link-a);--blm-input-foc-box-shadow-s:0 0 0 0.125em;--blm-input-foc-box-shadow-clr:hsla(var(--blm-input-foc-box-shadow-clr-h), var(--blm-input-foc-box-shadow-clr-s), var(--blm-input-foc-box-shadow-clr-l), var(--blm-input-foc-box-shadow-clr-a));--blm-input-foc-box-shadow-clr-h:var(--blm-link-h);--blm-input-foc-box-shadow-clr-s:var(--blm-link-s);--blm-input-foc-box-shadow-clr-l:var(--blm-link-l);--blm-input-foc-box-shadow-clr-a:0.25;--blm-input-dsbl-bg-clr:hsla(var(--blm-input-dsbl-bg-clr-h), var(--blm-input-dsbl-bg-clr-s), var(--blm-input-dsbl-bg-clr-l), var(--blm-input-dsbl-bg-clr-a));--blm-input-dsbl-bg-clr-h:var(--blm-bg-h);--blm-input-dsbl-bg-clr-s:var(--blm-bg-s);--blm-input-dsbl-bg-clr-l:var(--blm-bg-l);--blm-input-dsbl-bg-clr-a:var(--blm-bg-a);--blm-input-dsbl-bd-clr:hsla(var(--blm-input-dsbl-bd-clr-h), var(--blm-input-dsbl-bd-clr-s), var(--blm-input-dsbl-bd-clr-l), var(--blm-input-dsbl-bd-clr-a));--blm-input-dsbl-bd-clr-h:var(--blm-bg-h);--blm-input-dsbl-bd-clr-s:var(--blm-bg-s);--blm-input-dsbl-bd-clr-l:var(--blm-bg-l);--blm-input-dsbl-bd-clr-a:var(--blm-bg-a);--blm-input-dsbl-clr-a:var(--blm-txt-light-a);--blm-input-dsbl-placeholder-clr:hsla(var(--blm-input-dsbl-placeholder-clr-h), var(--blm-input-dsbl-placeholder-clr-s), var(--blm-input-dsbl-placeholder-clr-l), var(--blm-input-dsbl-placeholder-clr-a));--blm-input-dsbl-placeholder-clr-h:var(--blm-input-dsbl-clr-h);--blm-input-dsbl-placeholder-clr-s:var(--blm-input-dsbl-clr-s);--blm-input-dsbl-placeholder-clr-l:var(--blm-input-dsbl-clr-l);--blm-input-dsbl-placeholder-clr-a:0.3;--blm-input-shadow:inset 0 0.0625em 0.125em hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.05);--blm-ctrl-radius-small:var(--blm-radius-small);--blm-txtarea-p:var(--blm-ctrl-p-horizontal);--blm-txtarea-max-height:40em;--blm-txtarea-min-height:8em;--blm-input-hov-clr:hsla(var(--blm-input-hov-clr-h), var(--blm-input-hov-clr-s), var(--blm-input-hov-clr-l), var(--blm-input-hov-clr-a));--blm-input-hov-clr-h:var(--blm-txt-strong-h);--blm-input-hov-clr-s:var(--blm-txt-strong-s);--blm-input-hov-clr-l:var(--blm-txt-strong-l);--blm-input-hov-clr-a:var(--blm-txt-strong-a);--blm-input-height:var(--blm-ctrl-height);--blm-input-arrow:hsla(var(--blm-input-arrow-h), var(--blm-input-arrow-s), var(--blm-input-arrow-l), var(--blm-input-arrow-a));--blm-input-arrow-h:var(--blm-link-h);--blm-input-arrow-s:var(--blm-link-s);--blm-input-arrow-l:var(--blm-link-l);--blm-input-arrow-a:var(--blm-link-a);--blm-file-radius:var(--blm-radius);--blm-file-cta-bg-clr:hsla(var(--blm-file-cta-bg-clr-h), var(--blm-file-cta-bg-clr-s), var(--blm-file-cta-bg-clr-l), var(--blm-file-cta-bg-clr-a));--blm-file-cta-bg-clr-h:var(--blm-sch-main-ter-h);--blm-file-cta-bg-clr-s:var(--blm-sch-main-ter-s);--blm-file-cta-bg-clr-l:var(--blm-sch-main-ter-l);--blm-file-cta-bg-clr-a:var(--blm-sch-main-ter-a);--blm-file-cta-hov-clr:hsla(var(--blm-file-cta-hov-clr-h), var(--blm-file-cta-hov-clr-s), var(--blm-file-cta-hov-clr-l), var(--blm-file-cta-hov-clr-a));--blm-file-cta-hov-clr-h:var(--blm-txt-strong-h);--blm-file-cta-hov-clr-s:var(--blm-txt-strong-s);--blm-file-cta-hov-clr-l:var(--blm-txt-strong-l);--blm-file-cta-hov-clr-a:var(--blm-txt-strong-a);--blm-file-name-bd-clr:hsla(var(--blm-file-name-bd-clr-h), var(--blm-file-name-bd-clr-s), var(--blm-file-name-bd-clr-l), var(--blm-file-name-bd-clr-a));--blm-file-name-bd-clr-h:var(--blm-bd-h);--blm-file-name-bd-clr-s:var(--blm-bd-s);--blm-file-name-bd-clr-l:var(--blm-bd-l);--blm-file-name-bd-clr-a:var(--blm-bd-a);--blm-file-cta-act-clr:hsla(var(--blm-file-cta-act-clr-h), var(--blm-file-cta-act-clr-s), var(--blm-file-cta-act-clr-l), var(--blm-file-cta-act-clr-a));--blm-file-cta-act-clr-h:var(--blm-txt-strong-h);--blm-file-cta-act-clr-s:var(--blm-txt-strong-s);--blm-file-cta-act-clr-l:var(--blm-txt-strong-l);--blm-file-cta-act-clr-a:var(--blm-txt-strong-a);--blm-file-bd-clr:hsla(var(--blm-file-bd-clr-h), var(--blm-file-bd-clr-s), var(--blm-file-bd-clr-l), var(--blm-file-bd-clr-a));--blm-file-bd-clr-h:var(--blm-bd-h);--blm-file-bd-clr-s:var(--blm-bd-s);--blm-file-bd-clr-l:var(--blm-bd-l);--blm-file-bd-clr-a:var(--blm-bd-a);--blm-file-cta-clr:hsla(var(--blm-file-cta-clr-h), var(--blm-file-cta-clr-s), var(--blm-file-cta-clr-l), var(--blm-file-cta-clr-a));--blm-file-cta-clr-h:var(--blm-txt-h);--blm-file-cta-clr-s:var(--blm-txt-s);--blm-file-cta-clr-l:var(--blm-txt-l);--blm-file-cta-clr-a:var(--blm-txt-a);--blm-file-name-bd-style:solid;--blm-file-name-bd-width:1px 1px 1px 0;--blm-file-name-max-width:16em;--blm-label-clr:hsla(var(--blm-label-clr-h), var(--blm-label-clr-s), var(--blm-label-clr-l), var(--blm-label-clr-a));--blm-label-clr-h:var(--blm-txt-strong-h);--blm-label-clr-s:var(--blm-txt-strong-s);--blm-label-clr-l:var(--blm-txt-strong-l);--blm-label-clr-a:var(--blm-txt-strong-a);--blm-label-weight:var(--blm-weight-bold);--blm-help-s:var(--blm-s-small);--blm-input-icon-act-clr:hsla(var(--blm-input-icon-act-clr-h), var(--blm-input-icon-act-clr-s), var(--blm-input-icon-act-clr-l), var(--blm-input-icon-act-clr-a));--blm-input-icon-act-clr-h:var(--blm-txt-h);--blm-input-icon-act-clr-s:var(--blm-txt-s);--blm-input-icon-act-clr-l:var(--blm-txt-l);--blm-input-icon-act-clr-a:var(--blm-txt-a);--blm-input-icon-clr:hsla(var(--blm-input-icon-clr-h), var(--blm-input-icon-clr-s), var(--blm-input-icon-clr-l), var(--blm-input-icon-clr-a));--blm-input-icon-clr-h:var(--blm-bd-h);--blm-input-icon-clr-s:var(--blm-bd-s);--blm-input-icon-clr-l:var(--blm-bd-l);--blm-input-icon-clr-a:var(--blm-bd-a);--blm-bread-itm-clr:hsla(var(--blm-bread-itm-clr-h), var(--blm-bread-itm-clr-s), var(--blm-bread-itm-clr-l), var(--blm-bread-itm-clr-a));--blm-bread-itm-clr-h:var(--blm-link-h);--blm-bread-itm-clr-s:var(--blm-link-s);--blm-bread-itm-clr-l:var(--blm-link-l);--blm-bread-itm-clr-a:var(--blm-link-a);--blm-bread-itm-p-vertical:0;--blm-bread-itm-p-horizontal:0.75em;--blm-bread-itm-hov-clr:hsla(var(--blm-bread-itm-hov-clr-h), var(--blm-bread-itm-hov-clr-s), var(--blm-bread-itm-hov-clr-l), var(--blm-bread-itm-hov-clr-a));--blm-bread-itm-hov-clr-h:var(--blm-link-hov-h);--blm-bread-itm-hov-clr-s:var(--blm-link-hov-s);--blm-bread-itm-hov-clr-l:var(--blm-link-hov-l);--blm-bread-itm-hov-clr-a:var(--blm-link-hov-a);--blm-bread-itm-act-clr:hsla(var(--blm-bread-itm-act-clr-h), var(--blm-bread-itm-act-clr-s), var(--blm-bread-itm-act-clr-l), var(--blm-bread-itm-act-clr-a));--blm-bread-itm-act-clr-h:var(--blm-txt-strong-h);--blm-bread-itm-act-clr-s:var(--blm-txt-strong-s);--blm-bread-itm-act-clr-l:var(--blm-txt-strong-l);--blm-bread-itm-act-clr-a:var(--blm-txt-strong-a);--blm-bread-itm-separator-clr:hsla(var(--blm-bread-itm-separator-clr-h), var(--blm-bread-itm-separator-clr-s), var(--blm-bread-itm-separator-clr-l), var(--blm-bread-itm-separator-clr-a));--blm-bread-itm-separator-clr-h:var(--blm-bd-hov-h);--blm-bread-itm-separator-clr-s:var(--blm-bd-hov-s);--blm-bread-itm-separator-clr-l:var(--blm-bd-hov-l);--blm-bread-itm-separator-clr-a:var(--blm-bd-hov-a);--blm-block-spacing:1.5rem;--blm-card-bg-clr:hsla(var(--blm-card-bg-clr-h), var(--blm-card-bg-clr-s), var(--blm-card-bg-clr-l), var(--blm-card-bg-clr-a));--blm-card-bg-clr-h:var(--blm-sch-main-h);--blm-card-bg-clr-s:var(--blm-sch-main-s);--blm-card-bg-clr-l:var(--blm-sch-main-l);--blm-card-bg-clr-a:var(--blm-sch-main-a);--blm-card-shadow:0 0.5em 1em -0.125em hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.1),0 0px 0 1px hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.02);--blm-card-clr:hsla(var(--blm-card-clr-h), var(--blm-card-clr-s), var(--blm-card-clr-l), var(--blm-card-clr-a));--blm-card-clr-h:var(--blm-txt-h);--blm-card-clr-s:var(--blm-txt-s);--blm-card-clr-l:var(--blm-txt-l);--blm-card-clr-a:var(--blm-txt-a);--blm-card-hd-bg-clr:hsla(var(--blm-card-hd-bg-clr-h), var(--blm-card-hd-bg-clr-s), var(--blm-card-hd-bg-clr-l), var(--blm-card-hd-bg-clr-a));--blm-card-hd-bg-clr-h:0;--blm-card-hd-bg-clr-s:0%;--blm-card-hd-bg-clr-l:0%;--blm-card-hd-bg-clr-a:0;--blm-card-hd-shadow:0 0.125em 0.25em hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.1);--blm-card-hd-clr:hsla(var(--blm-card-hd-clr-h), var(--blm-card-hd-clr-s), var(--blm-card-hd-clr-l), var(--blm-card-hd-clr-a));--blm-card-hd-clr-h:var(--blm-txt-strong-h);--blm-card-hd-clr-s:var(--blm-txt-strong-s);--blm-card-hd-clr-l:var(--blm-txt-strong-l);--blm-card-hd-clr-a:var(--blm-txt-strong-a);--blm-card-hd-weight:var(--blm-weight-bold);--blm-card-hd-p:0.75rem 1rem;--blm-card-ct-bg-clr:hsla(var(--blm-card-ct-bg-clr-h), var(--blm-card-ct-bg-clr-s), var(--blm-card-ct-bg-clr-l), var(--blm-card-ct-bg-clr-a));--blm-card-ct-bg-clr-h:0;--blm-card-ct-bg-clr-s:0%;--blm-card-ct-bg-clr-l:0%;--blm-card-ct-bg-clr-a:0;--blm-card-ct-p:1.5rem;--blm-card-ft-bg-clr:hsla(var(--blm-card-ft-bg-clr-h), var(--blm-card-ft-bg-clr-s), var(--blm-card-ft-bg-clr-l), var(--blm-card-ft-bg-clr-a));--blm-card-ft-bg-clr-h:0;--blm-card-ft-bg-clr-s:0%;--blm-card-ft-bg-clr-l:0%;--blm-card-ft-bg-clr-a:0;--blm-card-ft-bd-top:1px solid var(--blm-bd-light);--blm-card-ft-p:0.75rem;--blm-card-media-m:var(--blm-block-spacing);--blm-drp-ct-offset:4px;--blm-drp-menu-min-width:12rem;--blm-drp-ct-z:20;--blm-drp-ct-bg-clr:hsla(var(--blm-drp-ct-bg-clr-h), var(--blm-drp-ct-bg-clr-s), var(--blm-drp-ct-bg-clr-l), var(--blm-drp-ct-bg-clr-a));--blm-drp-ct-bg-clr-h:var(--blm-sch-main-h);--blm-drp-ct-bg-clr-s:var(--blm-sch-main-s);--blm-drp-ct-bg-clr-l:var(--blm-sch-main-l);--blm-drp-ct-bg-clr-a:var(--blm-sch-main-a);--blm-drp-ct-radius:var(--blm-radius);--blm-drp-ct-shadow:0 0.5em 1em -0.125em hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.1),0 0px 0 1px hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.02);--blm-drp-ct-p-bottom:0.5rem;--blm-drp-ct-p-top:0.5rem;--blm-drp-itm-clr:hsla(var(--blm-drp-itm-clr-h), var(--blm-drp-itm-clr-s), var(--blm-drp-itm-clr-l), var(--blm-drp-itm-clr-a));--blm-drp-itm-clr-h:var(--blm-txt-h);--blm-drp-itm-clr-s:var(--blm-txt-s);--blm-drp-itm-clr-l:var(--blm-txt-l);--blm-drp-itm-clr-a:var(--blm-txt-a);--blm-drp-itm-hov-bg-clr:hsla(var(--blm-drp-itm-hov-bg-clr-h), var(--blm-drp-itm-hov-bg-clr-s), var(--blm-drp-itm-hov-bg-clr-l), var(--blm-drp-itm-hov-bg-clr-a));--blm-drp-itm-hov-bg-clr-h:var(--blm-bg-h);--blm-drp-itm-hov-bg-clr-s:var(--blm-bg-s);--blm-drp-itm-hov-bg-clr-l:var(--blm-bg-l);--blm-drp-itm-hov-bg-clr-a:var(--blm-bg-a);--blm-drp-itm-hov-clr:hsla(var(--blm-drp-itm-hov-clr-h), var(--blm-drp-itm-hov-clr-s), var(--blm-drp-itm-hov-clr-l), var(--blm-drp-itm-hov-clr-a));--blm-drp-itm-hov-clr-h:var(--blm-sch-inv-h);--blm-drp-itm-hov-clr-s:var(--blm-sch-inv-s);--blm-drp-itm-hov-clr-l:var(--blm-sch-inv-l);--blm-drp-itm-hov-clr-a:var(--blm-sch-inv-a);--blm-drp-itm-act-bg-clr:hsla(var(--blm-drp-itm-act-bg-clr-h), var(--blm-drp-itm-act-bg-clr-s), var(--blm-drp-itm-act-bg-clr-l), var(--blm-drp-itm-act-bg-clr-a));--blm-drp-itm-act-bg-clr-h:var(--blm-link-h);--blm-drp-itm-act-bg-clr-s:var(--blm-link-s);--blm-drp-itm-act-bg-clr-l:var(--blm-link-l);--blm-drp-itm-act-bg-clr-a:var(--blm-link-a);--blm-drp-itm-act-clr:hsla(var(--blm-drp-itm-act-clr-h), var(--blm-drp-itm-act-clr-s), var(--blm-drp-itm-act-clr-l), var(--blm-drp-itm-act-clr-a));--blm-drp-itm-act-clr-h:var(--blm-link-inv-h);--blm-drp-itm-act-clr-s:var(--blm-link-inv-s);--blm-drp-itm-act-clr-l:var(--blm-link-inv-l);--blm-drp-itm-act-clr-a:var(--blm-link-inv-a);--blm-drp-dvd-bg-clr:hsla(var(--blm-drp-dvd-bg-clr-h), var(--blm-drp-dvd-bg-clr-s), var(--blm-drp-dvd-bg-clr-l), var(--blm-drp-dvd-bg-clr-a));--blm-drp-dvd-bg-clr-h:var(--blm-bd-light-h);--blm-drp-dvd-bg-clr-s:var(--blm-bd-light-s);--blm-drp-dvd-bg-clr-l:var(--blm-bd-light-l);--blm-drp-dvd-bg-clr-a:var(--blm-bd-light-a);--blm-level-itm-spacing:calc(var(--blm-block-spacing)/2);--blm-media-bd-clr:hsla(var(--blm-media-bd-clr-h), var(--blm-media-bd-clr-s), var(--blm-media-bd-clr-l), var(--blm-media-bd-clr-a));--blm-media-bd-clr-h:var(--blm-bd-h);--blm-media-bd-clr-s:var(--blm-bd-s);--blm-media-bd-clr-l:var(--blm-bd-l);--blm-media-bd-clr-a:0.5;--blm-media-spacing:1rem;--blm-media-spacing-lg:1.5rem;--blm-menu-list-line-height:1.25;--blm-menu-itm-radius:var(--blm-radius-small);--blm-menu-itm-clr:hsla(var(--blm-menu-itm-clr-h), var(--blm-menu-itm-clr-s), var(--blm-menu-itm-clr-l), var(--blm-menu-itm-clr-a));--blm-menu-itm-clr-h:var(--blm-txt-h);--blm-menu-itm-clr-s:var(--blm-txt-s);--blm-menu-itm-clr-l:var(--blm-txt-l);--blm-menu-itm-clr-a:var(--blm-txt-a);--blm-menu-list-link-p:0.5em 0.75em;--blm-menu-itm-hov-bg-clr:hsla(var(--blm-menu-itm-hov-bg-clr-h), var(--blm-menu-itm-hov-bg-clr-s), var(--blm-menu-itm-hov-bg-clr-l), var(--blm-menu-itm-hov-bg-clr-a));--blm-menu-itm-hov-bg-clr-h:var(--blm-bg-h);--blm-menu-itm-hov-bg-clr-s:var(--blm-bg-s);--blm-menu-itm-hov-bg-clr-l:var(--blm-bg-l);--blm-menu-itm-hov-bg-clr-a:var(--blm-bg-a);--blm-menu-itm-hov-clr:hsla(var(--blm-menu-itm-hov-clr-h), var(--blm-menu-itm-hov-clr-s), var(--blm-menu-itm-hov-clr-l), var(--blm-menu-itm-hov-clr-a));--blm-menu-itm-hov-clr-h:var(--blm-txt-strong-h);--blm-menu-itm-hov-clr-s:var(--blm-txt-strong-s);--blm-menu-itm-hov-clr-l:var(--blm-txt-strong-l);--blm-menu-itm-hov-clr-a:var(--blm-txt-strong-a);--blm-menu-itm-act-bg-clr:hsla(var(--blm-menu-itm-act-bg-clr-h), var(--blm-menu-itm-act-bg-clr-s), var(--blm-menu-itm-act-bg-clr-l), var(--blm-menu-itm-act-bg-clr-a));--blm-menu-itm-act-bg-clr-h:var(--blm-link-h);--blm-menu-itm-act-bg-clr-s:var(--blm-link-s);--blm-menu-itm-act-bg-clr-l:var(--blm-link-l);--blm-menu-itm-act-bg-clr-a:var(--blm-link-a);--blm-menu-itm-act-clr:hsla(var(--blm-menu-itm-act-clr-h), var(--blm-menu-itm-act-clr-s), var(--blm-menu-itm-act-clr-l), var(--blm-menu-itm-act-clr-a));--blm-menu-itm-act-clr-h:var(--blm-link-inv-h);--blm-menu-itm-act-clr-s:var(--blm-link-inv-s);--blm-menu-itm-act-clr-l:var(--blm-link-inv-l);--blm-menu-itm-act-clr-a:var(--blm-link-inv-a);--blm-menu-list-bd-left:1px solid var(--blm-bd);--blm-menu-nested-list-m:0.75em;--blm-menu-nested-list-p-left:0.75em;--blm-menu-label-clr:hsla(var(--blm-menu-label-clr-h), var(--blm-menu-label-clr-s), var(--blm-menu-label-clr-l), var(--blm-menu-label-clr-a));--blm-menu-label-clr-h:var(--blm-txt-light-h);--blm-menu-label-clr-s:var(--blm-txt-light-s);--blm-menu-label-clr-l:var(--blm-txt-light-l);--blm-menu-label-clr-a:var(--blm-txt-light-a);--blm-menu-label-font-s:0.75em;--blm-menu-label-letter-spacing:0.1em;--blm-menu-label-spacing:1em;--blm-txt-inv:hsla(var(--blm-txt-inv-h), var(--blm-txt-inv-s), var(--blm-txt-inv-l), var(--blm-txt-inv-a));--blm-txt-inv-h:0;--blm-txt-inv-s:0%;--blm-txt-inv-l:100%;--blm-txt-inv-a:1;--blm-msg-bg-clr:hsla(var(--blm-msg-bg-clr-h), var(--blm-msg-bg-clr-s), var(--blm-msg-bg-clr-l), var(--blm-msg-bg-clr-a));--blm-msg-bg-clr-h:var(--blm-bg-h);--blm-msg-bg-clr-s:var(--blm-bg-s);--blm-msg-bg-clr-l:var(--blm-bg-l);--blm-msg-bg-clr-a:var(--blm-bg-a);--blm-msg-radius:var(--blm-radius);--blm-msg-hd-bg-clr:hsla(var(--blm-msg-hd-bg-clr-h), var(--blm-msg-hd-bg-clr-s), var(--blm-msg-hd-bg-clr-l), var(--blm-msg-hd-bg-clr-a));--blm-msg-hd-bg-clr-h:var(--blm-txt-h);--blm-msg-hd-bg-clr-s:var(--blm-txt-s);--blm-msg-hd-bg-clr-l:var(--blm-txt-l);--blm-msg-hd-bg-clr-a:var(--blm-txt-a);--blm-msg-hd-radius:var(--blm-radius);--blm-msg-hd-clr:hsla(var(--blm-msg-hd-clr-h), var(--blm-msg-hd-clr-s), var(--blm-msg-hd-clr-l), var(--blm-msg-hd-clr-a));--blm-msg-hd-clr-h:var(--blm-txt-inv-h);--blm-msg-hd-clr-s:var(--blm-txt-inv-s);--blm-msg-hd-clr-l:var(--blm-txt-inv-l);--blm-msg-hd-clr-a:var(--blm-txt-inv-a);--blm-msg-hd-weight:var(--blm-weight-bold);--blm-msg-hd-p:0.75em 1em;--blm-msg-hd-body-bd-width:0;--blm-msg-body-bd-clr:hsla(var(--blm-msg-body-bd-clr-h), var(--blm-msg-body-bd-clr-s), var(--blm-msg-body-bd-clr-l), var(--blm-msg-body-bd-clr-a));--blm-msg-body-bd-clr-h:var(--blm-bd-h);--blm-msg-body-bd-clr-s:var(--blm-bd-s);--blm-msg-body-bd-clr-l:var(--blm-bd-l);--blm-msg-body-bd-clr-a:var(--blm-bd-a);--blm-msg-body-radius:var(--blm-radius);--blm-msg-body-bd-width:0 0 0 4px;--blm-msg-body-clr:hsla(var(--blm-msg-body-clr-h), var(--blm-msg-body-clr-s), var(--blm-msg-body-clr-l), var(--blm-msg-body-clr-a));--blm-msg-body-clr-h:var(--blm-txt-h);--blm-msg-body-clr-s:var(--blm-txt-s);--blm-msg-body-clr-l:var(--blm-txt-l);--blm-msg-body-clr-a:var(--blm-txt-a);--blm-msg-body-p:1.25em 1.5em;--blm-msg-body-pre-bg-clr:hsla(var(--blm-msg-body-pre-bg-clr-h), var(--blm-msg-body-pre-bg-clr-s), var(--blm-msg-body-pre-bg-clr-l), var(--blm-msg-body-pre-bg-clr-a));--blm-msg-body-pre-bg-clr-h:var(--blm-sch-main-h);--blm-msg-body-pre-bg-clr-s:var(--blm-sch-main-s);--blm-msg-body-pre-bg-clr-l:var(--blm-sch-main-l);--blm-msg-body-pre-bg-clr-a:var(--blm-sch-main-a);--blm-msg-body-pre-code-bg-clr:hsla(var(--blm-msg-body-pre-code-bg-clr-h), var(--blm-msg-body-pre-code-bg-clr-s), var(--blm-msg-body-pre-code-bg-clr-l), var(--blm-msg-body-pre-code-bg-clr-a));--blm-msg-body-pre-code-bg-clr-h:0;--blm-msg-body-pre-code-bg-clr-s:0%;--blm-msg-body-pre-code-bg-clr-l:0%;--blm-msg-body-pre-code-bg-clr-a:0;--blm-modal-z:40;--blm-modal-bg-bg-clr:hsla(var(--blm-modal-bg-bg-clr-h), var(--blm-modal-bg-bg-clr-s), var(--blm-modal-bg-bg-clr-l), var(--blm-modal-bg-bg-clr-a));--blm-modal-bg-bg-clr-h:var(--blm-sch-inv-h);--blm-modal-bg-bg-clr-s:var(--blm-sch-inv-s);--blm-modal-bg-bg-clr-l:var(--blm-sch-inv-l);--blm-modal-bg-bg-clr-a:0.86;--blm-modal-ct-m-mobile:20px;--blm-modal-ct-spacing-mobile:160px;--blm-modal-ct-spacing-tablet:40px;--blm-modal-ct-width:640px;--blm-modal-close-dim:40px;--blm-modal-close-right:20px;--blm-modal-close-top:20px;--blm-modal-card-spacing:40px;--blm-modal-card-head-bg-clr:hsla(var(--blm-modal-card-head-bg-clr-h), var(--blm-modal-card-head-bg-clr-s), var(--blm-modal-card-head-bg-clr-l), var(--blm-modal-card-head-bg-clr-a));--blm-modal-card-head-bg-clr-h:var(--blm-bg-h);--blm-modal-card-head-bg-clr-s:var(--blm-bg-s);--blm-modal-card-head-bg-clr-l:var(--blm-bg-l);--blm-modal-card-head-bg-clr-a:var(--blm-bg-a);--blm-modal-card-head-p:20px;--blm-modal-card-head-bd-bottom:1px solid var(--blm-bd);--blm-modal-card-head-radius:var(--blm-radius-lg);--blm-modal-card-title-clr:hsla(var(--blm-modal-card-title-clr-h), var(--blm-modal-card-title-clr-s), var(--blm-modal-card-title-clr-l), var(--blm-modal-card-title-clr-a));--blm-modal-card-title-clr-h:var(--blm-txt-strong-h);--blm-modal-card-title-clr-s:var(--blm-txt-strong-s);--blm-modal-card-title-clr-l:var(--blm-txt-strong-l);--blm-modal-card-title-clr-a:var(--blm-txt-strong-a);--blm-modal-card-title-s:var(--blm-s-4);--blm-modal-card-title-line-height:1;--blm-modal-card-foot-radius:var(--blm-radius-lg);--blm-modal-card-foot-bd-top:1px solid var(--blm-bd);--blm-modal-card-body-bg-clr:hsla(var(--blm-modal-card-body-bg-clr-h), var(--blm-modal-card-body-bg-clr-s), var(--blm-modal-card-body-bg-clr-l), var(--blm-modal-card-body-bg-clr-a));--blm-modal-card-body-bg-clr-h:var(--blm-sch-main-h);--blm-modal-card-body-bg-clr-s:var(--blm-sch-main-s);--blm-modal-card-body-bg-clr-l:var(--blm-sch-main-l);--blm-modal-card-body-bg-clr-a:var(--blm-sch-main-a);--blm-modal-card-body-p:20px;--blm-nav-itm-clr:hsla(var(--blm-nav-itm-clr-h), var(--blm-nav-itm-clr-s), var(--blm-nav-itm-clr-l), var(--blm-nav-itm-clr-a));--blm-nav-itm-clr-h:var(--blm-txt-h);--blm-nav-itm-clr-s:var(--blm-txt-s);--blm-nav-itm-clr-l:var(--blm-txt-l);--blm-nav-itm-clr-a:var(--blm-txt-a);--blm-nav-bg-clr:hsla(var(--blm-nav-bg-clr-h), var(--blm-nav-bg-clr-s), var(--blm-nav-bg-clr-l), var(--blm-nav-bg-clr-a));--blm-nav-bg-clr-h:var(--blm-sch-main-h);--blm-nav-bg-clr-s:var(--blm-sch-main-s);--blm-nav-bg-clr-l:var(--blm-sch-main-l);--blm-nav-bg-clr-a:var(--blm-sch-main-a);--blm-nav-height:3.25rem;--blm-nav-z:30;--blm-nav-box-shadow-s:0 2px 0 0;--blm-nav-box-shadow-clr:hsla(var(--blm-nav-box-shadow-clr-h), var(--blm-nav-box-shadow-clr-s), var(--blm-nav-box-shadow-clr-l), var(--blm-nav-box-shadow-clr-a));--blm-nav-box-shadow-clr-h:var(--blm-bg-h);--blm-nav-box-shadow-clr-s:var(--blm-bg-s);--blm-nav-box-shadow-clr-l:var(--blm-bg-l);--blm-nav-box-shadow-clr-a:var(--blm-bg-a);--blm-nav-fixed-z:30;--blm-nav-bottom-box-shadow-s:0 -2px 0 0;--blm-nav-burger-clr:hsla(var(--blm-nav-burger-clr-h), var(--blm-nav-burger-clr-s), var(--blm-nav-burger-clr-l), var(--blm-nav-burger-clr-a));--blm-nav-burger-clr-h:var(--blm-nav-itm-clr-h);--blm-nav-burger-clr-s:var(--blm-nav-itm-clr-s);--blm-nav-burger-clr-l:var(--blm-nav-itm-clr-l);--blm-nav-burger-clr-a:var(--blm-nav-itm-clr-a);--blm-speed:86ms;--blm-easing:ease-out;--blm-nav-itm-hov-bg-clr:hsla(var(--blm-nav-itm-hov-bg-clr-h), var(--blm-nav-itm-hov-bg-clr-s), var(--blm-nav-itm-hov-bg-clr-l), var(--blm-nav-itm-hov-bg-clr-a));--blm-nav-itm-hov-bg-clr-h:var(--blm-sch-main-bis-h);--blm-nav-itm-hov-bg-clr-s:var(--blm-sch-main-bis-s);--blm-nav-itm-hov-bg-clr-l:var(--blm-sch-main-bis-l);--blm-nav-itm-hov-bg-clr-a:var(--blm-sch-main-bis-a);--blm-nav-itm-hov-clr:hsla(var(--blm-nav-itm-hov-clr-h), var(--blm-nav-itm-hov-clr-s), var(--blm-nav-itm-hov-clr-l), var(--blm-nav-itm-hov-clr-a));--blm-nav-itm-hov-clr-h:var(--blm-link-h);--blm-nav-itm-hov-clr-s:var(--blm-link-s);--blm-nav-itm-hov-clr-l:var(--blm-link-l);--blm-nav-itm-hov-clr-a:var(--blm-link-a);--blm-nav-itm-img-max-height:1.75rem;--blm-nav-tab-hov-bg-clr:hsla(var(--blm-nav-tab-hov-bg-clr-h), var(--blm-nav-tab-hov-bg-clr-s), var(--blm-nav-tab-hov-bg-clr-l), var(--blm-nav-tab-hov-bg-clr-a));--blm-nav-tab-hov-bg-clr-h:0;--blm-nav-tab-hov-bg-clr-s:0%;--blm-nav-tab-hov-bg-clr-l:0%;--blm-nav-tab-hov-bg-clr-a:0;--blm-nav-tab-hov-bd-bottom-clr:hsla(var(--blm-nav-tab-hov-bd-bottom-clr-h), var(--blm-nav-tab-hov-bd-bottom-clr-s), var(--blm-nav-tab-hov-bd-bottom-clr-l), var(--blm-nav-tab-hov-bd-bottom-clr-a));--blm-nav-tab-hov-bd-bottom-clr-h:var(--blm-link-h);--blm-nav-tab-hov-bd-bottom-clr-s:var(--blm-link-s);--blm-nav-tab-hov-bd-bottom-clr-l:var(--blm-link-l);--blm-nav-tab-hov-bd-bottom-clr-a:var(--blm-link-a);--blm-nav-tab-act-bg-clr:hsla(var(--blm-nav-tab-act-bg-clr-h), var(--blm-nav-tab-act-bg-clr-s), var(--blm-nav-tab-act-bg-clr-l), var(--blm-nav-tab-act-bg-clr-a));--blm-nav-tab-act-bg-clr-h:0;--blm-nav-tab-act-bg-clr-s:0%;--blm-nav-tab-act-bg-clr-l:0%;--blm-nav-tab-act-bg-clr-a:0;--blm-nav-tab-act-bd-bottom-clr:hsla(var(--blm-nav-tab-act-bd-bottom-clr-h), var(--blm-nav-tab-act-bd-bottom-clr-s), var(--blm-nav-tab-act-bd-bottom-clr-l), var(--blm-nav-tab-act-bd-bottom-clr-a));--blm-nav-tab-act-bd-bottom-clr-h:var(--blm-link-h);--blm-nav-tab-act-bd-bottom-clr-s:var(--blm-link-s);--blm-nav-tab-act-bd-bottom-clr-l:var(--blm-link-l);--blm-nav-tab-act-bd-bottom-clr-a:var(--blm-link-a);--blm-nav-tab-act-bd-bottom-style:solid;--blm-nav-tab-act-bd-bottom-width:3px;--blm-nav-tab-act-clr:hsla(var(--blm-nav-tab-act-clr-h), var(--blm-nav-tab-act-clr-s), var(--blm-nav-tab-act-clr-l), var(--blm-nav-tab-act-clr-a));--blm-nav-tab-act-clr-h:var(--blm-link-h);--blm-nav-tab-act-clr-s:var(--blm-link-s);--blm-nav-tab-act-clr-l:var(--blm-link-l);--blm-nav-tab-act-clr-a:var(--blm-link-a);--blm-nav-drp-arrow:hsla(var(--blm-nav-drp-arrow-h), var(--blm-nav-drp-arrow-s), var(--blm-nav-drp-arrow-l), var(--blm-nav-drp-arrow-a));--blm-nav-drp-arrow-h:var(--blm-link-h);--blm-nav-drp-arrow-s:var(--blm-link-s);--blm-nav-drp-arrow-l:var(--blm-link-l);--blm-nav-drp-arrow-a:var(--blm-link-a);--blm-nav-dvd-bg-clr:hsla(var(--blm-nav-dvd-bg-clr-h), var(--blm-nav-dvd-bg-clr-s), var(--blm-nav-dvd-bg-clr-l), var(--blm-nav-dvd-bg-clr-a));--blm-nav-dvd-bg-clr-h:var(--blm-bg-h);--blm-nav-dvd-bg-clr-s:var(--blm-bg-s);--blm-nav-dvd-bg-clr-l:var(--blm-bg-l);--blm-nav-dvd-bg-clr-a:var(--blm-bg-a);--blm-nav-dvd-height:2px;--blm-nav-p-vertical:1rem;--blm-nav-p-horizontal:2rem;--blm-nav-drp-itm-hov-bg-clr:hsla(var(--blm-nav-drp-itm-hov-bg-clr-h), var(--blm-nav-drp-itm-hov-bg-clr-s), var(--blm-nav-drp-itm-hov-bg-clr-l), var(--blm-nav-drp-itm-hov-bg-clr-a));--blm-nav-drp-itm-hov-bg-clr-h:var(--blm-bg-h);--blm-nav-drp-itm-hov-bg-clr-s:var(--blm-bg-s);--blm-nav-drp-itm-hov-bg-clr-l:var(--blm-bg-l);--blm-nav-drp-itm-hov-bg-clr-a:var(--blm-bg-a);--blm-nav-drp-itm-hov-clr:hsla(var(--blm-nav-drp-itm-hov-clr-h), var(--blm-nav-drp-itm-hov-clr-s), var(--blm-nav-drp-itm-hov-clr-l), var(--blm-nav-drp-itm-hov-clr-a));--blm-nav-drp-itm-hov-clr-h:var(--blm-sch-inv-h);--blm-nav-drp-itm-hov-clr-s:var(--blm-sch-inv-s);--blm-nav-drp-itm-hov-clr-l:var(--blm-sch-inv-l);--blm-nav-drp-itm-hov-clr-a:var(--blm-sch-inv-a);--blm-nav-drp-itm-act-bg-clr:hsla(var(--blm-nav-drp-itm-act-bg-clr-h), var(--blm-nav-drp-itm-act-bg-clr-s), var(--blm-nav-drp-itm-act-bg-clr-l), var(--blm-nav-drp-itm-act-bg-clr-a));--blm-nav-drp-itm-act-bg-clr-h:var(--blm-bg-h);--blm-nav-drp-itm-act-bg-clr-s:var(--blm-bg-s);--blm-nav-drp-itm-act-bg-clr-l:var(--blm-bg-l);--blm-nav-drp-itm-act-bg-clr-a:var(--blm-bg-a);--blm-nav-drp-itm-act-clr:hsla(var(--blm-nav-drp-itm-act-clr-h), var(--blm-nav-drp-itm-act-clr-s), var(--blm-nav-drp-itm-act-clr-l), var(--blm-nav-drp-itm-act-clr-a));--blm-nav-drp-itm-act-clr-h:var(--blm-link-h);--blm-nav-drp-itm-act-clr-s:var(--blm-link-s);--blm-nav-drp-itm-act-clr-l:var(--blm-link-l);--blm-nav-drp-itm-act-clr-a:var(--blm-link-a);--blm-nav-drp-bd-top:2px solid var(--blm-bd);--blm-nav-drp-radius:var(--blm-radius-lg);--blm-nav-drp-bg-clr:hsla(var(--blm-nav-drp-bg-clr-h), var(--blm-nav-drp-bg-clr-s), var(--blm-nav-drp-bg-clr-l), var(--blm-nav-drp-bg-clr-a));--blm-nav-drp-bg-clr-h:var(--blm-sch-main-h);--blm-nav-drp-bg-clr-s:var(--blm-sch-main-s);--blm-nav-drp-bg-clr-l:var(--blm-sch-main-l);--blm-nav-drp-bg-clr-a:var(--blm-sch-main-a);--blm-nav-drp-z:20;--blm-nav-drp-boxed-radius:var(--blm-radius-lg);--blm-nav-drp-boxed-shadow:0 8px 8px hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.1),0 0 0 1px hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.1);--blm-nav-drp-offset:-4px;--blm-nav-itm-act-clr:hsla(var(--blm-nav-itm-act-clr-h), var(--blm-nav-itm-act-clr-s), var(--blm-nav-itm-act-clr-l), var(--blm-nav-itm-act-clr-a));--blm-nav-itm-act-clr-h:var(--blm-sch-inv-h);--blm-nav-itm-act-clr-s:var(--blm-sch-inv-s);--blm-nav-itm-act-clr-l:var(--blm-sch-inv-l);--blm-nav-itm-act-clr-a:var(--blm-sch-inv-a);--blm-nav-itm-act-bg-clr:hsla(var(--blm-nav-itm-act-bg-clr-h), var(--blm-nav-itm-act-bg-clr-s), var(--blm-nav-itm-act-bg-clr-l), var(--blm-nav-itm-act-bg-clr-a));--blm-nav-itm-act-bg-clr-h:0;--blm-nav-itm-act-bg-clr-s:0%;--blm-nav-itm-act-bg-clr-l:0%;--blm-nav-itm-act-bg-clr-a:0;--blm-pag-m:-0.25rem;--blm-pag-itm-font-s:1em;--blm-pag-itm-m:0.25rem;--blm-pag-itm-p-left:0.5em;--blm-pag-itm-p-right:0.5em;--blm-pag-bd-clr:hsla(var(--blm-pag-bd-clr-h), var(--blm-pag-bd-clr-s), var(--blm-pag-bd-clr-l), var(--blm-pag-bd-clr-a));--blm-pag-bd-clr-h:var(--blm-bd-h);--blm-pag-bd-clr-s:var(--blm-bd-s);--blm-pag-bd-clr-l:var(--blm-bd-l);--blm-pag-bd-clr-a:var(--blm-bd-a);--blm-pag-clr:hsla(var(--blm-pag-clr-h), var(--blm-pag-clr-s), var(--blm-pag-clr-l), var(--blm-pag-clr-a));--blm-pag-clr-h:var(--blm-txt-strong-h);--blm-pag-clr-s:var(--blm-txt-strong-s);--blm-pag-clr-l:var(--blm-txt-strong-l);--blm-pag-clr-a:var(--blm-txt-strong-a);--blm-pag-min-width:var(--blm-ctrl-height);--blm-pag-hov-bd-clr:hsla(var(--blm-pag-hov-bd-clr-h), var(--blm-pag-hov-bd-clr-s), var(--blm-pag-hov-bd-clr-l), var(--blm-pag-hov-bd-clr-a));--blm-pag-hov-bd-clr-h:var(--blm-link-hov-bd-h);--blm-pag-hov-bd-clr-s:var(--blm-link-hov-bd-s);--blm-pag-hov-bd-clr-l:var(--blm-link-hov-bd-l);--blm-pag-hov-bd-clr-a:var(--blm-link-hov-bd-a);--blm-pag-hov-clr:hsla(var(--blm-pag-hov-clr-h), var(--blm-pag-hov-clr-s), var(--blm-pag-hov-clr-l), var(--blm-pag-hov-clr-a));--blm-pag-hov-clr-h:var(--blm-link-hov-h);--blm-pag-hov-clr-s:var(--blm-link-hov-s);--blm-pag-hov-clr-l:var(--blm-link-hov-l);--blm-pag-hov-clr-a:var(--blm-link-hov-a);--blm-pag-foc-bd-clr:hsla(var(--blm-pag-foc-bd-clr-h), var(--blm-pag-foc-bd-clr-s), var(--blm-pag-foc-bd-clr-l), var(--blm-pag-foc-bd-clr-a));--blm-pag-foc-bd-clr-h:var(--blm-link-foc-bd-h);--blm-pag-foc-bd-clr-s:var(--blm-link-foc-bd-s);--blm-pag-foc-bd-clr-l:var(--blm-link-foc-bd-l);--blm-pag-foc-bd-clr-a:var(--blm-link-foc-bd-a);--blm-pag-shadow-inset:inset 0 1px 2px hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.2);--blm-pag-dsbl-bg-clr:hsla(var(--blm-pag-dsbl-bg-clr-h), var(--blm-pag-dsbl-bg-clr-s), var(--blm-pag-dsbl-bg-clr-l), var(--blm-pag-dsbl-bg-clr-a));--blm-pag-dsbl-bg-clr-h:var(--blm-bd-h);--blm-pag-dsbl-bg-clr-s:var(--blm-bd-s);--blm-pag-dsbl-bg-clr-l:var(--blm-bd-l);--blm-pag-dsbl-bg-clr-a:var(--blm-bd-a);--blm-pag-dsbl-bd-clr:hsla(var(--blm-pag-dsbl-bd-clr-h), var(--blm-pag-dsbl-bd-clr-s), var(--blm-pag-dsbl-bd-clr-l), var(--blm-pag-dsbl-bd-clr-a));--blm-pag-dsbl-bd-clr-h:var(--blm-bd-h);--blm-pag-dsbl-bd-clr-s:var(--blm-bd-s);--blm-pag-dsbl-bd-clr-l:var(--blm-bd-l);--blm-pag-dsbl-bd-clr-a:var(--blm-bd-a);--blm-pag-dsbl-clr:hsla(var(--blm-pag-dsbl-clr-h), var(--blm-pag-dsbl-clr-s), var(--blm-pag-dsbl-clr-l), var(--blm-pag-dsbl-clr-a));--blm-pag-dsbl-clr-h:var(--blm-txt-light-h);--blm-pag-dsbl-clr-s:var(--blm-txt-light-s);--blm-pag-dsbl-clr-l:var(--blm-txt-light-l);--blm-pag-dsbl-clr-a:var(--blm-txt-light-a);--blm-pag-cur-bg-clr:hsla(var(--blm-pag-cur-bg-clr-h), var(--blm-pag-cur-bg-clr-s), var(--blm-pag-cur-bg-clr-l), var(--blm-pag-cur-bg-clr-a));--blm-pag-cur-bg-clr-h:var(--blm-link-h);--blm-pag-cur-bg-clr-s:var(--blm-link-s);--blm-pag-cur-bg-clr-l:var(--blm-link-l);--blm-pag-cur-bg-clr-a:var(--blm-link-a);--blm-pag-cur-bd-clr:hsla(var(--blm-pag-cur-bd-clr-h), var(--blm-pag-cur-bd-clr-s), var(--blm-pag-cur-bd-clr-l), var(--blm-pag-cur-bd-clr-a));--blm-pag-cur-bd-clr-h:var(--blm-link-h);--blm-pag-cur-bd-clr-s:var(--blm-link-s);--blm-pag-cur-bd-clr-l:var(--blm-link-l);--blm-pag-cur-bd-clr-a:var(--blm-link-a);--blm-pag-cur-clr:hsla(var(--blm-pag-cur-clr-h), var(--blm-pag-cur-clr-s), var(--blm-pag-cur-clr-l), var(--blm-pag-cur-clr-a));--blm-pag-cur-clr-h:var(--blm-link-inv-h);--blm-pag-cur-clr-s:var(--blm-link-inv-s);--blm-pag-cur-clr-l:var(--blm-link-inv-l);--blm-pag-cur-clr-a:var(--blm-link-inv-a);--blm-pag-ellipsis-clr:hsla(var(--blm-pag-ellipsis-clr-h), var(--blm-pag-ellipsis-clr-s), var(--blm-pag-ellipsis-clr-l), var(--blm-pag-ellipsis-clr-a));--blm-pag-ellipsis-clr-h:var(--blm-grey-light-h);--blm-pag-ellipsis-clr-s:var(--blm-grey-light-s);--blm-pag-ellipsis-clr-l:var(--blm-grey-light-l);--blm-pag-ellipsis-clr-a:var(--blm-grey-light-a);--blm-pnl-radius:var(--blm-radius-lg);--blm-pnl-shadow:0 0.5em 1em -0.125em hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.1),0 0px 0 1px hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.02);--blm-pnl-m:var(--blm-block-spacing);--blm-pnl-itm-bd:1px solid var(--blm-bd-light);--blm-pnl-hdg-bg-clr:hsla(var(--blm-pnl-hdg-bg-clr-h), var(--blm-pnl-hdg-bg-clr-s), var(--blm-pnl-hdg-bg-clr-l), var(--blm-pnl-hdg-bg-clr-a));--blm-pnl-hdg-bg-clr-h:var(--blm-bd-light-h);--blm-pnl-hdg-bg-clr-s:var(--blm-bd-light-s);--blm-pnl-hdg-bg-clr-l:var(--blm-bd-light-l);--blm-pnl-hdg-bg-clr-a:var(--blm-bd-light-a);--blm-pnl-hdg-clr:hsla(var(--blm-pnl-hdg-clr-h), var(--blm-pnl-hdg-clr-s), var(--blm-pnl-hdg-clr-l), var(--blm-pnl-hdg-clr-a));--blm-pnl-hdg-clr-h:var(--blm-txt-strong-h);--blm-pnl-hdg-clr-s:var(--blm-txt-strong-s);--blm-pnl-hdg-clr-l:var(--blm-txt-strong-l);--blm-pnl-hdg-clr-a:var(--blm-txt-strong-a);--blm-pnl-hdg-s:1.25em;--blm-pnl-hdg-weight:var(--blm-weight-bold);--blm-pnl-hdg-line-height:1.25;--blm-pnl-hdg-p:0.75em 1em;--blm-pnl-tabs-font-s:0.875em;--blm-pnl-tab-bd-bottom:1px solid var(--blm-bd);--blm-pnl-tab-act-bd-bottom-clr:hsla(var(--blm-pnl-tab-act-bd-bottom-clr-h), var(--blm-pnl-tab-act-bd-bottom-clr-s), var(--blm-pnl-tab-act-bd-bottom-clr-l), var(--blm-pnl-tab-act-bd-bottom-clr-a));--blm-pnl-tab-act-bd-bottom-clr-h:var(--blm-link-act-bd-h);--blm-pnl-tab-act-bd-bottom-clr-s:var(--blm-link-act-bd-s);--blm-pnl-tab-act-bd-bottom-clr-l:var(--blm-link-act-bd-l);--blm-pnl-tab-act-bd-bottom-clr-a:var(--blm-link-act-bd-a);--blm-pnl-tab-act-clr:hsla(var(--blm-pnl-tab-act-clr-h), var(--blm-pnl-tab-act-clr-s), var(--blm-pnl-tab-act-clr-l), var(--blm-pnl-tab-act-clr-a));--blm-pnl-tab-act-clr-h:var(--blm-link-act-h);--blm-pnl-tab-act-clr-s:var(--blm-link-act-s);--blm-pnl-tab-act-clr-l:var(--blm-link-act-l);--blm-pnl-tab-act-clr-a:var(--blm-link-act-a);--blm-pnl-list-itm-clr:hsla(var(--blm-pnl-list-itm-clr-h), var(--blm-pnl-list-itm-clr-s), var(--blm-pnl-list-itm-clr-l), var(--blm-pnl-list-itm-clr-a));--blm-pnl-list-itm-clr-h:var(--blm-txt-h);--blm-pnl-list-itm-clr-s:var(--blm-txt-s);--blm-pnl-list-itm-clr-l:var(--blm-txt-l);--blm-pnl-list-itm-clr-a:var(--blm-txt-a);--blm-pnl-list-itm-hov-clr:hsla(var(--blm-pnl-list-itm-hov-clr-h), var(--blm-pnl-list-itm-hov-clr-s), var(--blm-pnl-list-itm-hov-clr-l), var(--blm-pnl-list-itm-hov-clr-a));--blm-pnl-list-itm-hov-clr-h:var(--blm-link-h);--blm-pnl-list-itm-hov-clr-s:var(--blm-link-s);--blm-pnl-list-itm-hov-clr-l:var(--blm-link-l);--blm-pnl-list-itm-hov-clr-a:var(--blm-link-a);--blm-pnl-block-clr:hsla(var(--blm-pnl-block-clr-h), var(--blm-pnl-block-clr-s), var(--blm-pnl-block-clr-l), var(--blm-pnl-block-clr-a));--blm-pnl-block-clr-h:var(--blm-txt-strong-h);--blm-pnl-block-clr-s:var(--blm-txt-strong-s);--blm-pnl-block-clr-l:var(--blm-txt-strong-l);--blm-pnl-block-clr-a:var(--blm-txt-strong-a);--blm-pnl-block-act-bd-left-clr:hsla(var(--blm-pnl-block-act-bd-left-clr-h), var(--blm-pnl-block-act-bd-left-clr-s), var(--blm-pnl-block-act-bd-left-clr-l), var(--blm-pnl-block-act-bd-left-clr-a));--blm-pnl-block-act-bd-left-clr-h:var(--blm-link-h);--blm-pnl-block-act-bd-left-clr-s:var(--blm-link-s);--blm-pnl-block-act-bd-left-clr-l:var(--blm-link-l);--blm-pnl-block-act-bd-left-clr-a:var(--blm-link-a);--blm-pnl-block-act-clr:hsla(var(--blm-pnl-block-act-clr-h), var(--blm-pnl-block-act-clr-s), var(--blm-pnl-block-act-clr-l), var(--blm-pnl-block-act-clr-a));--blm-pnl-block-act-clr-h:var(--blm-link-act-h);--blm-pnl-block-act-clr-s:var(--blm-link-act-s);--blm-pnl-block-act-clr-l:var(--blm-link-act-l);--blm-pnl-block-act-clr-a:var(--blm-link-act-a);--blm-pnl-block-act-icon-clr:hsla(var(--blm-pnl-block-act-icon-clr-h), var(--blm-pnl-block-act-icon-clr-s), var(--blm-pnl-block-act-icon-clr-l), var(--blm-pnl-block-act-icon-clr-a));--blm-pnl-block-act-icon-clr-h:var(--blm-link-h);--blm-pnl-block-act-icon-clr-s:var(--blm-link-s);--blm-pnl-block-act-icon-clr-l:var(--blm-link-l);--blm-pnl-block-act-icon-clr-a:var(--blm-link-a);--blm-pnl-block-hov-bg-clr:hsla(var(--blm-pnl-block-hov-bg-clr-h), var(--blm-pnl-block-hov-bg-clr-s), var(--blm-pnl-block-hov-bg-clr-l), var(--blm-pnl-block-hov-bg-clr-a));--blm-pnl-block-hov-bg-clr-h:var(--blm-bg-h);--blm-pnl-block-hov-bg-clr-s:var(--blm-bg-s);--blm-pnl-block-hov-bg-clr-l:var(--blm-bg-l);--blm-pnl-block-hov-bg-clr-a:var(--blm-bg-a);--blm-pnl-icon-clr:hsla(var(--blm-pnl-icon-clr-h), var(--blm-pnl-icon-clr-s), var(--blm-pnl-icon-clr-l), var(--blm-pnl-icon-clr-a));--blm-pnl-icon-clr-h:var(--blm-txt-light-h);--blm-pnl-icon-clr-s:var(--blm-txt-light-s);--blm-pnl-icon-clr-l:var(--blm-txt-light-l);--blm-pnl-icon-clr-a:var(--blm-txt-light-a);--blm-tabs-bd-bottom-clr:hsla(var(--blm-tabs-bd-bottom-clr-h), var(--blm-tabs-bd-bottom-clr-s), var(--blm-tabs-bd-bottom-clr-l), var(--blm-tabs-bd-bottom-clr-a));--blm-tabs-bd-bottom-clr-h:var(--blm-bd-h);--blm-tabs-bd-bottom-clr-s:var(--blm-bd-s);--blm-tabs-bd-bottom-clr-l:var(--blm-bd-l);--blm-tabs-bd-bottom-clr-a:var(--blm-bd-a);--blm-tabs-bd-bottom-style:solid;--blm-tabs-bd-bottom-width:1px;--blm-tabs-link-clr:hsla(var(--blm-tabs-link-clr-h), var(--blm-tabs-link-clr-s), var(--blm-tabs-link-clr-l), var(--blm-tabs-link-clr-a));--blm-tabs-link-clr-h:var(--blm-txt-h);--blm-tabs-link-clr-s:var(--blm-txt-s);--blm-tabs-link-clr-l:var(--blm-txt-l);--blm-tabs-link-clr-a:var(--blm-txt-a);--blm-tabs-link-p:0.5em 1em;--blm-tabs-link-hov-bd-bottom-clr:hsla(var(--blm-tabs-link-hov-bd-bottom-clr-h), var(--blm-tabs-link-hov-bd-bottom-clr-s), var(--blm-tabs-link-hov-bd-bottom-clr-l), var(--blm-tabs-link-hov-bd-bottom-clr-a));--blm-tabs-link-hov-bd-bottom-clr-h:var(--blm-txt-strong-h);--blm-tabs-link-hov-bd-bottom-clr-s:var(--blm-txt-strong-s);--blm-tabs-link-hov-bd-bottom-clr-l:var(--blm-txt-strong-l);--blm-tabs-link-hov-bd-bottom-clr-a:var(--blm-txt-strong-a);--blm-tabs-link-hov-clr:hsla(var(--blm-tabs-link-hov-clr-h), var(--blm-tabs-link-hov-clr-s), var(--blm-tabs-link-hov-clr-l), var(--blm-tabs-link-hov-clr-a));--blm-tabs-link-hov-clr-h:var(--blm-txt-strong-h);--blm-tabs-link-hov-clr-s:var(--blm-txt-strong-s);--blm-tabs-link-hov-clr-l:var(--blm-txt-strong-l);--blm-tabs-link-hov-clr-a:var(--blm-txt-strong-a);--blm-tabs-link-act-bd-bottom-clr:hsla(var(--blm-tabs-link-act-bd-bottom-clr-h), var(--blm-tabs-link-act-bd-bottom-clr-s), var(--blm-tabs-link-act-bd-bottom-clr-l), var(--blm-tabs-link-act-bd-bottom-clr-a));--blm-tabs-link-act-bd-bottom-clr-h:var(--blm-link-h);--blm-tabs-link-act-bd-bottom-clr-s:var(--blm-link-s);--blm-tabs-link-act-bd-bottom-clr-l:var(--blm-link-l);--blm-tabs-link-act-bd-bottom-clr-a:var(--blm-link-a);--blm-tabs-link-act-clr:hsla(var(--blm-tabs-link-act-clr-h), var(--blm-tabs-link-act-clr-s), var(--blm-tabs-link-act-clr-l), var(--blm-tabs-link-act-clr-a));--blm-tabs-link-act-clr-h:var(--blm-link-h);--blm-tabs-link-act-clr-s:var(--blm-link-s);--blm-tabs-link-act-clr-l:var(--blm-link-l);--blm-tabs-link-act-clr-a:var(--blm-link-a);--blm-tabs-boxed-link-radius:var(--blm-radius);--blm-tabs-boxed-link-hov-bg-clr:hsla(var(--blm-tabs-boxed-link-hov-bg-clr-h), var(--blm-tabs-boxed-link-hov-bg-clr-s), var(--blm-tabs-boxed-link-hov-bg-clr-l), var(--blm-tabs-boxed-link-hov-bg-clr-a));--blm-tabs-boxed-link-hov-bg-clr-h:var(--blm-bg-h);--blm-tabs-boxed-link-hov-bg-clr-s:var(--blm-bg-s);--blm-tabs-boxed-link-hov-bg-clr-l:var(--blm-bg-l);--blm-tabs-boxed-link-hov-bg-clr-a:var(--blm-bg-a);--blm-tabs-boxed-link-hov-bd-bottom-clr:hsla(var(--blm-tabs-boxed-link-hov-bd-bottom-clr-h), var(--blm-tabs-boxed-link-hov-bd-bottom-clr-s), var(--blm-tabs-boxed-link-hov-bd-bottom-clr-l), var(--blm-tabs-boxed-link-hov-bd-bottom-clr-a));--blm-tabs-boxed-link-hov-bd-bottom-clr-h:var(--blm-bd-h);--blm-tabs-boxed-link-hov-bd-bottom-clr-s:var(--blm-bd-s);--blm-tabs-boxed-link-hov-bd-bottom-clr-l:var(--blm-bd-l);--blm-tabs-boxed-link-hov-bd-bottom-clr-a:var(--blm-bd-a);--blm-tabs-boxed-link-act-bg-clr:hsla(var(--blm-tabs-boxed-link-act-bg-clr-h), var(--blm-tabs-boxed-link-act-bg-clr-s), var(--blm-tabs-boxed-link-act-bg-clr-l), var(--blm-tabs-boxed-link-act-bg-clr-a));--blm-tabs-boxed-link-act-bg-clr-h:var(--blm-sch-main-h);--blm-tabs-boxed-link-act-bg-clr-s:var(--blm-sch-main-s);--blm-tabs-boxed-link-act-bg-clr-l:var(--blm-sch-main-l);--blm-tabs-boxed-link-act-bg-clr-a:var(--blm-sch-main-a);--blm-tabs-boxed-link-act-bd-clr:hsla(var(--blm-tabs-boxed-link-act-bd-clr-h), var(--blm-tabs-boxed-link-act-bd-clr-s), var(--blm-tabs-boxed-link-act-bd-clr-l), var(--blm-tabs-boxed-link-act-bd-clr-a));--blm-tabs-boxed-link-act-bd-clr-h:var(--blm-bd-h);--blm-tabs-boxed-link-act-bd-clr-s:var(--blm-bd-s);--blm-tabs-boxed-link-act-bd-clr-l:var(--blm-bd-l);--blm-tabs-boxed-link-act-bd-clr-a:var(--blm-bd-a);--blm-tabs-boxed-link-act-bd-bottom-clr:hsla(var(--blm-tabs-boxed-link-act-bd-bottom-clr-h), var(--blm-tabs-boxed-link-act-bd-bottom-clr-s), var(--blm-tabs-boxed-link-act-bd-bottom-clr-l), var(--blm-tabs-boxed-link-act-bd-bottom-clr-a));--blm-tabs-boxed-link-act-bd-bottom-clr-h:0;--blm-tabs-boxed-link-act-bd-bottom-clr-s:0%;--blm-tabs-boxed-link-act-bd-bottom-clr-l:0%;--blm-tabs-boxed-link-act-bd-bottom-clr-a:0;--blm-tabs-tgl-link-bd-clr:hsla(var(--blm-tabs-tgl-link-bd-clr-h), var(--blm-tabs-tgl-link-bd-clr-s), var(--blm-tabs-tgl-link-bd-clr-l), var(--blm-tabs-tgl-link-bd-clr-a));--blm-tabs-tgl-link-bd-clr-h:var(--blm-bd-h);--blm-tabs-tgl-link-bd-clr-s:var(--blm-bd-s);--blm-tabs-tgl-link-bd-clr-l:var(--blm-bd-l);--blm-tabs-tgl-link-bd-clr-a:var(--blm-bd-a);--blm-tabs-tgl-link-bd-style:solid;--blm-tabs-tgl-link-bd-width:1px;--blm-tabs-tgl-link-hov-bg-clr:hsla(var(--blm-tabs-tgl-link-hov-bg-clr-h), var(--blm-tabs-tgl-link-hov-bg-clr-s), var(--blm-tabs-tgl-link-hov-bg-clr-l), var(--blm-tabs-tgl-link-hov-bg-clr-a));--blm-tabs-tgl-link-hov-bg-clr-h:var(--blm-bg-h);--blm-tabs-tgl-link-hov-bg-clr-s:var(--blm-bg-s);--blm-tabs-tgl-link-hov-bg-clr-l:var(--blm-bg-l);--blm-tabs-tgl-link-hov-bg-clr-a:var(--blm-bg-a);--blm-tabs-tgl-link-hov-bd-clr:hsla(var(--blm-tabs-tgl-link-hov-bd-clr-h), var(--blm-tabs-tgl-link-hov-bd-clr-s), var(--blm-tabs-tgl-link-hov-bd-clr-l), var(--blm-tabs-tgl-link-hov-bd-clr-a));--blm-tabs-tgl-link-hov-bd-clr-h:var(--blm-bd-hov-h);--blm-tabs-tgl-link-hov-bd-clr-s:var(--blm-bd-hov-s);--blm-tabs-tgl-link-hov-bd-clr-l:var(--blm-bd-hov-l);--blm-tabs-tgl-link-hov-bd-clr-a:var(--blm-bd-hov-a);--blm-tabs-tgl-link-radius:var(--blm-radius);--blm-tabs-tgl-link-act-bg-clr:hsla(var(--blm-tabs-tgl-link-act-bg-clr-h), var(--blm-tabs-tgl-link-act-bg-clr-s), var(--blm-tabs-tgl-link-act-bg-clr-l), var(--blm-tabs-tgl-link-act-bg-clr-a));--blm-tabs-tgl-link-act-bg-clr-h:var(--blm-link-h);--blm-tabs-tgl-link-act-bg-clr-s:var(--blm-link-s);--blm-tabs-tgl-link-act-bg-clr-l:var(--blm-link-l);--blm-tabs-tgl-link-act-bg-clr-a:var(--blm-link-a);--blm-tabs-tgl-link-act-bd-clr:hsla(var(--blm-tabs-tgl-link-act-bd-clr-h), var(--blm-tabs-tgl-link-act-bd-clr-s), var(--blm-tabs-tgl-link-act-bd-clr-l), var(--blm-tabs-tgl-link-act-bd-clr-a));--blm-tabs-tgl-link-act-bd-clr-h:var(--blm-link-h);--blm-tabs-tgl-link-act-bd-clr-s:var(--blm-link-s);--blm-tabs-tgl-link-act-bd-clr-l:var(--blm-link-l);--blm-tabs-tgl-link-act-bd-clr-a:var(--blm-link-a);--blm-tabs-tgl-link-act-clr:hsla(var(--blm-tabs-tgl-link-act-clr-h), var(--blm-tabs-tgl-link-act-clr-s), var(--blm-tabs-tgl-link-act-clr-l), var(--blm-tabs-tgl-link-act-clr-a));--blm-tabs-tgl-link-act-clr-h:var(--blm-link-inv-h);--blm-tabs-tgl-link-act-clr-s:var(--blm-link-inv-s);--blm-tabs-tgl-link-act-clr-l:var(--blm-link-inv-l);--blm-tabs-tgl-link-act-clr-a:var(--blm-link-inv-a);--blm-column-gap:0.75rem;--blm-tile-spacing:0.75rem;--blm-weight-light:300;--blm-weight-medium:500;--blm-family-secondary:var(--blm-family-sans-serif);--blm-hero-body-p-small:1.5rem;--blm-hero-body-p-medium:9rem 1.5rem;--blm-hero-body-p-lg:18rem 1.5rem;--blm-hero-body-p:3rem 1.5rem;--blm-sct-p:3rem 1.5rem;--blm-sct-p-medium:9rem 1.5rem;--blm-sct-p-lg:18rem 1.5rem;--blm-ft-bg-clr:hsla(var(--blm-ft-bg-clr-h), var(--blm-ft-bg-clr-s), var(--blm-ft-bg-clr-l), var(--blm-ft-bg-clr-a));--blm-ft-bg-clr-h:var(--blm-sch-main-bis-h);--blm-ft-bg-clr-s:var(--blm-sch-main-bis-s);--blm-ft-bg-clr-l:var(--blm-sch-main-bis-l);--blm-ft-bg-clr-a:var(--blm-sch-main-bis-a);--blm-ft-p:3rem 1.5rem 6rem;--blm-ft-clr:inherit}
/*! bulma.io v0.9.0 | MIT License | github.com/jgthms/bulma */@keyframes spinAround{from{transform:rotate(0)}to{transform:rotate(359deg)}}.button{-moz-appearance:none;-webkit-appearance:none;align-items:center;border:var(--blm-ctrl-bd-width) solid transparent;border-radius:var(--blm-ctrl-radius);box-shadow:none;display:inline-flex;font-size:var(--blm-s-normal);height:var(--blm-ctrl-height);justify-content:flex-start;line-height:var(--blm-ctrl-line-height);padding:var(--blm-ctrl-p-vertical) var(--blm-ctrl-p-horizontal);position:relative;vertical-align:top}.button:active,.button:focus,.is-active.button,.is-focused.button{outline:0}.button{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.button.is-loading::after{-webkit-animation:.5s linear infinite spinAround;animation:.5s linear infinite spinAround;border:2px solid var(--blm-grey-lighter);border-radius:var(--blm-radius-rounded);border-right-color:transparent;border-top-color:transparent;content:\\"\\";display:block;height:1em;position:relative;width:1em}/*! minireset.css v0.0.6 | MIT License | github.com/jgthms/minireset.css */button{margin:0}*,::after,::before{box-sizing:inherit}button{font-family:var(--blm-family-prim)}.button{background-color:var(--blm-bt-bg-clr);border-color:var(--blm-bt-bd-clr);border-width:var(--blm-bt-bd-width);color:var(--blm-bt-clr);cursor:pointer;font-family:var(--blm-bt-family);justify-content:center;padding:var(--blm-bt-p-vertical) var(--blm-bt-p-horizontal);text-align:center;white-space:nowrap}.button.is-hovered,.button:hover{border-color:var(--blm-bt-hov-bd-clr);color:var(--blm-bt-hov-clr)}.button.is-focused,.button:focus{border-color:var(--blm-bt-foc-bd-clr);color:var(--blm-bt-foc-clr)}.button.is-focused:not(:active),.button:focus:not(:active){box-shadow:var(--blm-bt-foc-box-shadow-s) var(--blm-bt-foc-box-shadow-clr)}.button.is-active,.button:active{border-color:var(--blm-bt-act-bd-clr);color:var(--blm-bt-act-clr)}.button.is-primary{background-color:var(--blm-prim);border-color:transparent;color:var(--blm-prim-inv)}.button.is-primary.is-hovered,.button.is-primary:hover{background-color:hsla(var(--blm-prim-h),var(--blm-prim-s),calc(var(--blm-prim-l) - 2.5%),var(--blm-prim-a));border-color:transparent;color:var(--blm-prim-inv)}.button.is-primary.is-focused,.button.is-primary:focus{border-color:transparent;color:var(--blm-prim-inv)}.button.is-primary.is-focused:not(:active),.button.is-primary:focus:not(:active){box-shadow:var(--blm-bt-foc-box-shadow-s) hsla(var(--blm-prim-h),var(--blm-prim-s),var(--blm-prim-l),.25)}.button.is-primary.is-active,.button.is-primary:active{background-color:hsla(var(--blm-prim-h),var(--blm-prim-s),calc(var(--blm-prim-l) - 5%),var(--blm-prim-a));border-color:transparent;color:var(--blm-prim-inv)}.button.is-primary.is-inverted{background-color:var(--blm-prim-inv);color:var(--blm-prim)}.button.is-primary.is-inverted.is-hovered,.button.is-primary.is-inverted:hover{background-color:hsla(var(--blm-prim-inv-h),var(--blm-prim-inv-s),calc(var(--blm-prim-inv-l) - 5%),var(--blm-prim-inv-a))}.button.is-primary.is-loading::after{border-color:transparent transparent var(--blm-prim-inv) var(--blm-prim-inv)!important}.button.is-primary.is-outlined{background-color:transparent;border-color:var(--blm-prim);color:var(--blm-prim)}.button.is-primary.is-outlined.is-focused,.button.is-primary.is-outlined.is-hovered,.button.is-primary.is-outlined:focus,.button.is-primary.is-outlined:hover{background-color:var(--blm-prim);border-color:var(--blm-prim);color:var(--blm-prim-inv)}.button.is-primary.is-outlined.is-loading::after{border-color:transparent transparent var(--blm-prim) var(--blm-prim)!important}.button.is-primary.is-outlined.is-loading.is-focused::after,.button.is-primary.is-outlined.is-loading.is-hovered::after,.button.is-primary.is-outlined.is-loading:focus::after,.button.is-primary.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-prim-inv) var(--blm-prim-inv)!important}.button.is-primary.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-prim-inv);color:var(--blm-prim-inv)}.button.is-primary.is-inverted.is-outlined.is-focused,.button.is-primary.is-inverted.is-outlined.is-hovered,.button.is-primary.is-inverted.is-outlined:focus,.button.is-primary.is-inverted.is-outlined:hover{background-color:var(--blm-prim-inv);color:var(--blm-prim)}.button.is-primary.is-inverted.is-outlined.is-loading.is-focused::after,.button.is-primary.is-inverted.is-outlined.is-loading.is-hovered::after,.button.is-primary.is-inverted.is-outlined.is-loading:focus::after,.button.is-primary.is-inverted.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-prim) var(--blm-prim)!important}.button.is-success{background-color:var(--blm-sucs);border-color:transparent;color:var(--blm-sucs-inv)}.button.is-success.is-hovered,.button.is-success:hover{background-color:hsla(var(--blm-sucs-h),var(--blm-sucs-s),calc(var(--blm-sucs-l) - 2.5%),var(--blm-sucs-a));border-color:transparent;color:var(--blm-sucs-inv)}.button.is-success.is-focused,.button.is-success:focus{border-color:transparent;color:var(--blm-sucs-inv)}.button.is-success.is-focused:not(:active),.button.is-success:focus:not(:active){box-shadow:var(--blm-bt-foc-box-shadow-s) hsla(var(--blm-sucs-h),var(--blm-sucs-s),var(--blm-sucs-l),.25)}.button.is-success.is-active,.button.is-success:active{background-color:hsla(var(--blm-sucs-h),var(--blm-sucs-s),calc(var(--blm-sucs-l) - 5%),var(--blm-sucs-a));border-color:transparent;color:var(--blm-sucs-inv)}.button.is-success.is-inverted{background-color:var(--blm-sucs-inv);color:var(--blm-sucs)}.button.is-success.is-inverted.is-hovered,.button.is-success.is-inverted:hover{background-color:hsla(var(--blm-sucs-inv-h),var(--blm-sucs-inv-s),calc(var(--blm-sucs-inv-l) - 5%),var(--blm-sucs-inv-a))}.button.is-success.is-loading::after{border-color:transparent transparent var(--blm-sucs-inv) var(--blm-sucs-inv)!important}.button.is-success.is-outlined{background-color:transparent;border-color:var(--blm-sucs);color:var(--blm-sucs)}.button.is-success.is-outlined.is-focused,.button.is-success.is-outlined.is-hovered,.button.is-success.is-outlined:focus,.button.is-success.is-outlined:hover{background-color:var(--blm-sucs);border-color:var(--blm-sucs);color:var(--blm-sucs-inv)}.button.is-success.is-outlined.is-loading::after{border-color:transparent transparent var(--blm-sucs) var(--blm-sucs)!important}.button.is-success.is-outlined.is-loading.is-focused::after,.button.is-success.is-outlined.is-loading.is-hovered::after,.button.is-success.is-outlined.is-loading:focus::after,.button.is-success.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-sucs-inv) var(--blm-sucs-inv)!important}.button.is-success.is-inverted.is-outlined{background-color:transparent;border-color:var(--blm-sucs-inv);color:var(--blm-sucs-inv)}.button.is-success.is-inverted.is-outlined.is-focused,.button.is-success.is-inverted.is-outlined.is-hovered,.button.is-success.is-inverted.is-outlined:focus,.button.is-success.is-inverted.is-outlined:hover{background-color:var(--blm-sucs-inv);color:var(--blm-sucs)}.button.is-success.is-inverted.is-outlined.is-loading.is-focused::after,.button.is-success.is-inverted.is-outlined.is-loading.is-hovered::after,.button.is-success.is-inverted.is-outlined.is-loading:focus::after,.button.is-success.is-inverted.is-outlined.is-loading:hover::after{border-color:transparent transparent var(--blm-sucs) var(--blm-sucs)!important}.button.is-fullwidth{display:flex;width:100%}.button.is-loading{color:transparent!important;pointer-events:none}.button.is-loading::after{left:calc(50% - .5em);top:calc(50% - .5em);position:absolute!important}.button.is-rounded{border-radius:var(--blm-radius-rounded);padding-left:calc(var(--blm-bt-p-horizontal) + .25em);padding-right:1.25em}@keyframes moveIndeterminate{from{background-position:200% 0}to{background-position:-200% 0}}.label{color:var(--blm-label-clr);display:block;font-size:var(--blm-s-normal);font-weight:var(--blm-label-weight)}.label:not(:last-child){margin-bottom:.5em}.field:not(:last-child){margin-bottom:.75rem}:root{--blm-turquoise:hsla(var(--blm-turquoise-h), var(--blm-turquoise-s), var(--blm-turquoise-l), var(--blm-turquoise-a));--blm-turquoise-h:171;--blm-turquoise-s:100%;--blm-turquoise-l:41%;--blm-turquoise-a:1;--blm-cyan:hsla(var(--blm-cyan-h), var(--blm-cyan-s), var(--blm-cyan-l), var(--blm-cyan-a));--blm-cyan-h:204;--blm-cyan-s:71%;--blm-cyan-l:53%;--blm-cyan-a:1;--blm-green:hsla(var(--blm-green-h), var(--blm-green-s), var(--blm-green-l), var(--blm-green-a));--blm-green-h:141;--blm-green-s:53%;--blm-green-l:53%;--blm-green-a:1;--blm-yellow:hsla(var(--blm-yellow-h), var(--blm-yellow-s), var(--blm-yellow-l), var(--blm-yellow-a));--blm-yellow-h:48;--blm-yellow-s:100%;--blm-yellow-l:67%;--blm-yellow-a:1;--blm-red:hsla(var(--blm-red-h), var(--blm-red-s), var(--blm-red-l), var(--blm-red-a));--blm-red-h:348;--blm-red-s:86%;--blm-red-l:61%;--blm-red-a:1;--blm-white-ter:hsla(var(--blm-white-ter-h), var(--blm-white-ter-s), var(--blm-white-ter-l), var(--blm-white-ter-a));--blm-white-ter-h:0;--blm-white-ter-s:0%;--blm-white-ter-l:96%;--blm-white-ter-a:1;--blm-grey-darker:hsla(var(--blm-grey-darker-h), var(--blm-grey-darker-s), var(--blm-grey-darker-l), var(--blm-grey-darker-a));--blm-grey-darker-h:0;--blm-grey-darker-s:0%;--blm-grey-darker-l:21%;--blm-grey-darker-a:1;--blm-orange:hsla(var(--blm-orange-h), var(--blm-orange-s), var(--blm-orange-l), var(--blm-orange-a));--blm-orange-h:14;--blm-orange-s:100%;--blm-orange-l:53%;--blm-orange-a:1;--blm-blue:hsla(var(--blm-blue-h), var(--blm-blue-s), var(--blm-blue-l), var(--blm-blue-a));--blm-blue-h:217;--blm-blue-s:71%;--blm-blue-l:53%;--blm-blue-a:1;--blm-purple:hsla(var(--blm-purple-h), var(--blm-purple-s), var(--blm-purple-l), var(--blm-purple-a));--blm-purple-h:271;--blm-purple-s:100%;--blm-purple-l:71%;--blm-purple-a:1;--blm-prim:hsla(var(--blm-prim-h), var(--blm-prim-s), var(--blm-prim-l), var(--blm-prim-a));--blm-prim-h:var(--blm-turquoise-h);--blm-prim-s:var(--blm-turquoise-s);--blm-prim-l:var(--blm-turquoise-l);--blm-prim-a:var(--blm-turquoise-a);--blm-info:hsla(var(--blm-info-h), var(--blm-info-s), var(--blm-info-l), var(--blm-info-a));--blm-info-h:var(--blm-cyan-h);--blm-info-s:var(--blm-cyan-s);--blm-info-l:var(--blm-cyan-l);--blm-info-a:var(--blm-cyan-a);--blm-sucs:hsla(var(--blm-sucs-h), var(--blm-sucs-s), var(--blm-sucs-l), var(--blm-sucs-a));--blm-sucs-h:var(--blm-green-h);--blm-sucs-s:var(--blm-green-s);--blm-sucs-l:var(--blm-green-l);--blm-sucs-a:var(--blm-green-a);--blm-warn:hsla(var(--blm-warn-h), var(--blm-warn-s), var(--blm-warn-l), var(--blm-warn-a));--blm-warn-h:var(--blm-yellow-h);--blm-warn-s:var(--blm-yellow-s);--blm-warn-l:var(--blm-yellow-l);--blm-warn-a:var(--blm-yellow-a);--blm-dang:hsla(var(--blm-dang-h), var(--blm-dang-s), var(--blm-dang-l), var(--blm-dang-a));--blm-dang-h:var(--blm-red-h);--blm-dang-s:var(--blm-red-s);--blm-dang-l:var(--blm-red-l);--blm-dang-a:var(--blm-red-a);--blm-light:hsla(var(--blm-light-h), var(--blm-light-s), var(--blm-light-l), var(--blm-light-a));--blm-light-h:var(--blm-white-ter-h);--blm-light-s:var(--blm-white-ter-s);--blm-light-l:var(--blm-white-ter-l);--blm-light-a:var(--blm-white-ter-a);--blm-dark:hsla(var(--blm-dark-h), var(--blm-dark-s), var(--blm-dark-l), var(--blm-dark-a));--blm-dark-h:var(--blm-grey-darker-h);--blm-dark-s:var(--blm-grey-darker-s);--blm-dark-l:var(--blm-grey-darker-l);--blm-dark-a:var(--blm-grey-darker-a);--blm-black:hsla(var(--blm-black-h), var(--blm-black-s), var(--blm-black-l), var(--blm-black-a));--blm-black-h:0;--blm-black-s:0%;--blm-black-l:4%;--blm-black-a:1;--blm-white:hsla(var(--blm-white-h), var(--blm-white-s), var(--blm-white-l), var(--blm-white-a));--blm-white-h:0;--blm-white-s:0%;--blm-white-l:100%;--blm-white-a:1;--blm-white-bis:hsla(var(--blm-white-bis-h), var(--blm-white-bis-s), var(--blm-white-bis-l), var(--blm-white-bis-a));--blm-white-bis-h:0;--blm-white-bis-s:0%;--blm-white-bis-l:98%;--blm-white-bis-a:1;--blm-black-bis:hsla(var(--blm-black-bis-h), var(--blm-black-bis-s), var(--blm-black-bis-l), var(--blm-black-bis-a));--blm-black-bis-h:0;--blm-black-bis-s:0%;--blm-black-bis-l:7%;--blm-black-bis-a:1;--blm-black-ter:hsla(var(--blm-black-ter-h), var(--blm-black-ter-s), var(--blm-black-ter-l), var(--blm-black-ter-a));--blm-black-ter-h:0;--blm-black-ter-s:0%;--blm-black-ter-l:14%;--blm-black-ter-a:1;--blm-grey-lighter:hsla(var(--blm-grey-lighter-h), var(--blm-grey-lighter-s), var(--blm-grey-lighter-l), var(--blm-grey-lighter-a));--blm-grey-lighter-h:0;--blm-grey-lighter-s:0%;--blm-grey-lighter-l:86%;--blm-grey-lighter-a:1;--blm-grey-light:hsla(var(--blm-grey-light-h), var(--blm-grey-light-s), var(--blm-grey-light-l), var(--blm-grey-light-a));--blm-grey-light-h:0;--blm-grey-light-s:0%;--blm-grey-light-l:71%;--blm-grey-light-a:1;--blm-grey-lightest:hsla(var(--blm-grey-lightest-h), var(--blm-grey-lightest-s), var(--blm-grey-lightest-l), var(--blm-grey-lightest-a));--blm-grey-lightest-h:0;--blm-grey-lightest-s:0%;--blm-grey-lightest-l:93%;--blm-grey-lightest-a:1;--blm-grey-dark:hsla(var(--blm-grey-dark-h), var(--blm-grey-dark-s), var(--blm-grey-dark-l), var(--blm-grey-dark-a));--blm-grey-dark-h:0;--blm-grey-dark-s:0%;--blm-grey-dark-l:29%;--blm-grey-dark-a:1;--blm-txt:hsla(var(--blm-txt-h), var(--blm-txt-s), var(--blm-txt-l), var(--blm-txt-a));--blm-txt-h:var(--blm-grey-dark-h);--blm-txt-s:var(--blm-grey-dark-s);--blm-txt-l:var(--blm-grey-dark-l);--blm-txt-a:var(--blm-grey-dark-a);--blm-grey:hsla(var(--blm-grey-h), var(--blm-grey-s), var(--blm-grey-l), var(--blm-grey-a));--blm-grey-h:0;--blm-grey-s:0%;--blm-grey-l:48%;--blm-grey-a:1;--blm-bg:hsla(var(--blm-bg-h), var(--blm-bg-s), var(--blm-bg-l), var(--blm-bg-a));--blm-bg-h:var(--blm-white-ter-h);--blm-bg-s:var(--blm-white-ter-s);--blm-bg-l:var(--blm-white-ter-l);--blm-bg-a:var(--blm-white-ter-a);--blm-link:hsla(var(--blm-link-h), var(--blm-link-s), var(--blm-link-l), var(--blm-link-a));--blm-link-h:var(--blm-blue-h);--blm-link-s:var(--blm-blue-s);--blm-link-l:var(--blm-blue-l);--blm-link-a:var(--blm-blue-a);--blm-family-sans-serif:BlinkMacSystemFont,-apple-system,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Helvetica,Arial,sans-serif;--blm-family-monospace:monospace;--blm-s-7:0.75rem;--blm-s-6:1rem;--blm-s-5:1.25rem;--blm-s-4:1.5rem;--blm-s-1:3rem;--blm-s-2:2.5rem;--blm-s-3:2rem;--blm-radius:4px;--blm-radius-small:2px;--blm-ctrl-bd-width:1px;--blm-ctrl-radius:var(--blm-radius);--blm-s-normal:var(--blm-s-6);--blm-ctrl-height:2.5em;--blm-ctrl-line-height:1.5;--blm-ctrl-p-vertical:calc(0.5em - var(--blm-ctrl-bd-width));--blm-ctrl-p-horizontal:calc(0.75em - var(--blm-ctrl-bd-width));--blm-sch-inv:hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), var(--blm-sch-inv-a));--blm-sch-inv-h:var(--blm-black-h);--blm-sch-inv-s:var(--blm-black-s);--blm-sch-inv-l:var(--blm-black-l);--blm-sch-inv-a:var(--blm-black-a);--blm-radius-rounded:290486px;--blm-sch-main:hsla(var(--blm-sch-main-h), var(--blm-sch-main-s), var(--blm-sch-main-l), var(--blm-sch-main-a));--blm-sch-main-h:var(--blm-white-h);--blm-sch-main-s:var(--blm-white-s);--blm-sch-main-l:var(--blm-white-l);--blm-sch-main-a:var(--blm-white-a);--blm-family-prim:var(--blm-family-sans-serif);--blm-weight-normal:400;--blm-family-code:var(--blm-family-monospace);--blm-txt-strong:hsla(var(--blm-txt-strong-h), var(--blm-txt-strong-s), var(--blm-txt-strong-l), var(--blm-txt-strong-a));--blm-txt-strong-h:var(--blm-grey-darker-h);--blm-txt-strong-s:var(--blm-grey-darker-s);--blm-txt-strong-l:var(--blm-grey-darker-l);--blm-txt-strong-a:var(--blm-grey-darker-a);--blm-weight-bold:700;--blm-radius-lg:6px;--blm-box-bg-clr:hsla(var(--blm-box-bg-clr-h), var(--blm-box-bg-clr-s), var(--blm-box-bg-clr-l), var(--blm-box-bg-clr-a));--blm-box-bg-clr-h:var(--blm-sch-main-h);--blm-box-bg-clr-s:var(--blm-sch-main-s);--blm-box-bg-clr-l:var(--blm-sch-main-l);--blm-box-bg-clr-a:var(--blm-sch-main-a);--blm-box-radius:var(--blm-radius-lg);--blm-box-shadow:0 0.5em 1em -0.125em hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.1),0 0px 0 1px hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.02);--blm-box-clr:hsla(var(--blm-box-clr-h), var(--blm-box-clr-s), var(--blm-box-clr-l), var(--blm-box-clr-a));--blm-box-clr-h:var(--blm-txt-h);--blm-box-clr-s:var(--blm-txt-s);--blm-box-clr-l:var(--blm-txt-l);--blm-box-clr-a:var(--blm-txt-a);--blm-box-p:1.25rem;--blm-box-link-hov-shadow:0 0.5em 1em -0.125em hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.1),0 0 0 1px var(--blm-link);--blm-box-link-act-shadow:inset 0 1px 2px hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.2),0 0 0 1px var(--blm-link);--blm-bd:hsla(var(--blm-bd-h), var(--blm-bd-s), var(--blm-bd-l), var(--blm-bd-a));--blm-bd-h:var(--blm-grey-lighter-h);--blm-bd-s:var(--blm-grey-lighter-s);--blm-bd-l:var(--blm-grey-lighter-l);--blm-bd-a:var(--blm-grey-lighter-a);--blm-bt-bd-width:var(--blm-ctrl-bd-width);--blm-link-hov:hsla(var(--blm-link-hov-h), var(--blm-link-hov-s), var(--blm-link-hov-l), var(--blm-link-hov-a));--blm-link-hov-h:var(--blm-grey-darker-h);--blm-link-hov-s:var(--blm-grey-darker-s);--blm-link-hov-l:var(--blm-grey-darker-l);--blm-link-hov-a:var(--blm-grey-darker-a);--blm-link-hov-bd:hsla(var(--blm-link-hov-bd-h), var(--blm-link-hov-bd-s), var(--blm-link-hov-bd-l), var(--blm-link-hov-bd-a));--blm-link-hov-bd-h:var(--blm-grey-light-h);--blm-link-hov-bd-s:var(--blm-grey-light-s);--blm-link-hov-bd-l:var(--blm-grey-light-l);--blm-link-hov-bd-a:var(--blm-grey-light-a);--blm-link-foc:hsla(var(--blm-link-foc-h), var(--blm-link-foc-s), var(--blm-link-foc-l), var(--blm-link-foc-a));--blm-link-foc-h:var(--blm-grey-darker-h);--blm-link-foc-s:var(--blm-grey-darker-s);--blm-link-foc-l:var(--blm-grey-darker-l);--blm-link-foc-a:var(--blm-grey-darker-a);--blm-link-foc-bd:hsla(var(--blm-link-foc-bd-h), var(--blm-link-foc-bd-s), var(--blm-link-foc-bd-l), var(--blm-link-foc-bd-a));--blm-link-foc-bd-h:var(--blm-blue-h);--blm-link-foc-bd-s:var(--blm-blue-s);--blm-link-foc-bd-l:var(--blm-blue-l);--blm-link-foc-bd-a:var(--blm-blue-a);--blm-link-act:hsla(var(--blm-link-act-h), var(--blm-link-act-s), var(--blm-link-act-l), var(--blm-link-act-a));--blm-link-act-h:var(--blm-grey-darker-h);--blm-link-act-s:var(--blm-grey-darker-s);--blm-link-act-l:var(--blm-grey-darker-l);--blm-link-act-a:var(--blm-grey-darker-a);--blm-link-act-bd:hsla(var(--blm-link-act-bd-h), var(--blm-link-act-bd-s), var(--blm-link-act-bd-l), var(--blm-link-act-bd-a));--blm-link-act-bd-h:var(--blm-grey-dark-h);--blm-link-act-bd-s:var(--blm-grey-dark-s);--blm-link-act-bd-l:var(--blm-grey-dark-l);--blm-link-act-bd-a:var(--blm-grey-dark-a);--blm-txt-light:hsla(var(--blm-txt-light-h), var(--blm-txt-light-s), var(--blm-txt-light-l), var(--blm-txt-light-a));--blm-txt-light-h:var(--blm-grey-h);--blm-txt-light-s:var(--blm-grey-s);--blm-txt-light-l:var(--blm-grey-l);--blm-txt-light-a:var(--blm-grey-a);--blm-sch-main-ter:hsla(var(--blm-sch-main-ter-h), var(--blm-sch-main-ter-s), var(--blm-sch-main-ter-l), var(--blm-sch-main-ter-a));--blm-sch-main-ter-h:var(--blm-white-ter-h);--blm-sch-main-ter-s:var(--blm-white-ter-s);--blm-sch-main-ter-l:var(--blm-white-ter-l);--blm-sch-main-ter-a:var(--blm-white-ter-a);--blm-bt-bg-clr:hsla(var(--blm-bt-bg-clr-h), var(--blm-bt-bg-clr-s), var(--blm-bt-bg-clr-l), var(--blm-bt-bg-clr-a));--blm-bt-bg-clr-h:var(--blm-sch-main-h);--blm-bt-bg-clr-s:var(--blm-sch-main-s);--blm-bt-bg-clr-l:var(--blm-sch-main-l);--blm-bt-bg-clr-a:var(--blm-sch-main-a);--blm-bt-bd-clr:hsla(var(--blm-bt-bd-clr-h), var(--blm-bt-bd-clr-s), var(--blm-bt-bd-clr-l), var(--blm-bt-bd-clr-a));--blm-bt-bd-clr-h:var(--blm-bd-h);--blm-bt-bd-clr-s:var(--blm-bd-s);--blm-bt-bd-clr-l:var(--blm-bd-l);--blm-bt-bd-clr-a:var(--blm-bd-a);--blm-bt-clr:hsla(var(--blm-bt-clr-h), var(--blm-bt-clr-s), var(--blm-bt-clr-l), var(--blm-bt-clr-a));--blm-bt-clr-h:var(--blm-txt-strong-h);--blm-bt-clr-s:var(--blm-txt-strong-s);--blm-bt-clr-l:var(--blm-txt-strong-l);--blm-bt-clr-a:var(--blm-txt-strong-a);--blm-bt-family:inherit;--blm-bt-p-vertical:calc(0.5em - var(--blm-bt-bd-width));--blm-bt-p-horizontal:1em;--blm-bt-hov-bd-clr:hsla(var(--blm-bt-hov-bd-clr-h), var(--blm-bt-hov-bd-clr-s), var(--blm-bt-hov-bd-clr-l), var(--blm-bt-hov-bd-clr-a));--blm-bt-hov-bd-clr-h:var(--blm-link-hov-bd-h);--blm-bt-hov-bd-clr-s:var(--blm-link-hov-bd-s);--blm-bt-hov-bd-clr-l:var(--blm-link-hov-bd-l);--blm-bt-hov-bd-clr-a:var(--blm-link-hov-bd-a);--blm-bt-hov-clr:hsla(var(--blm-bt-hov-clr-h), var(--blm-bt-hov-clr-s), var(--blm-bt-hov-clr-l), var(--blm-bt-hov-clr-a));--blm-bt-hov-clr-h:var(--blm-link-hov-h);--blm-bt-hov-clr-s:var(--blm-link-hov-s);--blm-bt-hov-clr-l:var(--blm-link-hov-l);--blm-bt-hov-clr-a:var(--blm-link-hov-a);--blm-bt-foc-bd-clr:hsla(var(--blm-bt-foc-bd-clr-h), var(--blm-bt-foc-bd-clr-s), var(--blm-bt-foc-bd-clr-l), var(--blm-bt-foc-bd-clr-a));--blm-bt-foc-bd-clr-h:var(--blm-link-foc-bd-h);--blm-bt-foc-bd-clr-s:var(--blm-link-foc-bd-s);--blm-bt-foc-bd-clr-l:var(--blm-link-foc-bd-l);--blm-bt-foc-bd-clr-a:var(--blm-link-foc-bd-a);--blm-bt-foc-clr:hsla(var(--blm-bt-foc-clr-h), var(--blm-bt-foc-clr-s), var(--blm-bt-foc-clr-l), var(--blm-bt-foc-clr-a));--blm-bt-foc-clr-h:var(--blm-link-foc-h);--blm-bt-foc-clr-s:var(--blm-link-foc-s);--blm-bt-foc-clr-l:var(--blm-link-foc-l);--blm-bt-foc-clr-a:var(--blm-link-foc-a);--blm-bt-foc-box-shadow-s:0 0 0 0.125em;--blm-bt-foc-box-shadow-clr:hsla(var(--blm-bt-foc-box-shadow-clr-h), var(--blm-bt-foc-box-shadow-clr-s), var(--blm-bt-foc-box-shadow-clr-l), var(--blm-bt-foc-box-shadow-clr-a));--blm-bt-foc-box-shadow-clr-h:var(--blm-link-h);--blm-bt-foc-box-shadow-clr-s:var(--blm-link-s);--blm-bt-foc-box-shadow-clr-l:var(--blm-link-l);--blm-bt-foc-box-shadow-clr-a:0.25;--blm-bt-act-bd-clr:hsla(var(--blm-bt-act-bd-clr-h), var(--blm-bt-act-bd-clr-s), var(--blm-bt-act-bd-clr-l), var(--blm-bt-act-bd-clr-a));--blm-bt-act-bd-clr-h:var(--blm-link-act-bd-h);--blm-bt-act-bd-clr-s:var(--blm-link-act-bd-s);--blm-bt-act-bd-clr-l:var(--blm-link-act-bd-l);--blm-bt-act-bd-clr-a:var(--blm-link-act-bd-a);--blm-bt-act-clr:hsla(var(--blm-bt-act-clr-h), var(--blm-bt-act-clr-s), var(--blm-bt-act-clr-l), var(--blm-bt-act-clr-a));--blm-bt-act-clr-h:var(--blm-link-act-h);--blm-bt-act-clr-s:var(--blm-link-act-s);--blm-bt-act-clr-l:var(--blm-link-act-l);--blm-bt-act-clr-a:var(--blm-link-act-a);--blm-bt-txt-clr:hsla(var(--blm-bt-txt-clr-h), var(--blm-bt-txt-clr-s), var(--blm-bt-txt-clr-l), var(--blm-bt-txt-clr-a));--blm-bt-txt-clr-h:var(--blm-txt-h);--blm-bt-txt-clr-s:var(--blm-txt-s);--blm-bt-txt-clr-l:var(--blm-txt-l);--blm-bt-txt-clr-a:var(--blm-txt-a);--blm-bt-txt-decoration:underline;--blm-bt-txt-hov-bg-clr:hsla(var(--blm-bt-txt-hov-bg-clr-h), var(--blm-bt-txt-hov-bg-clr-s), var(--blm-bt-txt-hov-bg-clr-l), var(--blm-bt-txt-hov-bg-clr-a));--blm-bt-txt-hov-bg-clr-h:var(--blm-bg-h);--blm-bt-txt-hov-bg-clr-s:var(--blm-bg-s);--blm-bt-txt-hov-bg-clr-l:var(--blm-bg-l);--blm-bt-txt-hov-bg-clr-a:var(--blm-bg-a);--blm-bt-txt-hov-clr:hsla(var(--blm-bt-txt-hov-clr-h), var(--blm-bt-txt-hov-clr-s), var(--blm-bt-txt-hov-clr-l), var(--blm-bt-txt-hov-clr-a));--blm-bt-txt-hov-clr-h:var(--blm-txt-strong-h);--blm-bt-txt-hov-clr-s:var(--blm-txt-strong-s);--blm-bt-txt-hov-clr-l:var(--blm-txt-strong-l);--blm-bt-txt-hov-clr-a:var(--blm-txt-strong-a);--blm-white-inv:hsla(var(--blm-white-inv-h), var(--blm-white-inv-s), var(--blm-white-inv-l), var(--blm-white-inv-a));--blm-white-inv-h:var(--blm-black-h);--blm-white-inv-s:var(--blm-black-s);--blm-white-inv-l:var(--blm-black-l);--blm-white-inv-a:var(--blm-black-a);--blm-black-inv:hsla(var(--blm-black-inv-h), var(--blm-black-inv-s), var(--blm-black-inv-l), var(--blm-black-inv-a));--blm-black-inv-h:var(--blm-white-h);--blm-black-inv-s:var(--blm-white-s);--blm-black-inv-l:var(--blm-white-l);--blm-black-inv-a:var(--blm-white-a);--blm-light-inv:hsla(var(--blm-light-inv-h), var(--blm-light-inv-s), var(--blm-light-inv-l), var(--blm-light-inv-a));--blm-light-inv-h:0;--blm-light-inv-s:0%;--blm-light-inv-l:0%;--blm-light-inv-a:0.7;--blm-dark-inv:hsla(var(--blm-dark-inv-h), var(--blm-dark-inv-s), var(--blm-dark-inv-l), var(--blm-dark-inv-a));--blm-dark-inv-h:0;--blm-dark-inv-s:0%;--blm-dark-inv-l:100%;--blm-dark-inv-a:1;--blm-prim-inv:hsla(var(--blm-prim-inv-h), var(--blm-prim-inv-s), var(--blm-prim-inv-l), var(--blm-prim-inv-a));--blm-prim-inv-h:0;--blm-prim-inv-s:0%;--blm-prim-inv-l:100%;--blm-prim-inv-a:1;--blm-prim-light:hsla(var(--blm-prim-light-h), var(--blm-prim-light-s), var(--blm-prim-light-l), var(--blm-prim-light-a));--blm-prim-light-h:171;--blm-prim-light-s:100%;--blm-prim-light-l:96%;--blm-prim-light-a:1;--blm-prim-dark:hsla(var(--blm-prim-dark-h), var(--blm-prim-dark-s), var(--blm-prim-dark-l), var(--blm-prim-dark-a));--blm-prim-dark-h:171;--blm-prim-dark-s:100%;--blm-prim-dark-l:29%;--blm-prim-dark-a:1;--blm-link-inv:hsla(var(--blm-link-inv-h), var(--blm-link-inv-s), var(--blm-link-inv-l), var(--blm-link-inv-a));--blm-link-inv-h:0;--blm-link-inv-s:0%;--blm-link-inv-l:100%;--blm-link-inv-a:1;--blm-link-light:hsla(var(--blm-link-light-h), var(--blm-link-light-s), var(--blm-link-light-l), var(--blm-link-light-a));--blm-link-light-h:217;--blm-link-light-s:71%;--blm-link-light-l:96%;--blm-link-light-a:1;--blm-link-dark:hsla(var(--blm-link-dark-h), var(--blm-link-dark-s), var(--blm-link-dark-l), var(--blm-link-dark-a));--blm-link-dark-h:217;--blm-link-dark-s:71%;--blm-link-dark-l:45%;--blm-link-dark-a:1;--blm-info-inv:hsla(var(--blm-info-inv-h), var(--blm-info-inv-s), var(--blm-info-inv-l), var(--blm-info-inv-a));--blm-info-inv-h:0;--blm-info-inv-s:0%;--blm-info-inv-l:100%;--blm-info-inv-a:1;--blm-info-light:hsla(var(--blm-info-light-h), var(--blm-info-light-s), var(--blm-info-light-l), var(--blm-info-light-a));--blm-info-light-h:204;--blm-info-light-s:71%;--blm-info-light-l:96%;--blm-info-light-a:1;--blm-info-dark:hsla(var(--blm-info-dark-h), var(--blm-info-dark-s), var(--blm-info-dark-l), var(--blm-info-dark-a));--blm-info-dark-h:204;--blm-info-dark-s:71%;--blm-info-dark-l:39%;--blm-info-dark-a:1;--blm-sucs-inv:hsla(var(--blm-sucs-inv-h), var(--blm-sucs-inv-s), var(--blm-sucs-inv-l), var(--blm-sucs-inv-a));--blm-sucs-inv-h:0;--blm-sucs-inv-s:0%;--blm-sucs-inv-l:100%;--blm-sucs-inv-a:1;--blm-sucs-light:hsla(var(--blm-sucs-light-h), var(--blm-sucs-light-s), var(--blm-sucs-light-l), var(--blm-sucs-light-a));--blm-sucs-light-h:141;--blm-sucs-light-s:53%;--blm-sucs-light-l:96%;--blm-sucs-light-a:1;--blm-sucs-dark:hsla(var(--blm-sucs-dark-h), var(--blm-sucs-dark-s), var(--blm-sucs-dark-l), var(--blm-sucs-dark-a));--blm-sucs-dark-h:141;--blm-sucs-dark-s:53%;--blm-sucs-dark-l:31%;--blm-sucs-dark-a:1;--blm-warn-inv:hsla(var(--blm-warn-inv-h), var(--blm-warn-inv-s), var(--blm-warn-inv-l), var(--blm-warn-inv-a));--blm-warn-inv-h:0;--blm-warn-inv-s:0%;--blm-warn-inv-l:0%;--blm-warn-inv-a:0.7;--blm-warn-light:hsla(var(--blm-warn-light-h), var(--blm-warn-light-s), var(--blm-warn-light-l), var(--blm-warn-light-a));--blm-warn-light-h:48;--blm-warn-light-s:100%;--blm-warn-light-l:96%;--blm-warn-light-a:1;--blm-warn-dark:hsla(var(--blm-warn-dark-h), var(--blm-warn-dark-s), var(--blm-warn-dark-l), var(--blm-warn-dark-a));--blm-warn-dark-h:48;--blm-warn-dark-s:100%;--blm-warn-dark-l:29%;--blm-warn-dark-a:1;--blm-dang-inv:hsla(var(--blm-dang-inv-h), var(--blm-dang-inv-s), var(--blm-dang-inv-l), var(--blm-dang-inv-a));--blm-dang-inv-h:0;--blm-dang-inv-s:0%;--blm-dang-inv-l:100%;--blm-dang-inv-a:1;--blm-dang-light:hsla(var(--blm-dang-light-h), var(--blm-dang-light-s), var(--blm-dang-light-l), var(--blm-dang-light-a));--blm-dang-light-h:348;--blm-dang-light-s:86%;--blm-dang-light-l:96%;--blm-dang-light-a:1;--blm-dang-dark:hsla(var(--blm-dang-dark-h), var(--blm-dang-dark-s), var(--blm-dang-dark-l), var(--blm-dang-dark-a));--blm-dang-dark-h:348;--blm-dang-dark-s:86%;--blm-dang-dark-l:43%;--blm-dang-dark-a:1;--blm-s-small:var(--blm-s-7);--blm-s-medium:var(--blm-s-5);--blm-s-lg:var(--blm-s-4);--blm-bt-dsbl-bg-clr:hsla(var(--blm-bt-dsbl-bg-clr-h), var(--blm-bt-dsbl-bg-clr-s), var(--blm-bt-dsbl-bg-clr-l), var(--blm-bt-dsbl-bg-clr-a));--blm-bt-dsbl-bg-clr-h:var(--blm-sch-main-h);--blm-bt-dsbl-bg-clr-s:var(--blm-sch-main-s);--blm-bt-dsbl-bg-clr-l:var(--blm-sch-main-l);--blm-bt-dsbl-bg-clr-a:var(--blm-sch-main-a);--blm-bt-dsbl-bd-clr:hsla(var(--blm-bt-dsbl-bd-clr-h), var(--blm-bt-dsbl-bd-clr-s), var(--blm-bt-dsbl-bd-clr-l), var(--blm-bt-dsbl-bd-clr-a));--blm-bt-dsbl-bd-clr-h:var(--blm-bd-h);--blm-bt-dsbl-bd-clr-s:var(--blm-bd-s);--blm-bt-dsbl-bd-clr-l:var(--blm-bd-l);--blm-bt-dsbl-bd-clr-a:var(--blm-bd-a);--blm-bt-dsbl-shadow:none;--blm-bt-dsbl-opacity:0.5;--blm-bt-static-bg-clr:hsla(var(--blm-bt-static-bg-clr-h), var(--blm-bt-static-bg-clr-s), var(--blm-bt-static-bg-clr-l), var(--blm-bt-static-bg-clr-a));--blm-bt-static-bg-clr-h:var(--blm-sch-main-ter-h);--blm-bt-static-bg-clr-s:var(--blm-sch-main-ter-s);--blm-bt-static-bg-clr-l:var(--blm-sch-main-ter-l);--blm-bt-static-bg-clr-a:var(--blm-sch-main-ter-a);--blm-bt-static-bd-clr:hsla(var(--blm-bt-static-bd-clr-h), var(--blm-bt-static-bd-clr-s), var(--blm-bt-static-bd-clr-l), var(--blm-bt-static-bd-clr-a));--blm-bt-static-bd-clr-h:var(--blm-bd-h);--blm-bt-static-bd-clr-s:var(--blm-bd-s);--blm-bt-static-bd-clr-l:var(--blm-bd-l);--blm-bt-static-bd-clr-a:var(--blm-bd-a);--blm-bt-static-clr:hsla(var(--blm-bt-static-clr-h), var(--blm-bt-static-clr-s), var(--blm-bt-static-clr-l), var(--blm-bt-static-clr-a));--blm-bt-static-clr-h:var(--blm-txt-light-h);--blm-bt-static-clr-s:var(--blm-txt-light-s);--blm-bt-static-clr-l:var(--blm-txt-light-l);--blm-bt-static-clr-a:var(--blm-txt-light-a);--blm-weight-semibold:600;--blm-ct-hdg-clr:hsla(var(--blm-ct-hdg-clr-h), var(--blm-ct-hdg-clr-s), var(--blm-ct-hdg-clr-l), var(--blm-ct-hdg-clr-a));--blm-ct-hdg-clr-h:var(--blm-txt-strong-h);--blm-ct-hdg-clr-s:var(--blm-txt-strong-s);--blm-ct-hdg-clr-l:var(--blm-txt-strong-l);--blm-ct-hdg-clr-a:var(--blm-txt-strong-a);--blm-ct-hdg-weight:var(--blm-weight-semibold);--blm-ct-hdg-line-height:1.125;--blm-ct-blockquote-bg-clr:hsla(var(--blm-ct-blockquote-bg-clr-h), var(--blm-ct-blockquote-bg-clr-s), var(--blm-ct-blockquote-bg-clr-l), var(--blm-ct-blockquote-bg-clr-a));--blm-ct-blockquote-bg-clr-h:var(--blm-bg-h);--blm-ct-blockquote-bg-clr-s:var(--blm-bg-s);--blm-ct-blockquote-bg-clr-l:var(--blm-bg-l);--blm-ct-blockquote-bg-clr-a:var(--blm-bg-a);--blm-ct-blockquote-bd-left:5px solid var(--blm-bd);--blm-ct-blockquote-p:1.25em 1.5em;--blm-ct-pre-p:1.25em 1.5em;--blm-ct-table-cell-bd:1px solid var(--blm-bd);--blm-ct-table-cell-bd-width:0 0 1px;--blm-ct-table-cell-p:0.5em 0.75em;--blm-ct-table-cell-hdg-clr:hsla(var(--blm-ct-table-cell-hdg-clr-h), var(--blm-ct-table-cell-hdg-clr-s), var(--blm-ct-table-cell-hdg-clr-l), var(--blm-ct-table-cell-hdg-clr-a));--blm-ct-table-cell-hdg-clr-h:var(--blm-txt-strong-h);--blm-ct-table-cell-hdg-clr-s:var(--blm-txt-strong-s);--blm-ct-table-cell-hdg-clr-l:var(--blm-txt-strong-l);--blm-ct-table-cell-hdg-clr-a:var(--blm-txt-strong-a);--blm-ct-table-head-cell-bd-width:0 0 2px;--blm-ct-table-head-cell-clr:hsla(var(--blm-ct-table-head-cell-clr-h), var(--blm-ct-table-head-cell-clr-s), var(--blm-ct-table-head-cell-clr-l), var(--blm-ct-table-head-cell-clr-a));--blm-ct-table-head-cell-clr-h:var(--blm-txt-strong-h);--blm-ct-table-head-cell-clr-s:var(--blm-txt-strong-s);--blm-ct-table-head-cell-clr-l:var(--blm-txt-strong-l);--blm-ct-table-head-cell-clr-a:var(--blm-txt-strong-a);--blm-ct-table-foot-cell-bd-width:2px 0 0;--blm-ct-table-foot-cell-clr:hsla(var(--blm-ct-table-foot-cell-clr-h), var(--blm-ct-table-foot-cell-clr-s), var(--blm-ct-table-foot-cell-clr-l), var(--blm-ct-table-foot-cell-clr-a));--blm-ct-table-foot-cell-clr-h:var(--blm-txt-strong-h);--blm-ct-table-foot-cell-clr-s:var(--blm-txt-strong-s);--blm-ct-table-foot-cell-clr-l:var(--blm-txt-strong-l);--blm-ct-table-foot-cell-clr-a:var(--blm-txt-strong-a);--blm-icon-dim:1.5rem;--blm-icon-dim-small:1rem;--blm-icon-dim-medium:2rem;--blm-icon-dim-lg:3rem;--blm-noti-bg-clr:hsla(var(--blm-noti-bg-clr-h), var(--blm-noti-bg-clr-s), var(--blm-noti-bg-clr-l), var(--blm-noti-bg-clr-a));--blm-noti-bg-clr-h:var(--blm-bg-h);--blm-noti-bg-clr-s:var(--blm-bg-s);--blm-noti-bg-clr-l:var(--blm-bg-l);--blm-noti-bg-clr-a:var(--blm-bg-a);--blm-noti-radius:var(--blm-radius);--blm-noti-p-vertical:1.25rem;--blm-noti-p-right:2.5rem;--blm-noti-p-left:1.5rem;--blm-noti-code-bg-clr:hsla(var(--blm-noti-code-bg-clr-h), var(--blm-noti-code-bg-clr-s), var(--blm-noti-code-bg-clr-l), var(--blm-noti-code-bg-clr-a));--blm-noti-code-bg-clr-h:var(--blm-sch-main-h);--blm-noti-code-bg-clr-s:var(--blm-sch-main-s);--blm-noti-code-bg-clr-l:var(--blm-sch-main-l);--blm-noti-code-bg-clr-a:var(--blm-sch-main-a);--blm-bd-light:hsla(var(--blm-bd-light-h), var(--blm-bd-light-s), var(--blm-bd-light-l), var(--blm-bd-light-a));--blm-bd-light-h:var(--blm-grey-lightest-h);--blm-bd-light-s:var(--blm-grey-lightest-s);--blm-bd-light-l:var(--blm-grey-lightest-l);--blm-bd-light-a:var(--blm-grey-lightest-a);--blm-prg-bd-radius:var(--blm-radius-rounded);--blm-prg-bar-bg-clr:hsla(var(--blm-prg-bar-bg-clr-h), var(--blm-prg-bar-bg-clr-s), var(--blm-prg-bar-bg-clr-l), var(--blm-prg-bar-bg-clr-a));--blm-prg-bar-bg-clr-h:var(--blm-bd-light-h);--blm-prg-bar-bg-clr-s:var(--blm-bd-light-s);--blm-prg-bar-bg-clr-l:var(--blm-bd-light-l);--blm-prg-bar-bg-clr-a:var(--blm-bd-light-a);--blm-prg-value-bg-clr:hsla(var(--blm-prg-value-bg-clr-h), var(--blm-prg-value-bg-clr-s), var(--blm-prg-value-bg-clr-l), var(--blm-prg-value-bg-clr-a));--blm-prg-value-bg-clr-h:var(--blm-txt-h);--blm-prg-value-bg-clr-s:var(--blm-txt-s);--blm-prg-value-bg-clr-l:var(--blm-txt-l);--blm-prg-value-bg-clr-a:var(--blm-txt-a);--blm-prg-indeterminate-duration:1.5s;--blm-sch-main-bis:hsla(var(--blm-sch-main-bis-h), var(--blm-sch-main-bis-s), var(--blm-sch-main-bis-l), var(--blm-sch-main-bis-a));--blm-sch-main-bis-h:var(--blm-white-bis-h);--blm-sch-main-bis-s:var(--blm-white-bis-s);--blm-sch-main-bis-l:var(--blm-white-bis-l);--blm-sch-main-bis-a:var(--blm-white-bis-a);--blm-table-bg-clr:hsla(var(--blm-table-bg-clr-h), var(--blm-table-bg-clr-s), var(--blm-table-bg-clr-l), var(--blm-table-bg-clr-a));--blm-table-bg-clr-h:var(--blm-sch-main-h);--blm-table-bg-clr-s:var(--blm-sch-main-s);--blm-table-bg-clr-l:var(--blm-sch-main-l);--blm-table-bg-clr-a:var(--blm-sch-main-a);--blm-table-clr:hsla(var(--blm-table-clr-h), var(--blm-table-clr-s), var(--blm-table-clr-l), var(--blm-table-clr-a));--blm-table-clr-h:var(--blm-txt-strong-h);--blm-table-clr-s:var(--blm-txt-strong-s);--blm-table-clr-l:var(--blm-txt-strong-l);--blm-table-clr-a:var(--blm-txt-strong-a);--blm-table-cell-bd:1px solid var(--blm-bd);--blm-table-cell-bd-width:0 0 1px;--blm-table-cell-p:0.5em 0.75em;--blm-table-row-act-bg-clr:hsla(var(--blm-table-row-act-bg-clr-h), var(--blm-table-row-act-bg-clr-s), var(--blm-table-row-act-bg-clr-l), var(--blm-table-row-act-bg-clr-a));--blm-table-row-act-bg-clr-h:var(--blm-prim-h);--blm-table-row-act-bg-clr-s:var(--blm-prim-s);--blm-table-row-act-bg-clr-l:var(--blm-prim-l);--blm-table-row-act-bg-clr-a:var(--blm-prim-a);--blm-table-row-act-clr:hsla(var(--blm-table-row-act-clr-h), var(--blm-table-row-act-clr-s), var(--blm-table-row-act-clr-l), var(--blm-table-row-act-clr-a));--blm-table-row-act-clr-h:var(--blm-prim-inv-h);--blm-table-row-act-clr-s:var(--blm-prim-inv-s);--blm-table-row-act-clr-l:var(--blm-prim-inv-l);--blm-table-row-act-clr-a:var(--blm-prim-inv-a);--blm-table-cell-hdg-clr:hsla(var(--blm-table-cell-hdg-clr-h), var(--blm-table-cell-hdg-clr-s), var(--blm-table-cell-hdg-clr-l), var(--blm-table-cell-hdg-clr-a));--blm-table-cell-hdg-clr-h:var(--blm-txt-strong-h);--blm-table-cell-hdg-clr-s:var(--blm-txt-strong-s);--blm-table-cell-hdg-clr-l:var(--blm-txt-strong-l);--blm-table-cell-hdg-clr-a:var(--blm-txt-strong-a);--blm-table-head-bg-clr:hsla(var(--blm-table-head-bg-clr-h), var(--blm-table-head-bg-clr-s), var(--blm-table-head-bg-clr-l), var(--blm-table-head-bg-clr-a));--blm-table-head-bg-clr-h:0;--blm-table-head-bg-clr-s:0%;--blm-table-head-bg-clr-l:0%;--blm-table-head-bg-clr-a:0;--blm-table-head-cell-bd-width:0 0 2px;--blm-table-head-cell-clr:hsla(var(--blm-table-head-cell-clr-h), var(--blm-table-head-cell-clr-s), var(--blm-table-head-cell-clr-l), var(--blm-table-head-cell-clr-a));--blm-table-head-cell-clr-h:var(--blm-txt-strong-h);--blm-table-head-cell-clr-s:var(--blm-txt-strong-s);--blm-table-head-cell-clr-l:var(--blm-txt-strong-l);--blm-table-head-cell-clr-a:var(--blm-txt-strong-a);--blm-table-foot-bg-clr:hsla(var(--blm-table-foot-bg-clr-h), var(--blm-table-foot-bg-clr-s), var(--blm-table-foot-bg-clr-l), var(--blm-table-foot-bg-clr-a));--blm-table-foot-bg-clr-h:0;--blm-table-foot-bg-clr-s:0%;--blm-table-foot-bg-clr-l:0%;--blm-table-foot-bg-clr-a:0;--blm-table-foot-cell-bd-width:2px 0 0;--blm-table-foot-cell-clr:hsla(var(--blm-table-foot-cell-clr-h), var(--blm-table-foot-cell-clr-s), var(--blm-table-foot-cell-clr-l), var(--blm-table-foot-cell-clr-a));--blm-table-foot-cell-clr-h:var(--blm-txt-strong-h);--blm-table-foot-cell-clr-s:var(--blm-txt-strong-s);--blm-table-foot-cell-clr-l:var(--blm-txt-strong-l);--blm-table-foot-cell-clr-a:var(--blm-txt-strong-a);--blm-table-body-bg-clr:hsla(var(--blm-table-body-bg-clr-h), var(--blm-table-body-bg-clr-s), var(--blm-table-body-bg-clr-l), var(--blm-table-body-bg-clr-a));--blm-table-body-bg-clr-h:0;--blm-table-body-bg-clr-s:0%;--blm-table-body-bg-clr-l:0%;--blm-table-body-bg-clr-a:0;--blm-table-row-hov-bg-clr:hsla(var(--blm-table-row-hov-bg-clr-h), var(--blm-table-row-hov-bg-clr-s), var(--blm-table-row-hov-bg-clr-l), var(--blm-table-row-hov-bg-clr-a));--blm-table-row-hov-bg-clr-h:var(--blm-sch-main-bis-h);--blm-table-row-hov-bg-clr-s:var(--blm-sch-main-bis-s);--blm-table-row-hov-bg-clr-l:var(--blm-sch-main-bis-l);--blm-table-row-hov-bg-clr-a:var(--blm-sch-main-bis-a);--blm-table-striped-row-even-hov-bg-clr:hsla(var(--blm-table-striped-row-even-hov-bg-clr-h), var(--blm-table-striped-row-even-hov-bg-clr-s), var(--blm-table-striped-row-even-hov-bg-clr-l), var(--blm-table-striped-row-even-hov-bg-clr-a));--blm-table-striped-row-even-hov-bg-clr-h:var(--blm-sch-main-ter-h);--blm-table-striped-row-even-hov-bg-clr-s:var(--blm-sch-main-ter-s);--blm-table-striped-row-even-hov-bg-clr-l:var(--blm-sch-main-ter-l);--blm-table-striped-row-even-hov-bg-clr-a:var(--blm-sch-main-ter-a);--blm-table-striped-row-even-bg-clr:hsla(var(--blm-table-striped-row-even-bg-clr-h), var(--blm-table-striped-row-even-bg-clr-s), var(--blm-table-striped-row-even-bg-clr-l), var(--blm-table-striped-row-even-bg-clr-a));--blm-table-striped-row-even-bg-clr-h:var(--blm-sch-main-bis-h);--blm-table-striped-row-even-bg-clr-s:var(--blm-sch-main-bis-s);--blm-table-striped-row-even-bg-clr-l:var(--blm-sch-main-bis-l);--blm-table-striped-row-even-bg-clr-a:var(--blm-sch-main-bis-a);--blm-tag-bg-clr:hsla(var(--blm-tag-bg-clr-h), var(--blm-tag-bg-clr-s), var(--blm-tag-bg-clr-l), var(--blm-tag-bg-clr-a));--blm-tag-bg-clr-h:var(--blm-bg-h);--blm-tag-bg-clr-s:var(--blm-bg-s);--blm-tag-bg-clr-l:var(--blm-bg-l);--blm-tag-bg-clr-a:var(--blm-bg-a);--blm-tag-radius:var(--blm-radius);--blm-tag-clr:hsla(var(--blm-tag-clr-h), var(--blm-tag-clr-s), var(--blm-tag-clr-l), var(--blm-tag-clr-a));--blm-tag-clr-h:var(--blm-txt-h);--blm-tag-clr-s:var(--blm-txt-s);--blm-tag-clr-l:var(--blm-txt-l);--blm-tag-clr-a:var(--blm-txt-a);--blm-tag-delete-m:1px;--blm-title-sub-s:0.75em;--blm-title-sup-s:0.75em;--blm-title-clr:hsla(var(--blm-title-clr-h), var(--blm-title-clr-s), var(--blm-title-clr-l), var(--blm-title-clr-a));--blm-title-clr-h:var(--blm-txt-strong-h);--blm-title-clr-s:var(--blm-txt-strong-s);--blm-title-clr-l:var(--blm-txt-strong-l);--blm-title-clr-a:var(--blm-txt-strong-a);--blm-title-family:inherit;--blm-title-s:var(--blm-s-3);--blm-title-weight:var(--blm-weight-semibold);--blm-title-line-height:1.125;--blm-title-strong-clr:inherit;--blm-title-strong-weight:inherit;--blm-subtitle-negative-m:-1.25rem;--blm-subtitle-clr:hsla(var(--blm-subtitle-clr-h), var(--blm-subtitle-clr-s), var(--blm-subtitle-clr-l), var(--blm-subtitle-clr-a));--blm-subtitle-clr-h:var(--blm-txt-h);--blm-subtitle-clr-s:var(--blm-txt-s);--blm-subtitle-clr-l:var(--blm-txt-l);--blm-subtitle-clr-a:var(--blm-txt-a);--blm-subtitle-family:inherit;--blm-subtitle-s:var(--blm-s-5);--blm-subtitle-weight:var(--blm-weight-normal);--blm-subtitle-line-height:1.25;--blm-subtitle-strong-clr:hsla(var(--blm-subtitle-strong-clr-h), var(--blm-subtitle-strong-clr-s), var(--blm-subtitle-strong-clr-l), var(--blm-subtitle-strong-clr-a));--blm-subtitle-strong-clr-h:var(--blm-txt-strong-h);--blm-subtitle-strong-clr-s:var(--blm-txt-strong-s);--blm-subtitle-strong-clr-l:var(--blm-txt-strong-l);--blm-subtitle-strong-clr-a:var(--blm-txt-strong-a);--blm-subtitle-strong-weight:var(--blm-weight-semibold);--blm-input-clr:hsla(var(--blm-input-clr-h), var(--blm-input-clr-s), var(--blm-input-clr-l), var(--blm-input-clr-a));--blm-input-clr-h:var(--blm-txt-strong-h);--blm-input-clr-s:var(--blm-txt-strong-s);--blm-input-clr-l:var(--blm-txt-strong-l);--blm-bd-hov:hsla(var(--blm-bd-hov-h), var(--blm-bd-hov-s), var(--blm-bd-hov-l), var(--blm-bd-hov-a));--blm-bd-hov-h:var(--blm-grey-light-h);--blm-bd-hov-s:var(--blm-grey-light-s);--blm-bd-hov-l:var(--blm-grey-light-l);--blm-bd-hov-a:var(--blm-grey-light-a);--blm-input-dsbl-clr:hsla(var(--blm-input-dsbl-clr-h), var(--blm-input-dsbl-clr-s), var(--blm-input-dsbl-clr-l), var(--blm-input-dsbl-clr-a));--blm-input-dsbl-clr-h:var(--blm-txt-light-h);--blm-input-dsbl-clr-s:var(--blm-txt-light-s);--blm-input-dsbl-clr-l:var(--blm-txt-light-l);--blm-input-bg-clr:hsla(var(--blm-input-bg-clr-h), var(--blm-input-bg-clr-s), var(--blm-input-bg-clr-l), var(--blm-input-bg-clr-a));--blm-input-bg-clr-h:var(--blm-sch-main-h);--blm-input-bg-clr-s:var(--blm-sch-main-s);--blm-input-bg-clr-l:var(--blm-sch-main-l);--blm-input-bg-clr-a:var(--blm-sch-main-a);--blm-input-bd-clr:hsla(var(--blm-input-bd-clr-h), var(--blm-input-bd-clr-s), var(--blm-input-bd-clr-l), var(--blm-input-bd-clr-a));--blm-input-bd-clr-h:var(--blm-bd-h);--blm-input-bd-clr-s:var(--blm-bd-s);--blm-input-bd-clr-l:var(--blm-bd-l);--blm-input-bd-clr-a:var(--blm-bd-a);--blm-input-radius:var(--blm-radius);--blm-input-clr-a:var(--blm-txt-strong-a);--blm-input-placeholder-clr:hsla(var(--blm-input-placeholder-clr-h), var(--blm-input-placeholder-clr-s), var(--blm-input-placeholder-clr-l), var(--blm-input-placeholder-clr-a));--blm-input-placeholder-clr-h:var(--blm-input-clr-h);--blm-input-placeholder-clr-s:var(--blm-input-clr-s);--blm-input-placeholder-clr-l:var(--blm-input-clr-l);--blm-input-placeholder-clr-a:0.3;--blm-input-hov-bd-clr:hsla(var(--blm-input-hov-bd-clr-h), var(--blm-input-hov-bd-clr-s), var(--blm-input-hov-bd-clr-l), var(--blm-input-hov-bd-clr-a));--blm-input-hov-bd-clr-h:var(--blm-bd-hov-h);--blm-input-hov-bd-clr-s:var(--blm-bd-hov-s);--blm-input-hov-bd-clr-l:var(--blm-bd-hov-l);--blm-input-hov-bd-clr-a:var(--blm-bd-hov-a);--blm-input-foc-bd-clr:hsla(var(--blm-input-foc-bd-clr-h), var(--blm-input-foc-bd-clr-s), var(--blm-input-foc-bd-clr-l), var(--blm-input-foc-bd-clr-a));--blm-input-foc-bd-clr-h:var(--blm-link-h);--blm-input-foc-bd-clr-s:var(--blm-link-s);--blm-input-foc-bd-clr-l:var(--blm-link-l);--blm-input-foc-bd-clr-a:var(--blm-link-a);--blm-input-foc-box-shadow-s:0 0 0 0.125em;--blm-input-foc-box-shadow-clr:hsla(var(--blm-input-foc-box-shadow-clr-h), var(--blm-input-foc-box-shadow-clr-s), var(--blm-input-foc-box-shadow-clr-l), var(--blm-input-foc-box-shadow-clr-a));--blm-input-foc-box-shadow-clr-h:var(--blm-link-h);--blm-input-foc-box-shadow-clr-s:var(--blm-link-s);--blm-input-foc-box-shadow-clr-l:var(--blm-link-l);--blm-input-foc-box-shadow-clr-a:0.25;--blm-input-dsbl-bg-clr:hsla(var(--blm-input-dsbl-bg-clr-h), var(--blm-input-dsbl-bg-clr-s), var(--blm-input-dsbl-bg-clr-l), var(--blm-input-dsbl-bg-clr-a));--blm-input-dsbl-bg-clr-h:var(--blm-bg-h);--blm-input-dsbl-bg-clr-s:var(--blm-bg-s);--blm-input-dsbl-bg-clr-l:var(--blm-bg-l);--blm-input-dsbl-bg-clr-a:var(--blm-bg-a);--blm-input-dsbl-bd-clr:hsla(var(--blm-input-dsbl-bd-clr-h), var(--blm-input-dsbl-bd-clr-s), var(--blm-input-dsbl-bd-clr-l), var(--blm-input-dsbl-bd-clr-a));--blm-input-dsbl-bd-clr-h:var(--blm-bg-h);--blm-input-dsbl-bd-clr-s:var(--blm-bg-s);--blm-input-dsbl-bd-clr-l:var(--blm-bg-l);--blm-input-dsbl-bd-clr-a:var(--blm-bg-a);--blm-input-dsbl-clr-a:var(--blm-txt-light-a);--blm-input-dsbl-placeholder-clr:hsla(var(--blm-input-dsbl-placeholder-clr-h), var(--blm-input-dsbl-placeholder-clr-s), var(--blm-input-dsbl-placeholder-clr-l), var(--blm-input-dsbl-placeholder-clr-a));--blm-input-dsbl-placeholder-clr-h:var(--blm-input-dsbl-clr-h);--blm-input-dsbl-placeholder-clr-s:var(--blm-input-dsbl-clr-s);--blm-input-dsbl-placeholder-clr-l:var(--blm-input-dsbl-clr-l);--blm-input-dsbl-placeholder-clr-a:0.3;--blm-input-shadow:inset 0 0.0625em 0.125em hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.05);--blm-ctrl-radius-small:var(--blm-radius-small);--blm-txtarea-p:var(--blm-ctrl-p-horizontal);--blm-txtarea-max-height:40em;--blm-txtarea-min-height:8em;--blm-input-hov-clr:hsla(var(--blm-input-hov-clr-h), var(--blm-input-hov-clr-s), var(--blm-input-hov-clr-l), var(--blm-input-hov-clr-a));--blm-input-hov-clr-h:var(--blm-txt-strong-h);--blm-input-hov-clr-s:var(--blm-txt-strong-s);--blm-input-hov-clr-l:var(--blm-txt-strong-l);--blm-input-hov-clr-a:var(--blm-txt-strong-a);--blm-input-height:var(--blm-ctrl-height);--blm-input-arrow:hsla(var(--blm-input-arrow-h), var(--blm-input-arrow-s), var(--blm-input-arrow-l), var(--blm-input-arrow-a));--blm-input-arrow-h:var(--blm-link-h);--blm-input-arrow-s:var(--blm-link-s);--blm-input-arrow-l:var(--blm-link-l);--blm-input-arrow-a:var(--blm-link-a);--blm-file-radius:var(--blm-radius);--blm-file-cta-bg-clr:hsla(var(--blm-file-cta-bg-clr-h), var(--blm-file-cta-bg-clr-s), var(--blm-file-cta-bg-clr-l), var(--blm-file-cta-bg-clr-a));--blm-file-cta-bg-clr-h:var(--blm-sch-main-ter-h);--blm-file-cta-bg-clr-s:var(--blm-sch-main-ter-s);--blm-file-cta-bg-clr-l:var(--blm-sch-main-ter-l);--blm-file-cta-bg-clr-a:var(--blm-sch-main-ter-a);--blm-file-cta-hov-clr:hsla(var(--blm-file-cta-hov-clr-h), var(--blm-file-cta-hov-clr-s), var(--blm-file-cta-hov-clr-l), var(--blm-file-cta-hov-clr-a));--blm-file-cta-hov-clr-h:var(--blm-txt-strong-h);--blm-file-cta-hov-clr-s:var(--blm-txt-strong-s);--blm-file-cta-hov-clr-l:var(--blm-txt-strong-l);--blm-file-cta-hov-clr-a:var(--blm-txt-strong-a);--blm-file-name-bd-clr:hsla(var(--blm-file-name-bd-clr-h), var(--blm-file-name-bd-clr-s), var(--blm-file-name-bd-clr-l), var(--blm-file-name-bd-clr-a));--blm-file-name-bd-clr-h:var(--blm-bd-h);--blm-file-name-bd-clr-s:var(--blm-bd-s);--blm-file-name-bd-clr-l:var(--blm-bd-l);--blm-file-name-bd-clr-a:var(--blm-bd-a);--blm-file-cta-act-clr:hsla(var(--blm-file-cta-act-clr-h), var(--blm-file-cta-act-clr-s), var(--blm-file-cta-act-clr-l), var(--blm-file-cta-act-clr-a));--blm-file-cta-act-clr-h:var(--blm-txt-strong-h);--blm-file-cta-act-clr-s:var(--blm-txt-strong-s);--blm-file-cta-act-clr-l:var(--blm-txt-strong-l);--blm-file-cta-act-clr-a:var(--blm-txt-strong-a);--blm-file-bd-clr:hsla(var(--blm-file-bd-clr-h), var(--blm-file-bd-clr-s), var(--blm-file-bd-clr-l), var(--blm-file-bd-clr-a));--blm-file-bd-clr-h:var(--blm-bd-h);--blm-file-bd-clr-s:var(--blm-bd-s);--blm-file-bd-clr-l:var(--blm-bd-l);--blm-file-bd-clr-a:var(--blm-bd-a);--blm-file-cta-clr:hsla(var(--blm-file-cta-clr-h), var(--blm-file-cta-clr-s), var(--blm-file-cta-clr-l), var(--blm-file-cta-clr-a));--blm-file-cta-clr-h:var(--blm-txt-h);--blm-file-cta-clr-s:var(--blm-txt-s);--blm-file-cta-clr-l:var(--blm-txt-l);--blm-file-cta-clr-a:var(--blm-txt-a);--blm-file-name-bd-style:solid;--blm-file-name-bd-width:1px 1px 1px 0;--blm-file-name-max-width:16em;--blm-label-clr:hsla(var(--blm-label-clr-h), var(--blm-label-clr-s), var(--blm-label-clr-l), var(--blm-label-clr-a));--blm-label-clr-h:var(--blm-txt-strong-h);--blm-label-clr-s:var(--blm-txt-strong-s);--blm-label-clr-l:var(--blm-txt-strong-l);--blm-label-clr-a:var(--blm-txt-strong-a);--blm-label-weight:var(--blm-weight-bold);--blm-help-s:var(--blm-s-small);--blm-input-icon-act-clr:hsla(var(--blm-input-icon-act-clr-h), var(--blm-input-icon-act-clr-s), var(--blm-input-icon-act-clr-l), var(--blm-input-icon-act-clr-a));--blm-input-icon-act-clr-h:var(--blm-txt-h);--blm-input-icon-act-clr-s:var(--blm-txt-s);--blm-input-icon-act-clr-l:var(--blm-txt-l);--blm-input-icon-act-clr-a:var(--blm-txt-a);--blm-input-icon-clr:hsla(var(--blm-input-icon-clr-h), var(--blm-input-icon-clr-s), var(--blm-input-icon-clr-l), var(--blm-input-icon-clr-a));--blm-input-icon-clr-h:var(--blm-bd-h);--blm-input-icon-clr-s:var(--blm-bd-s);--blm-input-icon-clr-l:var(--blm-bd-l);--blm-input-icon-clr-a:var(--blm-bd-a);--blm-bread-itm-clr:hsla(var(--blm-bread-itm-clr-h), var(--blm-bread-itm-clr-s), var(--blm-bread-itm-clr-l), var(--blm-bread-itm-clr-a));--blm-bread-itm-clr-h:var(--blm-link-h);--blm-bread-itm-clr-s:var(--blm-link-s);--blm-bread-itm-clr-l:var(--blm-link-l);--blm-bread-itm-clr-a:var(--blm-link-a);--blm-bread-itm-p-vertical:0;--blm-bread-itm-p-horizontal:0.75em;--blm-bread-itm-hov-clr:hsla(var(--blm-bread-itm-hov-clr-h), var(--blm-bread-itm-hov-clr-s), var(--blm-bread-itm-hov-clr-l), var(--blm-bread-itm-hov-clr-a));--blm-bread-itm-hov-clr-h:var(--blm-link-hov-h);--blm-bread-itm-hov-clr-s:var(--blm-link-hov-s);--blm-bread-itm-hov-clr-l:var(--blm-link-hov-l);--blm-bread-itm-hov-clr-a:var(--blm-link-hov-a);--blm-bread-itm-act-clr:hsla(var(--blm-bread-itm-act-clr-h), var(--blm-bread-itm-act-clr-s), var(--blm-bread-itm-act-clr-l), var(--blm-bread-itm-act-clr-a));--blm-bread-itm-act-clr-h:var(--blm-txt-strong-h);--blm-bread-itm-act-clr-s:var(--blm-txt-strong-s);--blm-bread-itm-act-clr-l:var(--blm-txt-strong-l);--blm-bread-itm-act-clr-a:var(--blm-txt-strong-a);--blm-bread-itm-separator-clr:hsla(var(--blm-bread-itm-separator-clr-h), var(--blm-bread-itm-separator-clr-s), var(--blm-bread-itm-separator-clr-l), var(--blm-bread-itm-separator-clr-a));--blm-bread-itm-separator-clr-h:var(--blm-bd-hov-h);--blm-bread-itm-separator-clr-s:var(--blm-bd-hov-s);--blm-bread-itm-separator-clr-l:var(--blm-bd-hov-l);--blm-bread-itm-separator-clr-a:var(--blm-bd-hov-a);--blm-block-spacing:1.5rem;--blm-card-bg-clr:hsla(var(--blm-card-bg-clr-h), var(--blm-card-bg-clr-s), var(--blm-card-bg-clr-l), var(--blm-card-bg-clr-a));--blm-card-bg-clr-h:var(--blm-sch-main-h);--blm-card-bg-clr-s:var(--blm-sch-main-s);--blm-card-bg-clr-l:var(--blm-sch-main-l);--blm-card-bg-clr-a:var(--blm-sch-main-a);--blm-card-shadow:0 0.5em 1em -0.125em hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.1),0 0px 0 1px hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.02);--blm-card-clr:hsla(var(--blm-card-clr-h), var(--blm-card-clr-s), var(--blm-card-clr-l), var(--blm-card-clr-a));--blm-card-clr-h:var(--blm-txt-h);--blm-card-clr-s:var(--blm-txt-s);--blm-card-clr-l:var(--blm-txt-l);--blm-card-clr-a:var(--blm-txt-a);--blm-card-hd-bg-clr:hsla(var(--blm-card-hd-bg-clr-h), var(--blm-card-hd-bg-clr-s), var(--blm-card-hd-bg-clr-l), var(--blm-card-hd-bg-clr-a));--blm-card-hd-bg-clr-h:0;--blm-card-hd-bg-clr-s:0%;--blm-card-hd-bg-clr-l:0%;--blm-card-hd-bg-clr-a:0;--blm-card-hd-shadow:0 0.125em 0.25em hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.1);--blm-card-hd-clr:hsla(var(--blm-card-hd-clr-h), var(--blm-card-hd-clr-s), var(--blm-card-hd-clr-l), var(--blm-card-hd-clr-a));--blm-card-hd-clr-h:var(--blm-txt-strong-h);--blm-card-hd-clr-s:var(--blm-txt-strong-s);--blm-card-hd-clr-l:var(--blm-txt-strong-l);--blm-card-hd-clr-a:var(--blm-txt-strong-a);--blm-card-hd-weight:var(--blm-weight-bold);--blm-card-hd-p:0.75rem 1rem;--blm-card-ct-bg-clr:hsla(var(--blm-card-ct-bg-clr-h), var(--blm-card-ct-bg-clr-s), var(--blm-card-ct-bg-clr-l), var(--blm-card-ct-bg-clr-a));--blm-card-ct-bg-clr-h:0;--blm-card-ct-bg-clr-s:0%;--blm-card-ct-bg-clr-l:0%;--blm-card-ct-bg-clr-a:0;--blm-card-ct-p:1.5rem;--blm-card-ft-bg-clr:hsla(var(--blm-card-ft-bg-clr-h), var(--blm-card-ft-bg-clr-s), var(--blm-card-ft-bg-clr-l), var(--blm-card-ft-bg-clr-a));--blm-card-ft-bg-clr-h:0;--blm-card-ft-bg-clr-s:0%;--blm-card-ft-bg-clr-l:0%;--blm-card-ft-bg-clr-a:0;--blm-card-ft-bd-top:1px solid var(--blm-bd-light);--blm-card-ft-p:0.75rem;--blm-card-media-m:var(--blm-block-spacing);--blm-drp-ct-offset:4px;--blm-drp-menu-min-width:12rem;--blm-drp-ct-z:20;--blm-drp-ct-bg-clr:hsla(var(--blm-drp-ct-bg-clr-h), var(--blm-drp-ct-bg-clr-s), var(--blm-drp-ct-bg-clr-l), var(--blm-drp-ct-bg-clr-a));--blm-drp-ct-bg-clr-h:var(--blm-sch-main-h);--blm-drp-ct-bg-clr-s:var(--blm-sch-main-s);--blm-drp-ct-bg-clr-l:var(--blm-sch-main-l);--blm-drp-ct-bg-clr-a:var(--blm-sch-main-a);--blm-drp-ct-radius:var(--blm-radius);--blm-drp-ct-shadow:0 0.5em 1em -0.125em hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.1),0 0px 0 1px hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.02);--blm-drp-ct-p-bottom:0.5rem;--blm-drp-ct-p-top:0.5rem;--blm-drp-itm-clr:hsla(var(--blm-drp-itm-clr-h), var(--blm-drp-itm-clr-s), var(--blm-drp-itm-clr-l), var(--blm-drp-itm-clr-a));--blm-drp-itm-clr-h:var(--blm-txt-h);--blm-drp-itm-clr-s:var(--blm-txt-s);--blm-drp-itm-clr-l:var(--blm-txt-l);--blm-drp-itm-clr-a:var(--blm-txt-a);--blm-drp-itm-hov-bg-clr:hsla(var(--blm-drp-itm-hov-bg-clr-h), var(--blm-drp-itm-hov-bg-clr-s), var(--blm-drp-itm-hov-bg-clr-l), var(--blm-drp-itm-hov-bg-clr-a));--blm-drp-itm-hov-bg-clr-h:var(--blm-bg-h);--blm-drp-itm-hov-bg-clr-s:var(--blm-bg-s);--blm-drp-itm-hov-bg-clr-l:var(--blm-bg-l);--blm-drp-itm-hov-bg-clr-a:var(--blm-bg-a);--blm-drp-itm-hov-clr:hsla(var(--blm-drp-itm-hov-clr-h), var(--blm-drp-itm-hov-clr-s), var(--blm-drp-itm-hov-clr-l), var(--blm-drp-itm-hov-clr-a));--blm-drp-itm-hov-clr-h:var(--blm-sch-inv-h);--blm-drp-itm-hov-clr-s:var(--blm-sch-inv-s);--blm-drp-itm-hov-clr-l:var(--blm-sch-inv-l);--blm-drp-itm-hov-clr-a:var(--blm-sch-inv-a);--blm-drp-itm-act-bg-clr:hsla(var(--blm-drp-itm-act-bg-clr-h), var(--blm-drp-itm-act-bg-clr-s), var(--blm-drp-itm-act-bg-clr-l), var(--blm-drp-itm-act-bg-clr-a));--blm-drp-itm-act-bg-clr-h:var(--blm-link-h);--blm-drp-itm-act-bg-clr-s:var(--blm-link-s);--blm-drp-itm-act-bg-clr-l:var(--blm-link-l);--blm-drp-itm-act-bg-clr-a:var(--blm-link-a);--blm-drp-itm-act-clr:hsla(var(--blm-drp-itm-act-clr-h), var(--blm-drp-itm-act-clr-s), var(--blm-drp-itm-act-clr-l), var(--blm-drp-itm-act-clr-a));--blm-drp-itm-act-clr-h:var(--blm-link-inv-h);--blm-drp-itm-act-clr-s:var(--blm-link-inv-s);--blm-drp-itm-act-clr-l:var(--blm-link-inv-l);--blm-drp-itm-act-clr-a:var(--blm-link-inv-a);--blm-drp-dvd-bg-clr:hsla(var(--blm-drp-dvd-bg-clr-h), var(--blm-drp-dvd-bg-clr-s), var(--blm-drp-dvd-bg-clr-l), var(--blm-drp-dvd-bg-clr-a));--blm-drp-dvd-bg-clr-h:var(--blm-bd-light-h);--blm-drp-dvd-bg-clr-s:var(--blm-bd-light-s);--blm-drp-dvd-bg-clr-l:var(--blm-bd-light-l);--blm-drp-dvd-bg-clr-a:var(--blm-bd-light-a);--blm-level-itm-spacing:calc(var(--blm-block-spacing)/2);--blm-media-bd-clr:hsla(var(--blm-media-bd-clr-h), var(--blm-media-bd-clr-s), var(--blm-media-bd-clr-l), var(--blm-media-bd-clr-a));--blm-media-bd-clr-h:var(--blm-bd-h);--blm-media-bd-clr-s:var(--blm-bd-s);--blm-media-bd-clr-l:var(--blm-bd-l);--blm-media-bd-clr-a:0.5;--blm-media-spacing:1rem;--blm-media-spacing-lg:1.5rem;--blm-menu-list-line-height:1.25;--blm-menu-itm-radius:var(--blm-radius-small);--blm-menu-itm-clr:hsla(var(--blm-menu-itm-clr-h), var(--blm-menu-itm-clr-s), var(--blm-menu-itm-clr-l), var(--blm-menu-itm-clr-a));--blm-menu-itm-clr-h:var(--blm-txt-h);--blm-menu-itm-clr-s:var(--blm-txt-s);--blm-menu-itm-clr-l:var(--blm-txt-l);--blm-menu-itm-clr-a:var(--blm-txt-a);--blm-menu-list-link-p:0.5em 0.75em;--blm-menu-itm-hov-bg-clr:hsla(var(--blm-menu-itm-hov-bg-clr-h), var(--blm-menu-itm-hov-bg-clr-s), var(--blm-menu-itm-hov-bg-clr-l), var(--blm-menu-itm-hov-bg-clr-a));--blm-menu-itm-hov-bg-clr-h:var(--blm-bg-h);--blm-menu-itm-hov-bg-clr-s:var(--blm-bg-s);--blm-menu-itm-hov-bg-clr-l:var(--blm-bg-l);--blm-menu-itm-hov-bg-clr-a:var(--blm-bg-a);--blm-menu-itm-hov-clr:hsla(var(--blm-menu-itm-hov-clr-h), var(--blm-menu-itm-hov-clr-s), var(--blm-menu-itm-hov-clr-l), var(--blm-menu-itm-hov-clr-a));--blm-menu-itm-hov-clr-h:var(--blm-txt-strong-h);--blm-menu-itm-hov-clr-s:var(--blm-txt-strong-s);--blm-menu-itm-hov-clr-l:var(--blm-txt-strong-l);--blm-menu-itm-hov-clr-a:var(--blm-txt-strong-a);--blm-menu-itm-act-bg-clr:hsla(var(--blm-menu-itm-act-bg-clr-h), var(--blm-menu-itm-act-bg-clr-s), var(--blm-menu-itm-act-bg-clr-l), var(--blm-menu-itm-act-bg-clr-a));--blm-menu-itm-act-bg-clr-h:var(--blm-link-h);--blm-menu-itm-act-bg-clr-s:var(--blm-link-s);--blm-menu-itm-act-bg-clr-l:var(--blm-link-l);--blm-menu-itm-act-bg-clr-a:var(--blm-link-a);--blm-menu-itm-act-clr:hsla(var(--blm-menu-itm-act-clr-h), var(--blm-menu-itm-act-clr-s), var(--blm-menu-itm-act-clr-l), var(--blm-menu-itm-act-clr-a));--blm-menu-itm-act-clr-h:var(--blm-link-inv-h);--blm-menu-itm-act-clr-s:var(--blm-link-inv-s);--blm-menu-itm-act-clr-l:var(--blm-link-inv-l);--blm-menu-itm-act-clr-a:var(--blm-link-inv-a);--blm-menu-list-bd-left:1px solid var(--blm-bd);--blm-menu-nested-list-m:0.75em;--blm-menu-nested-list-p-left:0.75em;--blm-menu-label-clr:hsla(var(--blm-menu-label-clr-h), var(--blm-menu-label-clr-s), var(--blm-menu-label-clr-l), var(--blm-menu-label-clr-a));--blm-menu-label-clr-h:var(--blm-txt-light-h);--blm-menu-label-clr-s:var(--blm-txt-light-s);--blm-menu-label-clr-l:var(--blm-txt-light-l);--blm-menu-label-clr-a:var(--blm-txt-light-a);--blm-menu-label-font-s:0.75em;--blm-menu-label-letter-spacing:0.1em;--blm-menu-label-spacing:1em;--blm-txt-inv:hsla(var(--blm-txt-inv-h), var(--blm-txt-inv-s), var(--blm-txt-inv-l), var(--blm-txt-inv-a));--blm-txt-inv-h:0;--blm-txt-inv-s:0%;--blm-txt-inv-l:100%;--blm-txt-inv-a:1;--blm-msg-bg-clr:hsla(var(--blm-msg-bg-clr-h), var(--blm-msg-bg-clr-s), var(--blm-msg-bg-clr-l), var(--blm-msg-bg-clr-a));--blm-msg-bg-clr-h:var(--blm-bg-h);--blm-msg-bg-clr-s:var(--blm-bg-s);--blm-msg-bg-clr-l:var(--blm-bg-l);--blm-msg-bg-clr-a:var(--blm-bg-a);--blm-msg-radius:var(--blm-radius);--blm-msg-hd-bg-clr:hsla(var(--blm-msg-hd-bg-clr-h), var(--blm-msg-hd-bg-clr-s), var(--blm-msg-hd-bg-clr-l), var(--blm-msg-hd-bg-clr-a));--blm-msg-hd-bg-clr-h:var(--blm-txt-h);--blm-msg-hd-bg-clr-s:var(--blm-txt-s);--blm-msg-hd-bg-clr-l:var(--blm-txt-l);--blm-msg-hd-bg-clr-a:var(--blm-txt-a);--blm-msg-hd-radius:var(--blm-radius);--blm-msg-hd-clr:hsla(var(--blm-msg-hd-clr-h), var(--blm-msg-hd-clr-s), var(--blm-msg-hd-clr-l), var(--blm-msg-hd-clr-a));--blm-msg-hd-clr-h:var(--blm-txt-inv-h);--blm-msg-hd-clr-s:var(--blm-txt-inv-s);--blm-msg-hd-clr-l:var(--blm-txt-inv-l);--blm-msg-hd-clr-a:var(--blm-txt-inv-a);--blm-msg-hd-weight:var(--blm-weight-bold);--blm-msg-hd-p:0.75em 1em;--blm-msg-hd-body-bd-width:0;--blm-msg-body-bd-clr:hsla(var(--blm-msg-body-bd-clr-h), var(--blm-msg-body-bd-clr-s), var(--blm-msg-body-bd-clr-l), var(--blm-msg-body-bd-clr-a));--blm-msg-body-bd-clr-h:var(--blm-bd-h);--blm-msg-body-bd-clr-s:var(--blm-bd-s);--blm-msg-body-bd-clr-l:var(--blm-bd-l);--blm-msg-body-bd-clr-a:var(--blm-bd-a);--blm-msg-body-radius:var(--blm-radius);--blm-msg-body-bd-width:0 0 0 4px;--blm-msg-body-clr:hsla(var(--blm-msg-body-clr-h), var(--blm-msg-body-clr-s), var(--blm-msg-body-clr-l), var(--blm-msg-body-clr-a));--blm-msg-body-clr-h:var(--blm-txt-h);--blm-msg-body-clr-s:var(--blm-txt-s);--blm-msg-body-clr-l:var(--blm-txt-l);--blm-msg-body-clr-a:var(--blm-txt-a);--blm-msg-body-p:1.25em 1.5em;--blm-msg-body-pre-bg-clr:hsla(var(--blm-msg-body-pre-bg-clr-h), var(--blm-msg-body-pre-bg-clr-s), var(--blm-msg-body-pre-bg-clr-l), var(--blm-msg-body-pre-bg-clr-a));--blm-msg-body-pre-bg-clr-h:var(--blm-sch-main-h);--blm-msg-body-pre-bg-clr-s:var(--blm-sch-main-s);--blm-msg-body-pre-bg-clr-l:var(--blm-sch-main-l);--blm-msg-body-pre-bg-clr-a:var(--blm-sch-main-a);--blm-msg-body-pre-code-bg-clr:hsla(var(--blm-msg-body-pre-code-bg-clr-h), var(--blm-msg-body-pre-code-bg-clr-s), var(--blm-msg-body-pre-code-bg-clr-l), var(--blm-msg-body-pre-code-bg-clr-a));--blm-msg-body-pre-code-bg-clr-h:0;--blm-msg-body-pre-code-bg-clr-s:0%;--blm-msg-body-pre-code-bg-clr-l:0%;--blm-msg-body-pre-code-bg-clr-a:0;--blm-modal-z:40;--blm-modal-bg-bg-clr:hsla(var(--blm-modal-bg-bg-clr-h), var(--blm-modal-bg-bg-clr-s), var(--blm-modal-bg-bg-clr-l), var(--blm-modal-bg-bg-clr-a));--blm-modal-bg-bg-clr-h:var(--blm-sch-inv-h);--blm-modal-bg-bg-clr-s:var(--blm-sch-inv-s);--blm-modal-bg-bg-clr-l:var(--blm-sch-inv-l);--blm-modal-bg-bg-clr-a:0.86;--blm-modal-ct-m-mobile:20px;--blm-modal-ct-spacing-mobile:160px;--blm-modal-ct-spacing-tablet:40px;--blm-modal-ct-width:640px;--blm-modal-close-dim:40px;--blm-modal-close-right:20px;--blm-modal-close-top:20px;--blm-modal-card-spacing:40px;--blm-modal-card-head-bg-clr:hsla(var(--blm-modal-card-head-bg-clr-h), var(--blm-modal-card-head-bg-clr-s), var(--blm-modal-card-head-bg-clr-l), var(--blm-modal-card-head-bg-clr-a));--blm-modal-card-head-bg-clr-h:var(--blm-bg-h);--blm-modal-card-head-bg-clr-s:var(--blm-bg-s);--blm-modal-card-head-bg-clr-l:var(--blm-bg-l);--blm-modal-card-head-bg-clr-a:var(--blm-bg-a);--blm-modal-card-head-p:20px;--blm-modal-card-head-bd-bottom:1px solid var(--blm-bd);--blm-modal-card-head-radius:var(--blm-radius-lg);--blm-modal-card-title-clr:hsla(var(--blm-modal-card-title-clr-h), var(--blm-modal-card-title-clr-s), var(--blm-modal-card-title-clr-l), var(--blm-modal-card-title-clr-a));--blm-modal-card-title-clr-h:var(--blm-txt-strong-h);--blm-modal-card-title-clr-s:var(--blm-txt-strong-s);--blm-modal-card-title-clr-l:var(--blm-txt-strong-l);--blm-modal-card-title-clr-a:var(--blm-txt-strong-a);--blm-modal-card-title-s:var(--blm-s-4);--blm-modal-card-title-line-height:1;--blm-modal-card-foot-radius:var(--blm-radius-lg);--blm-modal-card-foot-bd-top:1px solid var(--blm-bd);--blm-modal-card-body-bg-clr:hsla(var(--blm-modal-card-body-bg-clr-h), var(--blm-modal-card-body-bg-clr-s), var(--blm-modal-card-body-bg-clr-l), var(--blm-modal-card-body-bg-clr-a));--blm-modal-card-body-bg-clr-h:var(--blm-sch-main-h);--blm-modal-card-body-bg-clr-s:var(--blm-sch-main-s);--blm-modal-card-body-bg-clr-l:var(--blm-sch-main-l);--blm-modal-card-body-bg-clr-a:var(--blm-sch-main-a);--blm-modal-card-body-p:20px;--blm-nav-itm-clr:hsla(var(--blm-nav-itm-clr-h), var(--blm-nav-itm-clr-s), var(--blm-nav-itm-clr-l), var(--blm-nav-itm-clr-a));--blm-nav-itm-clr-h:var(--blm-txt-h);--blm-nav-itm-clr-s:var(--blm-txt-s);--blm-nav-itm-clr-l:var(--blm-txt-l);--blm-nav-itm-clr-a:var(--blm-txt-a);--blm-nav-bg-clr:hsla(var(--blm-nav-bg-clr-h), var(--blm-nav-bg-clr-s), var(--blm-nav-bg-clr-l), var(--blm-nav-bg-clr-a));--blm-nav-bg-clr-h:var(--blm-sch-main-h);--blm-nav-bg-clr-s:var(--blm-sch-main-s);--blm-nav-bg-clr-l:var(--blm-sch-main-l);--blm-nav-bg-clr-a:var(--blm-sch-main-a);--blm-nav-height:3.25rem;--blm-nav-z:30;--blm-nav-box-shadow-s:0 2px 0 0;--blm-nav-box-shadow-clr:hsla(var(--blm-nav-box-shadow-clr-h), var(--blm-nav-box-shadow-clr-s), var(--blm-nav-box-shadow-clr-l), var(--blm-nav-box-shadow-clr-a));--blm-nav-box-shadow-clr-h:var(--blm-bg-h);--blm-nav-box-shadow-clr-s:var(--blm-bg-s);--blm-nav-box-shadow-clr-l:var(--blm-bg-l);--blm-nav-box-shadow-clr-a:var(--blm-bg-a);--blm-nav-fixed-z:30;--blm-nav-bottom-box-shadow-s:0 -2px 0 0;--blm-nav-burger-clr:hsla(var(--blm-nav-burger-clr-h), var(--blm-nav-burger-clr-s), var(--blm-nav-burger-clr-l), var(--blm-nav-burger-clr-a));--blm-nav-burger-clr-h:var(--blm-nav-itm-clr-h);--blm-nav-burger-clr-s:var(--blm-nav-itm-clr-s);--blm-nav-burger-clr-l:var(--blm-nav-itm-clr-l);--blm-nav-burger-clr-a:var(--blm-nav-itm-clr-a);--blm-speed:86ms;--blm-easing:ease-out;--blm-nav-itm-hov-bg-clr:hsla(var(--blm-nav-itm-hov-bg-clr-h), var(--blm-nav-itm-hov-bg-clr-s), var(--blm-nav-itm-hov-bg-clr-l), var(--blm-nav-itm-hov-bg-clr-a));--blm-nav-itm-hov-bg-clr-h:var(--blm-sch-main-bis-h);--blm-nav-itm-hov-bg-clr-s:var(--blm-sch-main-bis-s);--blm-nav-itm-hov-bg-clr-l:var(--blm-sch-main-bis-l);--blm-nav-itm-hov-bg-clr-a:var(--blm-sch-main-bis-a);--blm-nav-itm-hov-clr:hsla(var(--blm-nav-itm-hov-clr-h), var(--blm-nav-itm-hov-clr-s), var(--blm-nav-itm-hov-clr-l), var(--blm-nav-itm-hov-clr-a));--blm-nav-itm-hov-clr-h:var(--blm-link-h);--blm-nav-itm-hov-clr-s:var(--blm-link-s);--blm-nav-itm-hov-clr-l:var(--blm-link-l);--blm-nav-itm-hov-clr-a:var(--blm-link-a);--blm-nav-itm-img-max-height:1.75rem;--blm-nav-tab-hov-bg-clr:hsla(var(--blm-nav-tab-hov-bg-clr-h), var(--blm-nav-tab-hov-bg-clr-s), var(--blm-nav-tab-hov-bg-clr-l), var(--blm-nav-tab-hov-bg-clr-a));--blm-nav-tab-hov-bg-clr-h:0;--blm-nav-tab-hov-bg-clr-s:0%;--blm-nav-tab-hov-bg-clr-l:0%;--blm-nav-tab-hov-bg-clr-a:0;--blm-nav-tab-hov-bd-bottom-clr:hsla(var(--blm-nav-tab-hov-bd-bottom-clr-h), var(--blm-nav-tab-hov-bd-bottom-clr-s), var(--blm-nav-tab-hov-bd-bottom-clr-l), var(--blm-nav-tab-hov-bd-bottom-clr-a));--blm-nav-tab-hov-bd-bottom-clr-h:var(--blm-link-h);--blm-nav-tab-hov-bd-bottom-clr-s:var(--blm-link-s);--blm-nav-tab-hov-bd-bottom-clr-l:var(--blm-link-l);--blm-nav-tab-hov-bd-bottom-clr-a:var(--blm-link-a);--blm-nav-tab-act-bg-clr:hsla(var(--blm-nav-tab-act-bg-clr-h), var(--blm-nav-tab-act-bg-clr-s), var(--blm-nav-tab-act-bg-clr-l), var(--blm-nav-tab-act-bg-clr-a));--blm-nav-tab-act-bg-clr-h:0;--blm-nav-tab-act-bg-clr-s:0%;--blm-nav-tab-act-bg-clr-l:0%;--blm-nav-tab-act-bg-clr-a:0;--blm-nav-tab-act-bd-bottom-clr:hsla(var(--blm-nav-tab-act-bd-bottom-clr-h), var(--blm-nav-tab-act-bd-bottom-clr-s), var(--blm-nav-tab-act-bd-bottom-clr-l), var(--blm-nav-tab-act-bd-bottom-clr-a));--blm-nav-tab-act-bd-bottom-clr-h:var(--blm-link-h);--blm-nav-tab-act-bd-bottom-clr-s:var(--blm-link-s);--blm-nav-tab-act-bd-bottom-clr-l:var(--blm-link-l);--blm-nav-tab-act-bd-bottom-clr-a:var(--blm-link-a);--blm-nav-tab-act-bd-bottom-style:solid;--blm-nav-tab-act-bd-bottom-width:3px;--blm-nav-tab-act-clr:hsla(var(--blm-nav-tab-act-clr-h), var(--blm-nav-tab-act-clr-s), var(--blm-nav-tab-act-clr-l), var(--blm-nav-tab-act-clr-a));--blm-nav-tab-act-clr-h:var(--blm-link-h);--blm-nav-tab-act-clr-s:var(--blm-link-s);--blm-nav-tab-act-clr-l:var(--blm-link-l);--blm-nav-tab-act-clr-a:var(--blm-link-a);--blm-nav-drp-arrow:hsla(var(--blm-nav-drp-arrow-h), var(--blm-nav-drp-arrow-s), var(--blm-nav-drp-arrow-l), var(--blm-nav-drp-arrow-a));--blm-nav-drp-arrow-h:var(--blm-link-h);--blm-nav-drp-arrow-s:var(--blm-link-s);--blm-nav-drp-arrow-l:var(--blm-link-l);--blm-nav-drp-arrow-a:var(--blm-link-a);--blm-nav-dvd-bg-clr:hsla(var(--blm-nav-dvd-bg-clr-h), var(--blm-nav-dvd-bg-clr-s), var(--blm-nav-dvd-bg-clr-l), var(--blm-nav-dvd-bg-clr-a));--blm-nav-dvd-bg-clr-h:var(--blm-bg-h);--blm-nav-dvd-bg-clr-s:var(--blm-bg-s);--blm-nav-dvd-bg-clr-l:var(--blm-bg-l);--blm-nav-dvd-bg-clr-a:var(--blm-bg-a);--blm-nav-dvd-height:2px;--blm-nav-p-vertical:1rem;--blm-nav-p-horizontal:2rem;--blm-nav-drp-itm-hov-bg-clr:hsla(var(--blm-nav-drp-itm-hov-bg-clr-h), var(--blm-nav-drp-itm-hov-bg-clr-s), var(--blm-nav-drp-itm-hov-bg-clr-l), var(--blm-nav-drp-itm-hov-bg-clr-a));--blm-nav-drp-itm-hov-bg-clr-h:var(--blm-bg-h);--blm-nav-drp-itm-hov-bg-clr-s:var(--blm-bg-s);--blm-nav-drp-itm-hov-bg-clr-l:var(--blm-bg-l);--blm-nav-drp-itm-hov-bg-clr-a:var(--blm-bg-a);--blm-nav-drp-itm-hov-clr:hsla(var(--blm-nav-drp-itm-hov-clr-h), var(--blm-nav-drp-itm-hov-clr-s), var(--blm-nav-drp-itm-hov-clr-l), var(--blm-nav-drp-itm-hov-clr-a));--blm-nav-drp-itm-hov-clr-h:var(--blm-sch-inv-h);--blm-nav-drp-itm-hov-clr-s:var(--blm-sch-inv-s);--blm-nav-drp-itm-hov-clr-l:var(--blm-sch-inv-l);--blm-nav-drp-itm-hov-clr-a:var(--blm-sch-inv-a);--blm-nav-drp-itm-act-bg-clr:hsla(var(--blm-nav-drp-itm-act-bg-clr-h), var(--blm-nav-drp-itm-act-bg-clr-s), var(--blm-nav-drp-itm-act-bg-clr-l), var(--blm-nav-drp-itm-act-bg-clr-a));--blm-nav-drp-itm-act-bg-clr-h:var(--blm-bg-h);--blm-nav-drp-itm-act-bg-clr-s:var(--blm-bg-s);--blm-nav-drp-itm-act-bg-clr-l:var(--blm-bg-l);--blm-nav-drp-itm-act-bg-clr-a:var(--blm-bg-a);--blm-nav-drp-itm-act-clr:hsla(var(--blm-nav-drp-itm-act-clr-h), var(--blm-nav-drp-itm-act-clr-s), var(--blm-nav-drp-itm-act-clr-l), var(--blm-nav-drp-itm-act-clr-a));--blm-nav-drp-itm-act-clr-h:var(--blm-link-h);--blm-nav-drp-itm-act-clr-s:var(--blm-link-s);--blm-nav-drp-itm-act-clr-l:var(--blm-link-l);--blm-nav-drp-itm-act-clr-a:var(--blm-link-a);--blm-nav-drp-bd-top:2px solid var(--blm-bd);--blm-nav-drp-radius:var(--blm-radius-lg);--blm-nav-drp-bg-clr:hsla(var(--blm-nav-drp-bg-clr-h), var(--blm-nav-drp-bg-clr-s), var(--blm-nav-drp-bg-clr-l), var(--blm-nav-drp-bg-clr-a));--blm-nav-drp-bg-clr-h:var(--blm-sch-main-h);--blm-nav-drp-bg-clr-s:var(--blm-sch-main-s);--blm-nav-drp-bg-clr-l:var(--blm-sch-main-l);--blm-nav-drp-bg-clr-a:var(--blm-sch-main-a);--blm-nav-drp-z:20;--blm-nav-drp-boxed-radius:var(--blm-radius-lg);--blm-nav-drp-boxed-shadow:0 8px 8px hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.1),0 0 0 1px hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.1);--blm-nav-drp-offset:-4px;--blm-nav-itm-act-clr:hsla(var(--blm-nav-itm-act-clr-h), var(--blm-nav-itm-act-clr-s), var(--blm-nav-itm-act-clr-l), var(--blm-nav-itm-act-clr-a));--blm-nav-itm-act-clr-h:var(--blm-sch-inv-h);--blm-nav-itm-act-clr-s:var(--blm-sch-inv-s);--blm-nav-itm-act-clr-l:var(--blm-sch-inv-l);--blm-nav-itm-act-clr-a:var(--blm-sch-inv-a);--blm-nav-itm-act-bg-clr:hsla(var(--blm-nav-itm-act-bg-clr-h), var(--blm-nav-itm-act-bg-clr-s), var(--blm-nav-itm-act-bg-clr-l), var(--blm-nav-itm-act-bg-clr-a));--blm-nav-itm-act-bg-clr-h:0;--blm-nav-itm-act-bg-clr-s:0%;--blm-nav-itm-act-bg-clr-l:0%;--blm-nav-itm-act-bg-clr-a:0;--blm-pag-m:-0.25rem;--blm-pag-itm-font-s:1em;--blm-pag-itm-m:0.25rem;--blm-pag-itm-p-left:0.5em;--blm-pag-itm-p-right:0.5em;--blm-pag-bd-clr:hsla(var(--blm-pag-bd-clr-h), var(--blm-pag-bd-clr-s), var(--blm-pag-bd-clr-l), var(--blm-pag-bd-clr-a));--blm-pag-bd-clr-h:var(--blm-bd-h);--blm-pag-bd-clr-s:var(--blm-bd-s);--blm-pag-bd-clr-l:var(--blm-bd-l);--blm-pag-bd-clr-a:var(--blm-bd-a);--blm-pag-clr:hsla(var(--blm-pag-clr-h), var(--blm-pag-clr-s), var(--blm-pag-clr-l), var(--blm-pag-clr-a));--blm-pag-clr-h:var(--blm-txt-strong-h);--blm-pag-clr-s:var(--blm-txt-strong-s);--blm-pag-clr-l:var(--blm-txt-strong-l);--blm-pag-clr-a:var(--blm-txt-strong-a);--blm-pag-min-width:var(--blm-ctrl-height);--blm-pag-hov-bd-clr:hsla(var(--blm-pag-hov-bd-clr-h), var(--blm-pag-hov-bd-clr-s), var(--blm-pag-hov-bd-clr-l), var(--blm-pag-hov-bd-clr-a));--blm-pag-hov-bd-clr-h:var(--blm-link-hov-bd-h);--blm-pag-hov-bd-clr-s:var(--blm-link-hov-bd-s);--blm-pag-hov-bd-clr-l:var(--blm-link-hov-bd-l);--blm-pag-hov-bd-clr-a:var(--blm-link-hov-bd-a);--blm-pag-hov-clr:hsla(var(--blm-pag-hov-clr-h), var(--blm-pag-hov-clr-s), var(--blm-pag-hov-clr-l), var(--blm-pag-hov-clr-a));--blm-pag-hov-clr-h:var(--blm-link-hov-h);--blm-pag-hov-clr-s:var(--blm-link-hov-s);--blm-pag-hov-clr-l:var(--blm-link-hov-l);--blm-pag-hov-clr-a:var(--blm-link-hov-a);--blm-pag-foc-bd-clr:hsla(var(--blm-pag-foc-bd-clr-h), var(--blm-pag-foc-bd-clr-s), var(--blm-pag-foc-bd-clr-l), var(--blm-pag-foc-bd-clr-a));--blm-pag-foc-bd-clr-h:var(--blm-link-foc-bd-h);--blm-pag-foc-bd-clr-s:var(--blm-link-foc-bd-s);--blm-pag-foc-bd-clr-l:var(--blm-link-foc-bd-l);--blm-pag-foc-bd-clr-a:var(--blm-link-foc-bd-a);--blm-pag-shadow-inset:inset 0 1px 2px hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.2);--blm-pag-dsbl-bg-clr:hsla(var(--blm-pag-dsbl-bg-clr-h), var(--blm-pag-dsbl-bg-clr-s), var(--blm-pag-dsbl-bg-clr-l), var(--blm-pag-dsbl-bg-clr-a));--blm-pag-dsbl-bg-clr-h:var(--blm-bd-h);--blm-pag-dsbl-bg-clr-s:var(--blm-bd-s);--blm-pag-dsbl-bg-clr-l:var(--blm-bd-l);--blm-pag-dsbl-bg-clr-a:var(--blm-bd-a);--blm-pag-dsbl-bd-clr:hsla(var(--blm-pag-dsbl-bd-clr-h), var(--blm-pag-dsbl-bd-clr-s), var(--blm-pag-dsbl-bd-clr-l), var(--blm-pag-dsbl-bd-clr-a));--blm-pag-dsbl-bd-clr-h:var(--blm-bd-h);--blm-pag-dsbl-bd-clr-s:var(--blm-bd-s);--blm-pag-dsbl-bd-clr-l:var(--blm-bd-l);--blm-pag-dsbl-bd-clr-a:var(--blm-bd-a);--blm-pag-dsbl-clr:hsla(var(--blm-pag-dsbl-clr-h), var(--blm-pag-dsbl-clr-s), var(--blm-pag-dsbl-clr-l), var(--blm-pag-dsbl-clr-a));--blm-pag-dsbl-clr-h:var(--blm-txt-light-h);--blm-pag-dsbl-clr-s:var(--blm-txt-light-s);--blm-pag-dsbl-clr-l:var(--blm-txt-light-l);--blm-pag-dsbl-clr-a:var(--blm-txt-light-a);--blm-pag-cur-bg-clr:hsla(var(--blm-pag-cur-bg-clr-h), var(--blm-pag-cur-bg-clr-s), var(--blm-pag-cur-bg-clr-l), var(--blm-pag-cur-bg-clr-a));--blm-pag-cur-bg-clr-h:var(--blm-link-h);--blm-pag-cur-bg-clr-s:var(--blm-link-s);--blm-pag-cur-bg-clr-l:var(--blm-link-l);--blm-pag-cur-bg-clr-a:var(--blm-link-a);--blm-pag-cur-bd-clr:hsla(var(--blm-pag-cur-bd-clr-h), var(--blm-pag-cur-bd-clr-s), var(--blm-pag-cur-bd-clr-l), var(--blm-pag-cur-bd-clr-a));--blm-pag-cur-bd-clr-h:var(--blm-link-h);--blm-pag-cur-bd-clr-s:var(--blm-link-s);--blm-pag-cur-bd-clr-l:var(--blm-link-l);--blm-pag-cur-bd-clr-a:var(--blm-link-a);--blm-pag-cur-clr:hsla(var(--blm-pag-cur-clr-h), var(--blm-pag-cur-clr-s), var(--blm-pag-cur-clr-l), var(--blm-pag-cur-clr-a));--blm-pag-cur-clr-h:var(--blm-link-inv-h);--blm-pag-cur-clr-s:var(--blm-link-inv-s);--blm-pag-cur-clr-l:var(--blm-link-inv-l);--blm-pag-cur-clr-a:var(--blm-link-inv-a);--blm-pag-ellipsis-clr:hsla(var(--blm-pag-ellipsis-clr-h), var(--blm-pag-ellipsis-clr-s), var(--blm-pag-ellipsis-clr-l), var(--blm-pag-ellipsis-clr-a));--blm-pag-ellipsis-clr-h:var(--blm-grey-light-h);--blm-pag-ellipsis-clr-s:var(--blm-grey-light-s);--blm-pag-ellipsis-clr-l:var(--blm-grey-light-l);--blm-pag-ellipsis-clr-a:var(--blm-grey-light-a);--blm-pnl-radius:var(--blm-radius-lg);--blm-pnl-shadow:0 0.5em 1em -0.125em hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.1),0 0px 0 1px hsla(var(--blm-sch-inv-h), var(--blm-sch-inv-s), var(--blm-sch-inv-l), 0.02);--blm-pnl-m:var(--blm-block-spacing);--blm-pnl-itm-bd:1px solid var(--blm-bd-light);--blm-pnl-hdg-bg-clr:hsla(var(--blm-pnl-hdg-bg-clr-h), var(--blm-pnl-hdg-bg-clr-s), var(--blm-pnl-hdg-bg-clr-l), var(--blm-pnl-hdg-bg-clr-a));--blm-pnl-hdg-bg-clr-h:var(--blm-bd-light-h);--blm-pnl-hdg-bg-clr-s:var(--blm-bd-light-s);--blm-pnl-hdg-bg-clr-l:var(--blm-bd-light-l);--blm-pnl-hdg-bg-clr-a:var(--blm-bd-light-a);--blm-pnl-hdg-clr:hsla(var(--blm-pnl-hdg-clr-h), var(--blm-pnl-hdg-clr-s), var(--blm-pnl-hdg-clr-l), var(--blm-pnl-hdg-clr-a));--blm-pnl-hdg-clr-h:var(--blm-txt-strong-h);--blm-pnl-hdg-clr-s:var(--blm-txt-strong-s);--blm-pnl-hdg-clr-l:var(--blm-txt-strong-l);--blm-pnl-hdg-clr-a:var(--blm-txt-strong-a);--blm-pnl-hdg-s:1.25em;--blm-pnl-hdg-weight:var(--blm-weight-bold);--blm-pnl-hdg-line-height:1.25;--blm-pnl-hdg-p:0.75em 1em;--blm-pnl-tabs-font-s:0.875em;--blm-pnl-tab-bd-bottom:1px solid var(--blm-bd);--blm-pnl-tab-act-bd-bottom-clr:hsla(var(--blm-pnl-tab-act-bd-bottom-clr-h), var(--blm-pnl-tab-act-bd-bottom-clr-s), var(--blm-pnl-tab-act-bd-bottom-clr-l), var(--blm-pnl-tab-act-bd-bottom-clr-a));--blm-pnl-tab-act-bd-bottom-clr-h:var(--blm-link-act-bd-h);--blm-pnl-tab-act-bd-bottom-clr-s:var(--blm-link-act-bd-s);--blm-pnl-tab-act-bd-bottom-clr-l:var(--blm-link-act-bd-l);--blm-pnl-tab-act-bd-bottom-clr-a:var(--blm-link-act-bd-a);--blm-pnl-tab-act-clr:hsla(var(--blm-pnl-tab-act-clr-h), var(--blm-pnl-tab-act-clr-s), var(--blm-pnl-tab-act-clr-l), var(--blm-pnl-tab-act-clr-a));--blm-pnl-tab-act-clr-h:var(--blm-link-act-h);--blm-pnl-tab-act-clr-s:var(--blm-link-act-s);--blm-pnl-tab-act-clr-l:var(--blm-link-act-l);--blm-pnl-tab-act-clr-a:var(--blm-link-act-a);--blm-pnl-list-itm-clr:hsla(var(--blm-pnl-list-itm-clr-h), var(--blm-pnl-list-itm-clr-s), var(--blm-pnl-list-itm-clr-l), var(--blm-pnl-list-itm-clr-a));--blm-pnl-list-itm-clr-h:var(--blm-txt-h);--blm-pnl-list-itm-clr-s:var(--blm-txt-s);--blm-pnl-list-itm-clr-l:var(--blm-txt-l);--blm-pnl-list-itm-clr-a:var(--blm-txt-a);--blm-pnl-list-itm-hov-clr:hsla(var(--blm-pnl-list-itm-hov-clr-h), var(--blm-pnl-list-itm-hov-clr-s), var(--blm-pnl-list-itm-hov-clr-l), var(--blm-pnl-list-itm-hov-clr-a));--blm-pnl-list-itm-hov-clr-h:var(--blm-link-h);--blm-pnl-list-itm-hov-clr-s:var(--blm-link-s);--blm-pnl-list-itm-hov-clr-l:var(--blm-link-l);--blm-pnl-list-itm-hov-clr-a:var(--blm-link-a);--blm-pnl-block-clr:hsla(var(--blm-pnl-block-clr-h), var(--blm-pnl-block-clr-s), var(--blm-pnl-block-clr-l), var(--blm-pnl-block-clr-a));--blm-pnl-block-clr-h:var(--blm-txt-strong-h);--blm-pnl-block-clr-s:var(--blm-txt-strong-s);--blm-pnl-block-clr-l:var(--blm-txt-strong-l);--blm-pnl-block-clr-a:var(--blm-txt-strong-a);--blm-pnl-block-act-bd-left-clr:hsla(var(--blm-pnl-block-act-bd-left-clr-h), var(--blm-pnl-block-act-bd-left-clr-s), var(--blm-pnl-block-act-bd-left-clr-l), var(--blm-pnl-block-act-bd-left-clr-a));--blm-pnl-block-act-bd-left-clr-h:var(--blm-link-h);--blm-pnl-block-act-bd-left-clr-s:var(--blm-link-s);--blm-pnl-block-act-bd-left-clr-l:var(--blm-link-l);--blm-pnl-block-act-bd-left-clr-a:var(--blm-link-a);--blm-pnl-block-act-clr:hsla(var(--blm-pnl-block-act-clr-h), var(--blm-pnl-block-act-clr-s), var(--blm-pnl-block-act-clr-l), var(--blm-pnl-block-act-clr-a));--blm-pnl-block-act-clr-h:var(--blm-link-act-h);--blm-pnl-block-act-clr-s:var(--blm-link-act-s);--blm-pnl-block-act-clr-l:var(--blm-link-act-l);--blm-pnl-block-act-clr-a:var(--blm-link-act-a);--blm-pnl-block-act-icon-clr:hsla(var(--blm-pnl-block-act-icon-clr-h), var(--blm-pnl-block-act-icon-clr-s), var(--blm-pnl-block-act-icon-clr-l), var(--blm-pnl-block-act-icon-clr-a));--blm-pnl-block-act-icon-clr-h:var(--blm-link-h);--blm-pnl-block-act-icon-clr-s:var(--blm-link-s);--blm-pnl-block-act-icon-clr-l:var(--blm-link-l);--blm-pnl-block-act-icon-clr-a:var(--blm-link-a);--blm-pnl-block-hov-bg-clr:hsla(var(--blm-pnl-block-hov-bg-clr-h), var(--blm-pnl-block-hov-bg-clr-s), var(--blm-pnl-block-hov-bg-clr-l), var(--blm-pnl-block-hov-bg-clr-a));--blm-pnl-block-hov-bg-clr-h:var(--blm-bg-h);--blm-pnl-block-hov-bg-clr-s:var(--blm-bg-s);--blm-pnl-block-hov-bg-clr-l:var(--blm-bg-l);--blm-pnl-block-hov-bg-clr-a:var(--blm-bg-a);--blm-pnl-icon-clr:hsla(var(--blm-pnl-icon-clr-h), var(--blm-pnl-icon-clr-s), var(--blm-pnl-icon-clr-l), var(--blm-pnl-icon-clr-a));--blm-pnl-icon-clr-h:var(--blm-txt-light-h);--blm-pnl-icon-clr-s:var(--blm-txt-light-s);--blm-pnl-icon-clr-l:var(--blm-txt-light-l);--blm-pnl-icon-clr-a:var(--blm-txt-light-a);--blm-tabs-bd-bottom-clr:hsla(var(--blm-tabs-bd-bottom-clr-h), var(--blm-tabs-bd-bottom-clr-s), var(--blm-tabs-bd-bottom-clr-l), var(--blm-tabs-bd-bottom-clr-a));--blm-tabs-bd-bottom-clr-h:var(--blm-bd-h);--blm-tabs-bd-bottom-clr-s:var(--blm-bd-s);--blm-tabs-bd-bottom-clr-l:var(--blm-bd-l);--blm-tabs-bd-bottom-clr-a:var(--blm-bd-a);--blm-tabs-bd-bottom-style:solid;--blm-tabs-bd-bottom-width:1px;--blm-tabs-link-clr:hsla(var(--blm-tabs-link-clr-h), var(--blm-tabs-link-clr-s), var(--blm-tabs-link-clr-l), var(--blm-tabs-link-clr-a));--blm-tabs-link-clr-h:var(--blm-txt-h);--blm-tabs-link-clr-s:var(--blm-txt-s);--blm-tabs-link-clr-l:var(--blm-txt-l);--blm-tabs-link-clr-a:var(--blm-txt-a);--blm-tabs-link-p:0.5em 1em;--blm-tabs-link-hov-bd-bottom-clr:hsla(var(--blm-tabs-link-hov-bd-bottom-clr-h), var(--blm-tabs-link-hov-bd-bottom-clr-s), var(--blm-tabs-link-hov-bd-bottom-clr-l), var(--blm-tabs-link-hov-bd-bottom-clr-a));--blm-tabs-link-hov-bd-bottom-clr-h:var(--blm-txt-strong-h);--blm-tabs-link-hov-bd-bottom-clr-s:var(--blm-txt-strong-s);--blm-tabs-link-hov-bd-bottom-clr-l:var(--blm-txt-strong-l);--blm-tabs-link-hov-bd-bottom-clr-a:var(--blm-txt-strong-a);--blm-tabs-link-hov-clr:hsla(var(--blm-tabs-link-hov-clr-h), var(--blm-tabs-link-hov-clr-s), var(--blm-tabs-link-hov-clr-l), var(--blm-tabs-link-hov-clr-a));--blm-tabs-link-hov-clr-h:var(--blm-txt-strong-h);--blm-tabs-link-hov-clr-s:var(--blm-txt-strong-s);--blm-tabs-link-hov-clr-l:var(--blm-txt-strong-l);--blm-tabs-link-hov-clr-a:var(--blm-txt-strong-a);--blm-tabs-link-act-bd-bottom-clr:hsla(var(--blm-tabs-link-act-bd-bottom-clr-h), var(--blm-tabs-link-act-bd-bottom-clr-s), var(--blm-tabs-link-act-bd-bottom-clr-l), var(--blm-tabs-link-act-bd-bottom-clr-a));--blm-tabs-link-act-bd-bottom-clr-h:var(--blm-link-h);--blm-tabs-link-act-bd-bottom-clr-s:var(--blm-link-s);--blm-tabs-link-act-bd-bottom-clr-l:var(--blm-link-l);--blm-tabs-link-act-bd-bottom-clr-a:var(--blm-link-a);--blm-tabs-link-act-clr:hsla(var(--blm-tabs-link-act-clr-h), var(--blm-tabs-link-act-clr-s), var(--blm-tabs-link-act-clr-l), var(--blm-tabs-link-act-clr-a));--blm-tabs-link-act-clr-h:var(--blm-link-h);--blm-tabs-link-act-clr-s:var(--blm-link-s);--blm-tabs-link-act-clr-l:var(--blm-link-l);--blm-tabs-link-act-clr-a:var(--blm-link-a);--blm-tabs-boxed-link-radius:var(--blm-radius);--blm-tabs-boxed-link-hov-bg-clr:hsla(var(--blm-tabs-boxed-link-hov-bg-clr-h), var(--blm-tabs-boxed-link-hov-bg-clr-s), var(--blm-tabs-boxed-link-hov-bg-clr-l), var(--blm-tabs-boxed-link-hov-bg-clr-a));--blm-tabs-boxed-link-hov-bg-clr-h:var(--blm-bg-h);--blm-tabs-boxed-link-hov-bg-clr-s:var(--blm-bg-s);--blm-tabs-boxed-link-hov-bg-clr-l:var(--blm-bg-l);--blm-tabs-boxed-link-hov-bg-clr-a:var(--blm-bg-a);--blm-tabs-boxed-link-hov-bd-bottom-clr:hsla(var(--blm-tabs-boxed-link-hov-bd-bottom-clr-h), var(--blm-tabs-boxed-link-hov-bd-bottom-clr-s), var(--blm-tabs-boxed-link-hov-bd-bottom-clr-l), var(--blm-tabs-boxed-link-hov-bd-bottom-clr-a));--blm-tabs-boxed-link-hov-bd-bottom-clr-h:var(--blm-bd-h);--blm-tabs-boxed-link-hov-bd-bottom-clr-s:var(--blm-bd-s);--blm-tabs-boxed-link-hov-bd-bottom-clr-l:var(--blm-bd-l);--blm-tabs-boxed-link-hov-bd-bottom-clr-a:var(--blm-bd-a);--blm-tabs-boxed-link-act-bg-clr:hsla(var(--blm-tabs-boxed-link-act-bg-clr-h), var(--blm-tabs-boxed-link-act-bg-clr-s), var(--blm-tabs-boxed-link-act-bg-clr-l), var(--blm-tabs-boxed-link-act-bg-clr-a));--blm-tabs-boxed-link-act-bg-clr-h:var(--blm-sch-main-h);--blm-tabs-boxed-link-act-bg-clr-s:var(--blm-sch-main-s);--blm-tabs-boxed-link-act-bg-clr-l:var(--blm-sch-main-l);--blm-tabs-boxed-link-act-bg-clr-a:var(--blm-sch-main-a);--blm-tabs-boxed-link-act-bd-clr:hsla(var(--blm-tabs-boxed-link-act-bd-clr-h), var(--blm-tabs-boxed-link-act-bd-clr-s), var(--blm-tabs-boxed-link-act-bd-clr-l), var(--blm-tabs-boxed-link-act-bd-clr-a));--blm-tabs-boxed-link-act-bd-clr-h:var(--blm-bd-h);--blm-tabs-boxed-link-act-bd-clr-s:var(--blm-bd-s);--blm-tabs-boxed-link-act-bd-clr-l:var(--blm-bd-l);--blm-tabs-boxed-link-act-bd-clr-a:var(--blm-bd-a);--blm-tabs-boxed-link-act-bd-bottom-clr:hsla(var(--blm-tabs-boxed-link-act-bd-bottom-clr-h), var(--blm-tabs-boxed-link-act-bd-bottom-clr-s), var(--blm-tabs-boxed-link-act-bd-bottom-clr-l), var(--blm-tabs-boxed-link-act-bd-bottom-clr-a));--blm-tabs-boxed-link-act-bd-bottom-clr-h:0;--blm-tabs-boxed-link-act-bd-bottom-clr-s:0%;--blm-tabs-boxed-link-act-bd-bottom-clr-l:0%;--blm-tabs-boxed-link-act-bd-bottom-clr-a:0;--blm-tabs-tgl-link-bd-clr:hsla(var(--blm-tabs-tgl-link-bd-clr-h), var(--blm-tabs-tgl-link-bd-clr-s), var(--blm-tabs-tgl-link-bd-clr-l), var(--blm-tabs-tgl-link-bd-clr-a));--blm-tabs-tgl-link-bd-clr-h:var(--blm-bd-h);--blm-tabs-tgl-link-bd-clr-s:var(--blm-bd-s);--blm-tabs-tgl-link-bd-clr-l:var(--blm-bd-l);--blm-tabs-tgl-link-bd-clr-a:var(--blm-bd-a);--blm-tabs-tgl-link-bd-style:solid;--blm-tabs-tgl-link-bd-width:1px;--blm-tabs-tgl-link-hov-bg-clr:hsla(var(--blm-tabs-tgl-link-hov-bg-clr-h), var(--blm-tabs-tgl-link-hov-bg-clr-s), var(--blm-tabs-tgl-link-hov-bg-clr-l), var(--blm-tabs-tgl-link-hov-bg-clr-a));--blm-tabs-tgl-link-hov-bg-clr-h:var(--blm-bg-h);--blm-tabs-tgl-link-hov-bg-clr-s:var(--blm-bg-s);--blm-tabs-tgl-link-hov-bg-clr-l:var(--blm-bg-l);--blm-tabs-tgl-link-hov-bg-clr-a:var(--blm-bg-a);--blm-tabs-tgl-link-hov-bd-clr:hsla(var(--blm-tabs-tgl-link-hov-bd-clr-h), var(--blm-tabs-tgl-link-hov-bd-clr-s), var(--blm-tabs-tgl-link-hov-bd-clr-l), var(--blm-tabs-tgl-link-hov-bd-clr-a));--blm-tabs-tgl-link-hov-bd-clr-h:var(--blm-bd-hov-h);--blm-tabs-tgl-link-hov-bd-clr-s:var(--blm-bd-hov-s);--blm-tabs-tgl-link-hov-bd-clr-l:var(--blm-bd-hov-l);--blm-tabs-tgl-link-hov-bd-clr-a:var(--blm-bd-hov-a);--blm-tabs-tgl-link-radius:var(--blm-radius);--blm-tabs-tgl-link-act-bg-clr:hsla(var(--blm-tabs-tgl-link-act-bg-clr-h), var(--blm-tabs-tgl-link-act-bg-clr-s), var(--blm-tabs-tgl-link-act-bg-clr-l), var(--blm-tabs-tgl-link-act-bg-clr-a));--blm-tabs-tgl-link-act-bg-clr-h:var(--blm-link-h);--blm-tabs-tgl-link-act-bg-clr-s:var(--blm-link-s);--blm-tabs-tgl-link-act-bg-clr-l:var(--blm-link-l);--blm-tabs-tgl-link-act-bg-clr-a:var(--blm-link-a);--blm-tabs-tgl-link-act-bd-clr:hsla(var(--blm-tabs-tgl-link-act-bd-clr-h), var(--blm-tabs-tgl-link-act-bd-clr-s), var(--blm-tabs-tgl-link-act-bd-clr-l), var(--blm-tabs-tgl-link-act-bd-clr-a));--blm-tabs-tgl-link-act-bd-clr-h:var(--blm-link-h);--blm-tabs-tgl-link-act-bd-clr-s:var(--blm-link-s);--blm-tabs-tgl-link-act-bd-clr-l:var(--blm-link-l);--blm-tabs-tgl-link-act-bd-clr-a:var(--blm-link-a);--blm-tabs-tgl-link-act-clr:hsla(var(--blm-tabs-tgl-link-act-clr-h), var(--blm-tabs-tgl-link-act-clr-s), var(--blm-tabs-tgl-link-act-clr-l), var(--blm-tabs-tgl-link-act-clr-a));--blm-tabs-tgl-link-act-clr-h:var(--blm-link-inv-h);--blm-tabs-tgl-link-act-clr-s:var(--blm-link-inv-s);--blm-tabs-tgl-link-act-clr-l:var(--blm-link-inv-l);--blm-tabs-tgl-link-act-clr-a:var(--blm-link-inv-a);--blm-column-gap:0.75rem;--blm-tile-spacing:0.75rem;--blm-weight-light:300;--blm-weight-medium:500;--blm-family-secondary:var(--blm-family-sans-serif);--blm-hero-body-p-small:1.5rem;--blm-hero-body-p-medium:9rem 1.5rem;--blm-hero-body-p-lg:18rem 1.5rem;--blm-hero-body-p:3rem 1.5rem;--blm-sct-p:3rem 1.5rem;--blm-sct-p-medium:9rem 1.5rem;--blm-sct-p-lg:18rem 1.5rem;--blm-ft-bg-clr:hsla(var(--blm-ft-bg-clr-h), var(--blm-ft-bg-clr-s), var(--blm-ft-bg-clr-l), var(--blm-ft-bg-clr-a));--blm-ft-bg-clr-h:var(--blm-sch-main-bis-h);--blm-ft-bg-clr-s:var(--blm-sch-main-bis-s);--blm-ft-bg-clr-l:var(--blm-sch-main-bis-l);--blm-ft-bg-clr-a:var(--blm-sch-main-bis-a);--blm-ft-p:3rem 1.5rem 6rem;--blm-ft-clr:inherit}"
`;

exports[`basic simple: js 1`] = `
"/**
 * Make a map and return a function for checking if a key
 * is in that map.
 * IMPORTANT: all calls of this function must be prefixed with
 * \\\\/\\\\*#\\\\_\\\\_PURE\\\\_\\\\_\\\\*\\\\/
 * So that rollup can tree-shake them if necessary.
 */
function makeMap(str, expectsLowerCase) {
    const map = Object.create(null);
    const list = str.split(',');
    for (let i = 0; i < list.length; i++) {
        map[list[i]] = true;
    }
    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];
}

const GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +
    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +
    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';
const isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);

/**
 * On the client we only need to offer special cases for boolean attributes that
 * have different names from their corresponding dom properties:
 * - itemscope -> N/A
 * - allowfullscreen -> allowFullscreen
 * - formnovalidate -> formNoValidate
 * - ismap -> isMap
 * - nomodule -> noModule
 * - novalidate -> noValidate
 * - readonly -> readOnly
 */
const specialBooleanAttrs = \`itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly\`;
const isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);

function normalizeStyle(value) {
    if (isArray(value)) {
        const res = {};
        for (let i = 0; i < value.length; i++) {
            const item = value[i];
            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);
            if (normalized) {
                for (const key in normalized) {
                    res[key] = normalized[key];
                }
            }
        }
        return res;
    }
    else if (isObject(value)) {
        return value;
    }
}
const listDelimiterRE = /;(?![^(]*\\\\))/g;
const propertyDelimiterRE = /:(.+)/;
function parseStringStyle(cssText) {
    const ret = {};
    cssText.split(listDelimiterRE).forEach(item => {
        if (item) {
            const tmp = item.split(propertyDelimiterRE);
            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());
        }
    });
    return ret;
}
function normalizeClass(value) {
    let res = '';
    if (isString(value)) {
        res = value;
    }
    else if (isArray(value)) {
        for (let i = 0; i < value.length; i++) {
            res += normalizeClass(value[i]) + ' ';
        }
    }
    else if (isObject(value)) {
        for (const name in value) {
            if (value[name]) {
                res += name + ' ';
            }
        }
    }
    return res.trim();
}

// These tag configs are shared between compiler-dom and runtime-dom, so they
// https://developer.mozilla.org/en-US/docs/Web/HTML/Element
const HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +
    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +
    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +
    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +
    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +
    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +
    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +
    'option,output,progress,select,textarea,details,dialog,menu,menuitem,' +
    'summary,content,element,shadow,template,blockquote,iframe,tfoot';
// https://developer.mozilla.org/en-US/docs/Web/SVG/Element
const SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +
    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +
    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +
    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +
    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +
    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +
    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +
    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +
    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +
    'text,textPath,title,tspan,unknown,use,view';
const isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);
const isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);

// For converting {{ interpolation }} values to displayed strings.
const toDisplayString = (val) => {
    return val == null
        ? ''
        : isObject(val)
            ? JSON.stringify(val, replacer, 2)
            : String(val);
};
const replacer = (_key, val) => {
    if (val instanceof Map) {
        return {
            [\`Map(\${val.size})\`]: [...val.entries()].reduce((entries, [key, val]) => {
                entries[\`\${key} =>\`] = val;
                return entries;
            }, {})
        };
    }
    else if (val instanceof Set) {
        return {
            [\`Set(\${val.size})\`]: [...val.values()]
        };
    }
    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {
        return String(val);
    }
    return val;
};

const EMPTY_OBJ = (process.env.NODE_ENV !== 'production')
    ? Object.freeze({})
    : {};
const EMPTY_ARR = [];
const NOOP = () => { };
/**
 * Always return false.
 */
const NO = () => false;
const onRE = /^on[^a-z]/;
const isOn = (key) => onRE.test(key);
const extend = Object.assign;
const remove = (arr, el) => {
    const i = arr.indexOf(el);
    if (i > -1) {
        arr.splice(i, 1);
    }
};
const hasOwnProperty = Object.prototype.hasOwnProperty;
const hasOwn = (val, key) => hasOwnProperty.call(val, key);
const isArray = Array.isArray;
const isFunction = (val) => typeof val === 'function';
const isString = (val) => typeof val === 'string';
const isSymbol = (val) => typeof val === 'symbol';
const isObject = (val) => val !== null && typeof val === 'object';
const isPromise = (val) => {
    return isObject(val) && isFunction(val.then) && isFunction(val.catch);
};
const objectToString = Object.prototype.toString;
const toTypeString = (value) => objectToString.call(value);
const toRawType = (value) => {
    return toTypeString(value).slice(8, -1);
};
const isPlainObject = (val) => toTypeString(val) === '[object Object]';
const isReservedProp = /*#__PURE__*/ makeMap('key,ref,' +
    'onVnodeBeforeMount,onVnodeMounted,' +
    'onVnodeBeforeUpdate,onVnodeUpdated,' +
    'onVnodeBeforeUnmount,onVnodeUnmounted');
const cacheStringFunction = (fn) => {
    const cache = Object.create(null);
    return ((str) => {
        const hit = cache[str];
        return hit || (cache[str] = fn(str));
    });
};
const camelizeRE = /-(\\\\w)/g;
const camelize = cacheStringFunction((str) => {
    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));
});
const hyphenateRE = /\\\\B([A-Z])/g;
const hyphenate = cacheStringFunction((str) => {
    return str.replace(hyphenateRE, '-$1').toLowerCase();
});
const capitalize = cacheStringFunction((str) => {
    return str.charAt(0).toUpperCase() + str.slice(1);
});
// compare whether a value has changed, accounting for NaN.
const hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);
const invokeArrayFns = (fns, arg) => {
    for (let i = 0; i < fns.length; i++) {
        fns[i](arg);
    }
};
const def = (obj, key, value) => {
    Object.defineProperty(obj, key, {
        configurable: true,
        value
    });
};
const toNumber = (val) => {
    const n = parseFloat(val);
    return isNaN(n) ? val : n;
};

const targetMap = new WeakMap();
const effectStack = [];
let activeEffect;
const ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');
const MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');
function isEffect(fn) {
    return fn && fn._isEffect === true;
}
function effect(fn, options = EMPTY_OBJ) {
    if (isEffect(fn)) {
        fn = fn.raw;
    }
    const effect = createReactiveEffect(fn, options);
    if (!options.lazy) {
        effect();
    }
    return effect;
}
function stop(effect) {
    if (effect.active) {
        cleanup(effect);
        if (effect.options.onStop) {
            effect.options.onStop();
        }
        effect.active = false;
    }
}
let uid = 0;
function createReactiveEffect(fn, options) {
    const effect = function reactiveEffect(...args) {
        if (!effect.active) {
            return options.scheduler ? undefined : fn(...args);
        }
        if (!effectStack.includes(effect)) {
            cleanup(effect);
            try {
                enableTracking();
                effectStack.push(effect);
                activeEffect = effect;
                return fn(...args);
            }
            finally {
                effectStack.pop();
                resetTracking();
                activeEffect = effectStack[effectStack.length - 1];
            }
        }
    };
    effect.id = uid++;
    effect._isEffect = true;
    effect.active = true;
    effect.raw = fn;
    effect.deps = [];
    effect.options = options;
    return effect;
}
function cleanup(effect) {
    const { deps } = effect;
    if (deps.length) {
        for (let i = 0; i < deps.length; i++) {
            deps[i].delete(effect);
        }
        deps.length = 0;
    }
}
let shouldTrack = true;
const trackStack = [];
function pauseTracking() {
    trackStack.push(shouldTrack);
    shouldTrack = false;
}
function enableTracking() {
    trackStack.push(shouldTrack);
    shouldTrack = true;
}
function resetTracking() {
    const last = trackStack.pop();
    shouldTrack = last === undefined ? true : last;
}
function track(target, type, key) {
    if (!shouldTrack || activeEffect === undefined) {
        return;
    }
    let depsMap = targetMap.get(target);
    if (!depsMap) {
        targetMap.set(target, (depsMap = new Map()));
    }
    let dep = depsMap.get(key);
    if (!dep) {
        depsMap.set(key, (dep = new Set()));
    }
    if (!dep.has(activeEffect)) {
        dep.add(activeEffect);
        activeEffect.deps.push(dep);
        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {
            activeEffect.options.onTrack({
                effect: activeEffect,
                target,
                type,
                key
            });
        }
    }
}
function trigger(target, type, key, newValue, oldValue, oldTarget) {
    const depsMap = targetMap.get(target);
    if (!depsMap) {
        // never been tracked
        return;
    }
    const effects = new Set();
    const computedRunners = new Set();
    const add = (effectsToAdd) => {
        if (effectsToAdd) {
            effectsToAdd.forEach(effect => {
                if (effect !== activeEffect || !shouldTrack) {
                    if (effect.options.computed) {
                        computedRunners.add(effect);
                    }
                    else {
                        effects.add(effect);
                    }
                }
            });
        }
    };
    if (type === \\"clear\\" /* CLEAR */) {
        // collection being cleared
        // trigger all effects for target
        depsMap.forEach(add);
    }
    else if (key === 'length' && isArray(target)) {
        depsMap.forEach((dep, key) => {
            if (key === 'length' || key >= newValue) {
                add(dep);
            }
        });
    }
    else {
        // schedule runs for SET | ADD | DELETE
        if (key !== void 0) {
            add(depsMap.get(key));
        }
        // also run for iteration key on ADD | DELETE | Map.SET
        const isAddOrDelete = type === \\"add\\" /* ADD */ ||
            (type === \\"delete\\" /* DELETE */ && !isArray(target));
        if (isAddOrDelete ||
            (type === \\"set\\" /* SET */ && target instanceof Map)) {
            add(depsMap.get(isArray(target) ? 'length' : ITERATE_KEY));
        }
        if (isAddOrDelete && target instanceof Map) {
            add(depsMap.get(MAP_KEY_ITERATE_KEY));
        }
    }
    const run = (effect) => {
        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {
            effect.options.onTrigger({
                effect,
                target,
                key,
                type,
                newValue,
                oldValue,
                oldTarget
            });
        }
        if (effect.options.scheduler) {
            effect.options.scheduler(effect);
        }
        else {
            effect();
        }
    };
    // Important: computed effects must be run first so that computed getters
    // can be invalidated before any normal effects that depend on them are run.
    computedRunners.forEach(run);
    effects.forEach(run);
}

const builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)
    .map(key => Symbol[key])
    .filter(isSymbol));
const get = /*#__PURE__*/ createGetter();
const shallowGet = /*#__PURE__*/ createGetter(false, true);
const readonlyGet = /*#__PURE__*/ createGetter(true);
const shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);
const arrayInstrumentations = {};
['includes', 'indexOf', 'lastIndexOf'].forEach(key => {
    arrayInstrumentations[key] = function (...args) {
        const arr = toRaw(this);
        for (let i = 0, l = this.length; i < l; i++) {
            track(arr, \\"get\\" /* GET */, i + '');
        }
        // we run the method using the original args first (which may be reactive)
        const res = arr[key](...args);
        if (res === -1 || res === false) {
            // if that didn't work, run it again using raw values.
            return arr[key](...args.map(toRaw));
        }
        else {
            return res;
        }
    };
});
function createGetter(isReadonly = false, shallow = false) {
    return function get(target, key, receiver) {
        if (key === \\"__v_isReactive\\" /* isReactive */) {
            return !isReadonly;
        }
        else if (key === \\"__v_isReadonly\\" /* isReadonly */) {
            return isReadonly;
        }
        else if (key === \\"__v_raw\\" /* raw */ &&
            receiver ===
                (isReadonly
                    ? target.__v_readonly
                    : target.__v_reactive)) {
            return target;
        }
        const targetIsArray = isArray(target);
        if (targetIsArray && hasOwn(arrayInstrumentations, key)) {
            return Reflect.get(arrayInstrumentations, key, receiver);
        }
        const res = Reflect.get(target, key, receiver);
        if ((isSymbol(key) && builtInSymbols.has(key)) || key === '__proto__') {
            return res;
        }
        if (!isReadonly) {
            track(target, \\"get\\" /* GET */, key);
        }
        if (shallow) {
            return res;
        }
        if (isRef(res)) {
            // ref unwrapping, only for Objects, not for Arrays.
            return targetIsArray ? res : res.value;
        }
        if (isObject(res)) {
            // Convert returned value into a proxy as well. we do the isObject check
            // here to avoid invalid value warning. Also need to lazy access readonly
            // and reactive here to avoid circular dependency.
            return isReadonly ? readonly(res) : reactive(res);
        }
        return res;
    };
}
const set = /*#__PURE__*/ createSetter();
const shallowSet = /*#__PURE__*/ createSetter(true);
function createSetter(shallow = false) {
    return function set(target, key, value, receiver) {
        const oldValue = target[key];
        if (!shallow) {
            value = toRaw(value);
            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {
                oldValue.value = value;
                return true;
            }
        }
        const hadKey = hasOwn(target, key);
        const result = Reflect.set(target, key, value, receiver);
        // don't trigger if target is something up in the prototype chain of original
        if (target === toRaw(receiver)) {
            if (!hadKey) {
                trigger(target, \\"add\\" /* ADD */, key, value);
            }
            else if (hasChanged(value, oldValue)) {
                trigger(target, \\"set\\" /* SET */, key, value, oldValue);
            }
        }
        return result;
    };
}
function deleteProperty(target, key) {
    const hadKey = hasOwn(target, key);
    const oldValue = target[key];
    const result = Reflect.deleteProperty(target, key);
    if (result && hadKey) {
        trigger(target, \\"delete\\" /* DELETE */, key, undefined, oldValue);
    }
    return result;
}
function has(target, key) {
    const result = Reflect.has(target, key);
    track(target, \\"has\\" /* HAS */, key);
    return result;
}
function ownKeys(target) {
    track(target, \\"iterate\\" /* ITERATE */, ITERATE_KEY);
    return Reflect.ownKeys(target);
}
const mutableHandlers = {
    get,
    set,
    deleteProperty,
    has,
    ownKeys
};
const readonlyHandlers = {
    get: readonlyGet,
    has,
    ownKeys,
    set(target, key) {
        if ((process.env.NODE_ENV !== 'production')) {
            console.warn(\`Set operation on key \\"\${String(key)}\\" failed: target is readonly.\`, target);
        }
        return true;
    },
    deleteProperty(target, key) {
        if ((process.env.NODE_ENV !== 'production')) {
            console.warn(\`Delete operation on key \\"\${String(key)}\\" failed: target is readonly.\`, target);
        }
        return true;
    }
};
const shallowReactiveHandlers = extend({}, mutableHandlers, {
    get: shallowGet,
    set: shallowSet
});
// Props handlers are special in the sense that it should not unwrap top-level
// refs (in order to allow refs to be explicitly passed down), but should
// retain the reactivity of the normal readonly object.
const shallowReadonlyHandlers = extend({}, readonlyHandlers, {
    get: shallowReadonlyGet
});

const toReactive = (value) => isObject(value) ? reactive(value) : value;
const toReadonly = (value) => isObject(value) ? readonly(value) : value;
const toShallow = (value) => value;
const getProto = (v) => Reflect.getPrototypeOf(v);
function get$1(target, key, wrap) {
    target = toRaw(target);
    const rawKey = toRaw(key);
    if (key !== rawKey) {
        track(target, \\"get\\" /* GET */, key);
    }
    track(target, \\"get\\" /* GET */, rawKey);
    const { has, get } = getProto(target);
    if (has.call(target, key)) {
        return wrap(get.call(target, key));
    }
    else if (has.call(target, rawKey)) {
        return wrap(get.call(target, rawKey));
    }
}
function has$1(key) {
    const target = toRaw(this);
    const rawKey = toRaw(key);
    if (key !== rawKey) {
        track(target, \\"has\\" /* HAS */, key);
    }
    track(target, \\"has\\" /* HAS */, rawKey);
    const has = getProto(target).has;
    return has.call(target, key) || has.call(target, rawKey);
}
function size(target) {
    target = toRaw(target);
    track(target, \\"iterate\\" /* ITERATE */, ITERATE_KEY);
    return Reflect.get(getProto(target), 'size', target);
}
function add(value) {
    value = toRaw(value);
    const target = toRaw(this);
    const proto = getProto(target);
    const hadKey = proto.has.call(target, value);
    const result = proto.add.call(target, value);
    if (!hadKey) {
        trigger(target, \\"add\\" /* ADD */, value, value);
    }
    return result;
}
function set$1(key, value) {
    value = toRaw(value);
    const target = toRaw(this);
    const { has, get, set } = getProto(target);
    let hadKey = has.call(target, key);
    if (!hadKey) {
        key = toRaw(key);
        hadKey = has.call(target, key);
    }
    else if ((process.env.NODE_ENV !== 'production')) {
        checkIdentityKeys(target, has, key);
    }
    const oldValue = get.call(target, key);
    const result = set.call(target, key, value);
    if (!hadKey) {
        trigger(target, \\"add\\" /* ADD */, key, value);
    }
    else if (hasChanged(value, oldValue)) {
        trigger(target, \\"set\\" /* SET */, key, value, oldValue);
    }
    return result;
}
function deleteEntry(key) {
    const target = toRaw(this);
    const { has, get, delete: del } = getProto(target);
    let hadKey = has.call(target, key);
    if (!hadKey) {
        key = toRaw(key);
        hadKey = has.call(target, key);
    }
    else if ((process.env.NODE_ENV !== 'production')) {
        checkIdentityKeys(target, has, key);
    }
    const oldValue = get ? get.call(target, key) : undefined;
    // forward the operation before queueing reactions
    const result = del.call(target, key);
    if (hadKey) {
        trigger(target, \\"delete\\" /* DELETE */, key, undefined, oldValue);
    }
    return result;
}
function clear() {
    const target = toRaw(this);
    const hadItems = target.size !== 0;
    const oldTarget = (process.env.NODE_ENV !== 'production')
        ? target instanceof Map
            ? new Map(target)
            : new Set(target)
        : undefined;
    // forward the operation before queueing reactions
    const result = getProto(target).clear.call(target);
    if (hadItems) {
        trigger(target, \\"clear\\" /* CLEAR */, undefined, undefined, oldTarget);
    }
    return result;
}
function createForEach(isReadonly, shallow) {
    return function forEach(callback, thisArg) {
        const observed = this;
        const target = toRaw(observed);
        const wrap = isReadonly ? toReadonly : shallow ? toShallow : toReactive;
        !isReadonly && track(target, \\"iterate\\" /* ITERATE */, ITERATE_KEY);
        // important: create sure the callback is
        // 1. invoked with the reactive map as \`this\` and 3rd arg
        // 2. the value received should be a corresponding reactive/readonly.
        function wrappedCallback(value, key) {
            return callback.call(thisArg, wrap(value), wrap(key), observed);
        }
        return getProto(target).forEach.call(target, wrappedCallback);
    };
}
function createIterableMethod(method, isReadonly, shallow) {
    return function (...args) {
        const target = toRaw(this);
        const isMap = target instanceof Map;
        const isPair = method === 'entries' || (method === Symbol.iterator && isMap);
        const isKeyOnly = method === 'keys' && isMap;
        const innerIterator = getProto(target)[method].apply(target, args);
        const wrap = isReadonly ? toReadonly : shallow ? toShallow : toReactive;
        !isReadonly &&
            track(target, \\"iterate\\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);
        // return a wrapped iterator which returns observed versions of the
        // values emitted from the real iterator
        return {
            // iterator protocol
            next() {
                const { value, done } = innerIterator.next();
                return done
                    ? { value, done }
                    : {
                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),
                        done
                    };
            },
            // iterable protocol
            [Symbol.iterator]() {
                return this;
            }
        };
    };
}
function createReadonlyMethod(type) {
    return function (...args) {
        if ((process.env.NODE_ENV !== 'production')) {
            const key = args[0] ? \`on key \\"\${args[0]}\\" \` : \`\`;
            console.warn(\`\${capitalize(type)} operation \${key}failed: target is readonly.\`, toRaw(this));
        }
        return type === \\"delete\\" /* DELETE */ ? false : this;
    };
}
const mutableInstrumentations = {
    get(key) {
        return get$1(this, key, toReactive);
    },
    get size() {
        return size(this);
    },
    has: has$1,
    add,
    set: set$1,
    delete: deleteEntry,
    clear,
    forEach: createForEach(false, false)
};
const shallowInstrumentations = {
    get(key) {
        return get$1(this, key, toShallow);
    },
    get size() {
        return size(this);
    },
    has: has$1,
    add,
    set: set$1,
    delete: deleteEntry,
    clear,
    forEach: createForEach(false, true)
};
const readonlyInstrumentations = {
    get(key) {
        return get$1(this, key, toReadonly);
    },
    get size() {
        return size(this);
    },
    has: has$1,
    add: createReadonlyMethod(\\"add\\" /* ADD */),
    set: createReadonlyMethod(\\"set\\" /* SET */),
    delete: createReadonlyMethod(\\"delete\\" /* DELETE */),
    clear: createReadonlyMethod(\\"clear\\" /* CLEAR */),
    forEach: createForEach(true, false)
};
const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];
iteratorMethods.forEach(method => {
    mutableInstrumentations[method] = createIterableMethod(method, false, false);
    readonlyInstrumentations[method] = createIterableMethod(method, true, false);
    shallowInstrumentations[method] = createIterableMethod(method, false, true);
});
function createInstrumentationGetter(isReadonly, shallow) {
    const instrumentations = shallow
        ? shallowInstrumentations
        : isReadonly
            ? readonlyInstrumentations
            : mutableInstrumentations;
    return (target, key, receiver) => {
        if (key === \\"__v_isReactive\\" /* isReactive */) {
            return !isReadonly;
        }
        else if (key === \\"__v_isReadonly\\" /* isReadonly */) {
            return isReadonly;
        }
        else if (key === \\"__v_raw\\" /* raw */) {
            return target;
        }
        return Reflect.get(hasOwn(instrumentations, key) && key in target
            ? instrumentations
            : target, key, receiver);
    };
}
const mutableCollectionHandlers = {
    get: createInstrumentationGetter(false, false)
};
const shallowCollectionHandlers = {
    get: createInstrumentationGetter(false, true)
};
const readonlyCollectionHandlers = {
    get: createInstrumentationGetter(true, false)
};
function checkIdentityKeys(target, has, key) {
    const rawKey = toRaw(key);
    if (rawKey !== key && has.call(target, rawKey)) {
        const type = toRawType(target);
        console.warn(\`Reactive \${type} contains both the raw and reactive \` +
            \`versions of the same object\${type === \`Map\` ? \`as keys\` : \`\`}, \` +
            \`which can lead to inconsistencies. \` +
            \`Avoid differentiating between the raw and reactive versions \` +
            \`of an object and only use the reactive version if possible.\`);
    }
}

const collectionTypes = new Set([Set, Map, WeakMap, WeakSet]);
const isObservableType = /*#__PURE__*/ makeMap('Object,Array,Map,Set,WeakMap,WeakSet');
const canObserve = (value) => {
    return (!value[\\"__v_skip\\" /* skip */] &&
        isObservableType(toRawType(value)) &&
        !Object.isFrozen(value));
};
function reactive(target) {
    // if trying to observe a readonly proxy, return the readonly version.
    if (target && target[\\"__v_isReadonly\\" /* isReadonly */]) {
        return target;
    }
    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);
}
// Return a reactive-copy of the original object, where only the root level
// properties are reactive, and does NOT unwrap refs nor recursively convert
// returned properties.
function shallowReactive(target) {
    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);
}
function readonly(target) {
    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);
}
// Return a reactive-copy of the original object, where only the root level
// properties are readonly, and does NOT unwrap refs nor recursively convert
// returned properties.
// This is used for creating the props proxy object for stateful components.
function shallowReadonly(target) {
    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);
}
function createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {
    if (!isObject(target)) {
        if ((process.env.NODE_ENV !== 'production')) {
            console.warn(\`value cannot be made reactive: \${String(target)}\`);
        }
        return target;
    }
    // target is already a Proxy, return it.
    // exception: calling readonly() on a reactive object
    if (target[\\"__v_raw\\" /* raw */] &&
        !(isReadonly && target[\\"__v_isReactive\\" /* isReactive */])) {
        return target;
    }
    // target already has corresponding Proxy
    if (hasOwn(target, isReadonly ? \\"__v_readonly\\" /* readonly */ : \\"__v_reactive\\" /* reactive */)) {
        return isReadonly
            ? target[\\"__v_readonly\\" /* readonly */]
            : target[\\"__v_reactive\\" /* reactive */];
    }
    // only a whitelist of value types can be observed.
    if (!canObserve(target)) {
        return target;
    }
    const observed = new Proxy(target, collectionTypes.has(target.constructor) ? collectionHandlers : baseHandlers);
    def(target, isReadonly ? \\"__v_readonly\\" /* readonly */ : \\"__v_reactive\\" /* reactive */, observed);
    return observed;
}
function isReactive(value) {
    if (isReadonly(value)) {
        return isReactive(value[\\"__v_raw\\" /* raw */]);
    }
    return !!(value && value[\\"__v_isReactive\\" /* isReactive */]);
}
function isReadonly(value) {
    return !!(value && value[\\"__v_isReadonly\\" /* isReadonly */]);
}
function isProxy(value) {
    return isReactive(value) || isReadonly(value);
}
function toRaw(observed) {
    return ((observed && toRaw(observed[\\"__v_raw\\" /* raw */])) || observed);
}
function isRef(r) {
    return r ? r.__v_isRef === true : false;
}

function computed(getterOrOptions) {
    let getter;
    let setter;
    if (isFunction(getterOrOptions)) {
        getter = getterOrOptions;
        setter = (process.env.NODE_ENV !== 'production')
            ? () => {
                console.warn('Write operation failed: computed value is readonly');
            }
            : NOOP;
    }
    else {
        getter = getterOrOptions.get;
        setter = getterOrOptions.set;
    }
    let dirty = true;
    let value;
    let computed;
    const runner = effect(getter, {
        lazy: true,
        // mark effect as computed so that it gets priority during trigger
        computed: true,
        scheduler: () => {
            if (!dirty) {
                dirty = true;
                trigger(computed, \\"set\\" /* SET */, 'value');
            }
        }
    });
    computed = {
        __v_isRef: true,
        // expose effect so computed can be stopped
        effect: runner,
        get value() {
            if (dirty) {
                value = runner();
                dirty = false;
            }
            track(computed, \\"get\\" /* GET */, 'value');
            return value;
        },
        set value(newValue) {
            setter(newValue);
        }
    };
    return computed;
}

const stack = [];
function pushWarningContext(vnode) {
    stack.push(vnode);
}
function popWarningContext() {
    stack.pop();
}
function warn(msg, ...args) {
    // avoid props formatting or warn handler tracking deps that might be mutated
    // during patch, leading to infinite recursion.
    pauseTracking();
    const instance = stack.length ? stack[stack.length - 1].component : null;
    const appWarnHandler = instance && instance.appContext.config.warnHandler;
    const trace = getComponentTrace();
    if (appWarnHandler) {
        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [
            msg + args.join(''),
            instance && instance.proxy,
            trace
                .map(({ vnode }) => \`at <\${formatComponentName(vnode.type)}>\`)
                .join('\\\\n'),
            trace
        ]);
    }
    else {
        const warnArgs = [\`[Vue warn]: \${msg}\`, ...args];
        if (trace.length &&
            // avoid spamming console during tests
            !false) {
            warnArgs.push(\`\\\\n\`, ...formatTrace(trace));
        }
        console.warn(...warnArgs);
    }
    resetTracking();
}
function getComponentTrace() {
    let currentVNode = stack[stack.length - 1];
    if (!currentVNode) {
        return [];
    }
    // we can't just use the stack because it will be incomplete during updates
    // that did not start from the root. Re-construct the parent chain using
    // instance parent pointers.
    const normalizedStack = [];
    while (currentVNode) {
        const last = normalizedStack[0];
        if (last && last.vnode === currentVNode) {
            last.recurseCount++;
        }
        else {
            normalizedStack.push({
                vnode: currentVNode,
                recurseCount: 0
            });
        }
        const parentInstance = currentVNode.component && currentVNode.component.parent;
        currentVNode = parentInstance && parentInstance.vnode;
    }
    return normalizedStack;
}
function formatTrace(trace) {
    const logs = [];
    trace.forEach((entry, i) => {
        logs.push(...(i === 0 ? [] : [\`\\\\n\`]), ...formatTraceEntry(entry));
    });
    return logs;
}
function formatTraceEntry({ vnode, recurseCount }) {
    const postfix = recurseCount > 0 ? \`... (\${recurseCount} recursive calls)\` : \`\`;
    const isRoot = vnode.component ? vnode.component.parent == null : false;
    const open = \` at <\${formatComponentName(vnode.type, isRoot)}\`;
    const close = \`>\` + postfix;
    return vnode.props
        ? [open, ...formatProps(vnode.props), close]
        : [open + close];
}
function formatProps(props) {
    const res = [];
    const keys = Object.keys(props);
    keys.slice(0, 3).forEach(key => {
        res.push(...formatProp(key, props[key]));
    });
    if (keys.length > 3) {
        res.push(\` ...\`);
    }
    return res;
}
function formatProp(key, value, raw) {
    if (isString(value)) {
        value = JSON.stringify(value);
        return raw ? value : [\`\${key}=\${value}\`];
    }
    else if (typeof value === 'number' ||
        typeof value === 'boolean' ||
        value == null) {
        return raw ? value : [\`\${key}=\${value}\`];
    }
    else if (isRef(value)) {
        value = formatProp(key, toRaw(value.value), true);
        return raw ? value : [\`\${key}=Ref<\`, value, \`>\`];
    }
    else if (isFunction(value)) {
        return [\`\${key}=fn\${value.name ? \`<\${value.name}>\` : \`\`}\`];
    }
    else {
        value = toRaw(value);
        return raw ? value : [\`\${key}=\`, value];
    }
}

const ErrorTypeStrings = {
    [\\"bc\\" /* BEFORE_CREATE */]: 'beforeCreate hook',
    [\\"c\\" /* CREATED */]: 'created hook',
    [\\"bm\\" /* BEFORE_MOUNT */]: 'beforeMount hook',
    [\\"m\\" /* MOUNTED */]: 'mounted hook',
    [\\"bu\\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',
    [\\"u\\" /* UPDATED */]: 'updated',
    [\\"bum\\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',
    [\\"um\\" /* UNMOUNTED */]: 'unmounted hook',
    [\\"a\\" /* ACTIVATED */]: 'activated hook',
    [\\"da\\" /* DEACTIVATED */]: 'deactivated hook',
    [\\"ec\\" /* ERROR_CAPTURED */]: 'errorCaptured hook',
    [\\"rtc\\" /* RENDER_TRACKED */]: 'renderTracked hook',
    [\\"rtg\\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',
    [0 /* SETUP_FUNCTION */]: 'setup function',
    [1 /* RENDER_FUNCTION */]: 'render function',
    [2 /* WATCH_GETTER */]: 'watcher getter',
    [3 /* WATCH_CALLBACK */]: 'watcher callback',
    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',
    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',
    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',
    [7 /* VNODE_HOOK */]: 'vnode hook',
    [8 /* DIRECTIVE_HOOK */]: 'directive hook',
    [9 /* TRANSITION_HOOK */]: 'transition hook',
    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',
    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',
    [12 /* FUNCTION_REF */]: 'ref function',
    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',
    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +
        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'
};
function callWithErrorHandling(fn, instance, type, args) {
    let res;
    try {
        res = args ? fn(...args) : fn();
    }
    catch (err) {
        handleError(err, instance, type);
    }
    return res;
}
function callWithAsyncErrorHandling(fn, instance, type, args) {
    if (isFunction(fn)) {
        const res = callWithErrorHandling(fn, instance, type, args);
        if (res && isPromise(res)) {
            res.catch(err => {
                handleError(err, instance, type);
            });
        }
        return res;
    }
    const values = [];
    for (let i = 0; i < fn.length; i++) {
        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));
    }
    return values;
}
function handleError(err, instance, type) {
    const contextVNode = instance ? instance.vnode : null;
    if (instance) {
        let cur = instance.parent;
        // the exposed instance is the render proxy to keep it consistent with 2.x
        const exposedInstance = instance.proxy;
        // in production the hook receives only the error code
        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;
        while (cur) {
            const errorCapturedHooks = cur.ec;
            if (errorCapturedHooks) {
                for (let i = 0; i < errorCapturedHooks.length; i++) {
                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo)) {
                        return;
                    }
                }
            }
            cur = cur.parent;
        }
        // app-level handling
        const appErrorHandler = instance.appContext.config.errorHandler;
        if (appErrorHandler) {
            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);
            return;
        }
    }
    logError(err, type, contextVNode);
}
function logError(err, type, contextVNode) {
    // default behavior is crash in prod & test, recover in dev.
    if ((process.env.NODE_ENV !== 'production') && ( !false)) {
        const info = ErrorTypeStrings[type];
        if (contextVNode) {
            pushWarningContext(contextVNode);
        }
        warn(\`Unhandled error\${info ? \` during execution of \${info}\` : \`\`}\`);
        console.error(err);
        if (contextVNode) {
            popWarningContext();
        }
    }
    else {
        throw err;
    }
}

const queue = [];
const postFlushCbs = [];
const p = Promise.resolve();
let isFlushing = false;
let isFlushPending = false;
const RECURSION_LIMIT = 100;
function nextTick(fn) {
    return fn ? p.then(fn) : p;
}
function queueJob(job) {
    if (!queue.includes(job)) {
        queue.push(job);
        queueFlush();
    }
}
function invalidateJob(job) {
    const i = queue.indexOf(job);
    if (i > -1) {
        queue[i] = null;
    }
}
function queuePostFlushCb(cb) {
    if (!isArray(cb)) {
        postFlushCbs.push(cb);
    }
    else {
        postFlushCbs.push(...cb);
    }
    queueFlush();
}
function queueFlush() {
    if (!isFlushing && !isFlushPending) {
        isFlushPending = true;
        nextTick(flushJobs);
    }
}
function flushPostFlushCbs(seen) {
    if (postFlushCbs.length) {
        const cbs = [...new Set(postFlushCbs)];
        postFlushCbs.length = 0;
        if ((process.env.NODE_ENV !== 'production')) {
            seen = seen || new Map();
        }
        for (let i = 0; i < cbs.length; i++) {
            if ((process.env.NODE_ENV !== 'production')) {
                checkRecursiveUpdates(seen, cbs[i]);
            }
            cbs[i]();
        }
    }
}
const getId = (job) => (job.id == null ? Infinity : job.id);
function flushJobs(seen) {
    isFlushPending = false;
    isFlushing = true;
    let job;
    if ((process.env.NODE_ENV !== 'production')) {
        seen = seen || new Map();
    }
    // Sort queue before flush.
    // This ensures that:
    // 1. Components are updated from parent to child. (because parent is always
    //    created before the child so its render effect will have smaller
    //    priority number)
    // 2. If a component is unmounted during a parent component's update,
    //    its update can be skipped.
    // Jobs can never be null before flush starts, since they are only invalidated
    // during execution of another flushed job.
    queue.sort((a, b) => getId(a) - getId(b));
    while ((job = queue.shift()) !== undefined) {
        if (job === null) {
            continue;
        }
        if ((process.env.NODE_ENV !== 'production')) {
            checkRecursiveUpdates(seen, job);
        }
        callWithErrorHandling(job, null, 14 /* SCHEDULER */);
    }
    flushPostFlushCbs(seen);
    isFlushing = false;
    // some postFlushCb queued jobs!
    // keep flushing until it drains.
    if (queue.length || postFlushCbs.length) {
        flushJobs(seen);
    }
}
function checkRecursiveUpdates(seen, fn) {
    if (!seen.has(fn)) {
        seen.set(fn, 1);
    }
    else {
        const count = seen.get(fn);
        if (count > RECURSION_LIMIT) {
            throw new Error('Maximum recursive updates exceeded. ' +
                \\"You may have code that is mutating state in your component's \\" +
                'render function or updated hook or watcher source function.');
        }
        else {
            seen.set(fn, count + 1);
        }
    }
}

let isHmrUpdating = false;
const hmrDirtyComponents = new Set();
// Expose the HMR runtime on the global object
// This makes it entirely tree-shakable without polluting the exports and makes
// it easier to be used in toolings like vue-loader
// Note: for a component to be eligible for HMR it also needs the __hmrId option
// to be set so that its instances can be registered / removed.
if ((process.env.NODE_ENV !== 'production')) {
    const globalObject = typeof global !== 'undefined'
        ? global
        : typeof self !== 'undefined'
            ? self
            : typeof window !== 'undefined'
                ? window
                : {};
    globalObject.__VUE_HMR_RUNTIME__ = {
        createRecord: tryWrap(createRecord),
        rerender: tryWrap(rerender),
        reload: tryWrap(reload)
    };
}
const map = new Map();
function registerHMR(instance) {
    const id = instance.type.__hmrId;
    let record = map.get(id);
    if (!record) {
        createRecord(id);
        record = map.get(id);
    }
    record.add(instance);
}
function unregisterHMR(instance) {
    map.get(instance.type.__hmrId).delete(instance);
}
function createRecord(id) {
    if (map.has(id)) {
        return false;
    }
    map.set(id, new Set());
    return true;
}
function rerender(id, newRender) {
    const record = map.get(id);
    if (!record)
        return;
    // Array.from creates a snapshot which avoids the set being mutated during
    // updates
    Array.from(record).forEach(instance => {
        if (newRender) {
            instance.render = newRender;
        }
        instance.renderCache = [];
        // this flag forces child components with slot content to update
        isHmrUpdating = true;
        instance.update();
        isHmrUpdating = false;
    });
}
function reload(id, newComp) {
    const record = map.get(id);
    if (!record)
        return;
    // Array.from creates a snapshot which avoids the set being mutated during
    // updates
    Array.from(record).forEach(instance => {
        const comp = instance.type;
        if (!hmrDirtyComponents.has(comp)) {
            // 1. Update existing comp definition to match new one
            extend(comp, newComp);
            for (const key in comp) {
                if (!(key in newComp)) {
                    delete comp[key];
                }
            }
            // 2. Mark component dirty. This forces the renderer to replace the component
            // on patch.
            hmrDirtyComponents.add(comp);
            // 3. Make sure to unmark the component after the reload.
            queuePostFlushCb(() => {
                hmrDirtyComponents.delete(comp);
            });
        }
        if (instance.parent) {
            // 4. Force the parent instance to re-render. This will cause all updated
            // components to be unmounted and re-mounted. Queue the update so that we
            // don't end up forcing the same parent to re-render multiple times.
            queueJob(instance.parent.update);
        }
        else if (instance.appContext.reload) {
            // root instance mounted via createApp() has a reload method
            instance.appContext.reload();
        }
        else if (typeof window !== 'undefined') {
            // root instance inside tree created via raw render(). Force reload.
            window.location.reload();
        }
        else {
            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');
        }
    });
}
function tryWrap(fn) {
    return (id, arg) => {
        try {
            return fn(id, arg);
        }
        catch (e) {
            console.error(e);
            console.warn(\`[HMR] Something went wrong during Vue component hot-reload. \` +
                \`Full reload required.\`);
        }
    };
}

// mark the current rendering instance for asset resolution (e.g.
// resolveComponent, resolveDirective) during render
let currentRenderingInstance = null;
function setCurrentRenderingInstance(instance) {
    currentRenderingInstance = instance;
}
// dev only flag to track whether $attrs was used during render.
// If $attrs was used during render then the warning for failed attrs
// fallthrough can be suppressed.
let accessedAttrs = false;
function markAttrsAccessed() {
    accessedAttrs = true;
}
function renderComponentRoot(instance) {
    const { type: Component, parent, vnode, proxy, withProxy, props, slots, attrs, emit, renderCache } = instance;
    let result;
    currentRenderingInstance = instance;
    if ((process.env.NODE_ENV !== 'production')) {
        accessedAttrs = false;
    }
    try {
        let fallthroughAttrs;
        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {
            // withProxy is a proxy with a different \`has\` trap only for
            // runtime-compiled render functions using \`with\` block.
            const proxyToUse = withProxy || proxy;
            result = normalizeVNode(instance.render.call(proxyToUse, proxyToUse, renderCache));
            fallthroughAttrs = attrs;
        }
        else {
            // functional
            const render = Component;
            // in dev, mark attrs accessed if optional props (attrs === props)
            if ((process.env.NODE_ENV !== 'production') && attrs === props) {
                markAttrsAccessed();
            }
            result = normalizeVNode(render.length > 1
                ? render(props, (process.env.NODE_ENV !== 'production')
                    ? {
                        get attrs() {
                            markAttrsAccessed();
                            return attrs;
                        },
                        slots,
                        emit
                    }
                    : { attrs, slots, emit })
                : render(props, null /* we know it doesn't need it */));
            fallthroughAttrs = Component.props ? attrs : getFallthroughAttrs(attrs);
        }
        // attr merging
        // in dev mode, comments are preserved, and it's possible for a template
        // to have comments along side the root element which makes it a fragment
        let root = result;
        let setRoot = undefined;
        if ((process.env.NODE_ENV !== 'production')) {
            ;
            [root, setRoot] = getChildRoot(result);
        }
        if (Component.inheritAttrs !== false &&
            fallthroughAttrs &&
            Object.keys(fallthroughAttrs).length) {
            if (root.shapeFlag & 1 /* ELEMENT */ ||
                root.shapeFlag & 6 /* COMPONENT */) {
                root = cloneVNode(root, fallthroughAttrs);
            }
            else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {
                const allAttrs = Object.keys(attrs);
                const eventAttrs = [];
                const extraAttrs = [];
                for (let i = 0, l = allAttrs.length; i < l; i++) {
                    const key = allAttrs[i];
                    if (isOn(key)) {
                        // remove \`on\`, lowercase first letter to reflect event casing accurately
                        eventAttrs.push(key[2].toLowerCase() + key.slice(3));
                    }
                    else {
                        extraAttrs.push(key);
                    }
                }
                if (extraAttrs.length) {
                    warn(\`Extraneous non-props attributes (\` +
                        \`\${extraAttrs.join(', ')}) \` +
                        \`were passed to component but could not be automatically inherited \` +
                        \`because component renders fragment or text root nodes.\`);
                }
                if (eventAttrs.length) {
                    warn(\`Extraneous non-emits event listeners (\` +
                        \`\${eventAttrs.join(', ')}) \` +
                        \`were passed to component but could not be automatically inherited \` +
                        \`because component renders fragment or text root nodes. \` +
                        \`If the listener is intended to be a component custom event listener only, \` +
                        \`declare it using the \\"emits\\" option.\`);
                }
            }
        }
        // inherit scopeId
        const parentScopeId = parent && parent.type.__scopeId;
        if (parentScopeId) {
            root = cloneVNode(root, { [parentScopeId]: '' });
        }
        // inherit directives
        if (vnode.dirs) {
            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {
                warn(\`Runtime directive used on component with non-element root node. \` +
                    \`The directives will not function as intended.\`);
            }
            root.dirs = vnode.dirs;
        }
        // inherit transition data
        if (vnode.transition) {
            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {
                warn(\`Component inside <Transition> renders non-element root node \` +
                    \`that cannot be animated.\`);
            }
            root.transition = vnode.transition;
        }
        // inherit ref
        if (Component.inheritRef && vnode.ref != null) {
            root.ref = vnode.ref;
        }
        if ((process.env.NODE_ENV !== 'production') && setRoot) {
            setRoot(root);
        }
        else {
            result = root;
        }
    }
    catch (err) {
        handleError(err, instance, 1 /* RENDER_FUNCTION */);
        result = createVNode(Comment);
    }
    currentRenderingInstance = null;
    return result;
}
const getChildRoot = (vnode) => {
    if (vnode.type !== Fragment) {
        return [vnode, undefined];
    }
    const rawChildren = vnode.children;
    const dynamicChildren = vnode.dynamicChildren;
    const children = rawChildren.filter(child => {
        return !(isVNode(child) && child.type === Comment);
    });
    if (children.length !== 1) {
        return [vnode, undefined];
    }
    const childRoot = children[0];
    const index = rawChildren.indexOf(childRoot);
    const dynamicIndex = dynamicChildren
        ? dynamicChildren.indexOf(childRoot)
        : null;
    const setRoot = (updatedRoot) => {
        rawChildren[index] = updatedRoot;
        if (dynamicIndex !== null)
            dynamicChildren[dynamicIndex] = updatedRoot;
    };
    return [normalizeVNode(childRoot), setRoot];
};
const getFallthroughAttrs = (attrs) => {
    let res;
    for (const key in attrs) {
        if (key === 'class' || key === 'style' || isOn(key)) {
            (res || (res = {}))[key] = attrs[key];
        }
    }
    return res;
};
const isElementRoot = (vnode) => {
    return (vnode.shapeFlag & 6 /* COMPONENT */ ||
        vnode.shapeFlag & 1 /* ELEMENT */ ||
        vnode.type === Comment // potential v-if branch switch
    );
};
function shouldUpdateComponent(prevVNode, nextVNode, optimized) {
    const { props: prevProps, children: prevChildren } = prevVNode;
    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;
    // Parent component's render function was hot-updated. Since this may have
    // caused the child component's slots content to have changed, we need to
    // force the child to update as well.
    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {
        return true;
    }
    // force child update for runtime directive or transition on component vnode.
    if (nextVNode.dirs || nextVNode.transition) {
        return true;
    }
    if (patchFlag > 0) {
        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {
            // slot content that references values that might have changed,
            // e.g. in a v-for
            return true;
        }
        if (patchFlag & 16 /* FULL_PROPS */) {
            if (!prevProps) {
                return !!nextProps;
            }
            // presence of this flag indicates props are always non-null
            return hasPropsChanged(prevProps, nextProps);
        }
        else if (patchFlag & 8 /* PROPS */) {
            const dynamicProps = nextVNode.dynamicProps;
            for (let i = 0; i < dynamicProps.length; i++) {
                const key = dynamicProps[i];
                if (nextProps[key] !== prevProps[key]) {
                    return true;
                }
            }
        }
    }
    else if (!optimized) {
        // this path is only taken by manually written render functions
        // so presence of any children leads to a forced update
        if (prevChildren || nextChildren) {
            if (!nextChildren || !nextChildren.$stable) {
                return true;
            }
        }
        if (prevProps === nextProps) {
            return false;
        }
        if (!prevProps) {
            return !!nextProps;
        }
        if (!nextProps) {
            return true;
        }
        return hasPropsChanged(prevProps, nextProps);
    }
    return false;
}
function hasPropsChanged(prevProps, nextProps) {
    const nextKeys = Object.keys(nextProps);
    if (nextKeys.length !== Object.keys(prevProps).length) {
        return true;
    }
    for (let i = 0; i < nextKeys.length; i++) {
        const key = nextKeys[i];
        if (nextProps[key] !== prevProps[key]) {
            return true;
        }
    }
    return false;
}
function updateHOCHostEl({ vnode, parent }, el // HostNode
) {
    while (parent && parent.subTree === vnode) {
        (vnode = parent.vnode).el = el;
        parent = parent.parent;
    }
}

const isSuspense = (type) => type.__isSuspense;
function queueEffectWithSuspense(fn, suspense) {
    if (suspense && !suspense.isResolved) {
        if (isArray(fn)) {
            suspense.effects.push(...fn);
        }
        else {
            suspense.effects.push(fn);
        }
    }
    else {
        queuePostFlushCb(fn);
    }
}

/**
 * Wrap a slot function to memoize current rendering instance
 * @private
 */
function withCtx(fn, ctx = currentRenderingInstance) {
    if (!ctx)
        return fn;
    return function renderFnWithContext() {
        const owner = currentRenderingInstance;
        setCurrentRenderingInstance(ctx);
        const res = fn.apply(null, arguments);
        setCurrentRenderingInstance(owner);
        return res;
    };
}

// SFC scoped style ID management.
let currentScopeId = null;

const isTeleport = (type) => type.__isTeleport;

const COMPONENTS = 'components';
/**
 * @private
 */
function resolveComponent(name) {
    return resolveAsset(COMPONENTS, name) || name;
}
const NULL_DYNAMIC_COMPONENT = Symbol();
// implementation
function resolveAsset(type, name, warnMissing = true) {
    const instance = currentRenderingInstance || currentInstance;
    if (instance) {
        let camelized, capitalized;
        const registry = instance[type];
        let res = registry[name] ||
            registry[(camelized = camelize(name))] ||
            registry[(capitalized = capitalize(camelized))];
        if (!res && type === COMPONENTS) {
            const self = instance.type;
            const selfName = self.displayName || self.name;
            if (selfName &&
                (selfName === name ||
                    selfName === camelized ||
                    selfName === capitalized)) {
                res = self;
            }
        }
        if ((process.env.NODE_ENV !== 'production')) {
            if (res) {
                // in dev, infer anonymous component's name based on registered name
                if (type === COMPONENTS &&
                    isObject(res) &&
                    !res.name) {
                    res.name = name;
                }
            }
            else if (warnMissing) {
                warn(\`Failed to resolve \${type.slice(0, -1)}: \${name}\`);
            }
        }
        return res;
    }
    else if ((process.env.NODE_ENV !== 'production')) {
        warn(\`resolve\${capitalize(type.slice(0, -1))} \` +
            \`can only be used in render() or setup().\`);
    }
}

const Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);
const Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);
const Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);
const Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);
// Since v-if and v-for are the two possible ways node structure can dynamically
// change, once we consider v-if branches and each v-for fragment a block, we
// can divide a template into nested blocks, and within each block the node
// structure would be stable. This allows us to skip most children diffing
// and only worry about the dynamic nodes (indicated by patch flags).
const blockStack = [];
let currentBlock = null;
/**
 * Open a block.
 * This must be called before \`createBlock\`. It cannot be part of \`createBlock\`
 * because the children of the block are evaluated before \`createBlock\` itself
 * is called. The generated code typically looks like this:
 *
 * \`\`\`js
 * function render() {
 *   return (openBlock(),createBlock('div', null, [...]))
 * }
 * \`\`\`
 * disableTracking is true when creating a v-for fragment block, since a v-for
 * fragment always diffs its children.
 *
 * @private
 */
function openBlock(disableTracking = false) {
    blockStack.push((currentBlock = disableTracking ? null : []));
}
/**
 * Create a block root vnode. Takes the same exact arguments as \`createVNode\`.
 * A block root keeps track of dynamic nodes within the block in the
 * \`dynamicChildren\` array.
 *
 * @private
 */
function createBlock(type, props, children, patchFlag, dynamicProps) {
    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);
    // save current block children on the block vnode
    vnode.dynamicChildren = currentBlock || EMPTY_ARR;
    // close block
    blockStack.pop();
    currentBlock = blockStack[blockStack.length - 1] || null;
    // a block is always going to be patched, so track it as a child of its
    // parent block
    if (currentBlock) {
        currentBlock.push(vnode);
    }
    return vnode;
}
function isVNode(value) {
    return value ? value.__v_isVNode === true : false;
}
function isSameVNodeType(n1, n2) {
    if ((process.env.NODE_ENV !== 'production') &&
        n2.shapeFlag & 6 /* COMPONENT */ &&
        hmrDirtyComponents.has(n2.type)) {
        // HMR only: if the component has been hot-updated, force a reload.
        return false;
    }
    return n1.type === n2.type && n1.key === n2.key;
}
const createVNodeWithArgsTransform = (...args) => {
    return _createVNode(...( args));
};
const InternalObjectKey = \`__vInternal\`;
const normalizeKey = ({ key }) => key != null ? key : null;
const normalizeRef = ({ ref }) => (ref != null
    ? isArray(ref)
        ? ref
        : [currentRenderingInstance, ref]
    : null);
const createVNode = ((process.env.NODE_ENV !== 'production')
    ? createVNodeWithArgsTransform
    : _createVNode);
function _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {
    if (!type || type === NULL_DYNAMIC_COMPONENT) {
        if ((process.env.NODE_ENV !== 'production') && !type) {
            warn(\`Invalid vnode type when creating vnode: \${type}.\`);
        }
        type = Comment;
    }
    // class component normalization.
    if (isFunction(type) && '__vccOpts' in type) {
        type = type.__vccOpts;
    }
    // class & style normalization.
    if (props) {
        // for reactive or proxy objects, we need to clone it to enable mutation.
        if (isProxy(props) || InternalObjectKey in props) {
            props = extend({}, props);
        }
        let { class: klass, style } = props;
        if (klass && !isString(klass)) {
            props.class = normalizeClass(klass);
        }
        if (isObject(style)) {
            // reactive state objects need to be cloned since they are likely to be
            // mutated
            if (isProxy(style) && !isArray(style)) {
                style = extend({}, style);
            }
            props.style = normalizeStyle(style);
        }
    }
    // encode the vnode type information into a bitmap
    const shapeFlag = isString(type)
        ? 1 /* ELEMENT */
        :  isSuspense(type)
            ? 128 /* SUSPENSE */
            : isTeleport(type)
                ? 64 /* TELEPORT */
                : isObject(type)
                    ? 4 /* STATEFUL_COMPONENT */
                    : isFunction(type)
                        ? 2 /* FUNCTIONAL_COMPONENT */
                        : 0;
    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {
        type = toRaw(type);
        warn(\`Vue received a Component which was made a reactive object. This can \` +
            \`lead to unnecessary performance overhead, and should be avoided by \` +
            \`marking the component with \\\\\`markRaw\\\\\` or using \\\\\`shallowRef\\\\\` \` +
            \`instead of \\\\\`ref\\\\\`.\`, \`\\\\nComponent that was made reactive: \`, type);
    }
    const vnode = {
        __v_isVNode: true,
        __v_skip: true,
        type,
        props,
        key: props && normalizeKey(props),
        ref: props && normalizeRef(props),
        scopeId: currentScopeId,
        children: null,
        component: null,
        suspense: null,
        dirs: null,
        transition: null,
        el: null,
        anchor: null,
        target: null,
        targetAnchor: null,
        staticCount: 0,
        shapeFlag,
        patchFlag,
        dynamicProps,
        dynamicChildren: null,
        appContext: null
    };
    normalizeChildren(vnode, children);
    // presence of a patch flag indicates this node needs patching on updates.
    // component nodes also should always be patched, because even if the
    // component doesn't need to update, it needs to persist the instance on to
    // the next vnode so that it can be properly unmounted later.
    if (
        !isBlockNode &&
        currentBlock &&
        // the EVENTS flag is only for hydration and if it is the only flag, the
        // vnode should not be considered dynamic due to handler caching.
        patchFlag !== 32 /* HYDRATE_EVENTS */ &&
        (patchFlag > 0 ||
            shapeFlag & 128 /* SUSPENSE */ ||
            shapeFlag & 64 /* TELEPORT */ ||
            shapeFlag & 4 /* STATEFUL_COMPONENT */ ||
            shapeFlag & 2 /* FUNCTIONAL_COMPONENT */)) {
        currentBlock.push(vnode);
    }
    return vnode;
}
function cloneVNode(vnode, extraProps) {
    const props = (extraProps
        ? vnode.props
            ? mergeProps(vnode.props, extraProps)
            : extend({}, extraProps)
        : vnode.props);
    // This is intentionally NOT using spread or extend to avoid the runtime
    // key enumeration cost.
    return {
        __v_isVNode: true,
        __v_skip: true,
        type: vnode.type,
        props,
        key: props && normalizeKey(props),
        ref: props && normalizeRef(props),
        scopeId: vnode.scopeId,
        children: vnode.children,
        target: vnode.target,
        targetAnchor: vnode.targetAnchor,
        staticCount: vnode.staticCount,
        shapeFlag: vnode.shapeFlag,
        // if the vnode is cloned with extra props, we can no longer assume its
        // existing patch flag to be reliable and need to bail out of optimized mode.
        // however we don't want block nodes to de-opt their children, so if the
        // vnode is a block node, we only add the FULL_PROPS flag to it.
        patchFlag: extraProps
            ? vnode.dynamicChildren
                ? vnode.patchFlag | 16 /* FULL_PROPS */
                : -2 /* BAIL */
            : vnode.patchFlag,
        dynamicProps: vnode.dynamicProps,
        dynamicChildren: vnode.dynamicChildren,
        appContext: vnode.appContext,
        dirs: vnode.dirs,
        transition: vnode.transition,
        // These should technically only be non-null on mounted VNodes. However,
        // they *should* be copied for kept-alive vnodes. So we just always copy
        // them since them being non-null during a mount doesn't affect the logic as
        // they will simply be overwritten.
        component: vnode.component,
        suspense: vnode.suspense,
        el: vnode.el,
        anchor: vnode.anchor
    };
}
/**
 * @private
 */
function createTextVNode(text = ' ', flag = 0) {
    return createVNode(Text, null, text, flag);
}
function normalizeVNode(child) {
    if (child == null || typeof child === 'boolean') {
        // empty placeholder
        return createVNode(Comment);
    }
    else if (isArray(child)) {
        // fragment
        return createVNode(Fragment, null, child);
    }
    else if (typeof child === 'object') {
        // already vnode, this should be the most common since compiled templates
        // always produce all-vnode children arrays
        return child.el === null ? child : cloneVNode(child);
    }
    else {
        // strings and numbers
        return createVNode(Text, null, String(child));
    }
}
// optimized normalization for template-compiled render fns
function cloneIfMounted(child) {
    return child.el === null ? child : cloneVNode(child);
}
function normalizeChildren(vnode, children) {
    let type = 0;
    const { shapeFlag } = vnode;
    if (children == null) {
        children = null;
    }
    else if (isArray(children)) {
        type = 16 /* ARRAY_CHILDREN */;
    }
    else if (typeof children === 'object') {
        // Normalize slot to plain children
        if ((shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) &&
            children.default) {
            normalizeChildren(vnode, children.default());
            return;
        }
        else {
            type = 32 /* SLOTS_CHILDREN */;
            if (!children._ && !(InternalObjectKey in children)) {
                children._ctx = currentRenderingInstance;
            }
        }
    }
    else if (isFunction(children)) {
        children = { default: children, _ctx: currentRenderingInstance };
        type = 32 /* SLOTS_CHILDREN */;
    }
    else {
        children = String(children);
        // force teleport children to array so it can be moved around
        if (shapeFlag & 64 /* TELEPORT */) {
            type = 16 /* ARRAY_CHILDREN */;
            children = [createTextVNode(children)];
        }
        else {
            type = 8 /* TEXT_CHILDREN */;
        }
    }
    vnode.children = children;
    vnode.shapeFlag |= type;
}
const handlersRE = /^on|^vnode/;
function mergeProps(...args) {
    const ret = {};
    extend(ret, args[0]);
    for (let i = 1; i < args.length; i++) {
        const toMerge = args[i];
        for (const key in toMerge) {
            if (key === 'class') {
                if (ret.class !== toMerge.class) {
                    ret.class = normalizeClass([ret.class, toMerge.class]);
                }
            }
            else if (key === 'style') {
                ret.style = normalizeStyle([ret.style, toMerge.style]);
            }
            else if (handlersRE.test(key)) {
                // on*, vnode*
                const existing = ret[key];
                const incoming = toMerge[key];
                if (existing !== incoming) {
                    ret[key] = existing
                        ? [].concat(existing, toMerge[key])
                        : incoming;
                }
            }
            else {
                ret[key] = toMerge[key];
            }
        }
    }
    return ret;
}

function emit(instance, event, ...args) {
    const props = instance.vnode.props || EMPTY_OBJ;
    if ((process.env.NODE_ENV !== 'production')) {
        const options = normalizeEmitsOptions(instance.type.emits);
        if (options) {
            if (!(event in options)) {
                const propsOptions = normalizePropsOptions(instance.type)[0];
                if (!propsOptions || !(\`on\` + capitalize(event) in propsOptions)) {
                    warn(\`Component emitted event \\"\${event}\\" but it is neither declared in \` +
                        \`the emits option nor as an \\"on\${capitalize(event)}\\" prop.\`);
                }
            }
            else {
                const validator = options[event];
                if (isFunction(validator)) {
                    const isValid = validator(...args);
                    if (!isValid) {
                        warn(\`Invalid event arguments: event validation failed for event \\"\${event}\\".\`);
                    }
                }
            }
        }
    }
    let handler = props[\`on\${capitalize(event)}\`];
    // for v-model update:xxx events, also trigger kebab-case equivalent
    // for props passed via kebab-case
    if (!handler && event.startsWith('update:')) {
        event = hyphenate(event);
        handler = props[\`on\${capitalize(event)}\`];
    }
    if (handler) {
        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);
    }
}
function normalizeEmitsOptions(options) {
    if (!options) {
        return;
    }
    else if (isArray(options)) {
        if (options._n) {
            return options._n;
        }
        const normalized = {};
        options.forEach(key => (normalized[key] = null));
        def(options, '_n', normalized);
        return normalized;
    }
    else {
        return options;
    }
}
// Check if an incoming prop key is a declared emit event listener.
// e.g. With \`emits: { click: null }\`, props named \`onClick\` and \`onclick\` are
// both considered matched listeners.
function isEmitListener(emits, key) {
    return (isOn(key) &&
        (hasOwn((emits = normalizeEmitsOptions(emits)), key[2].toLowerCase() + key.slice(3)) ||
            hasOwn(emits, key.slice(2))));
}

function initProps(instance, rawProps, isStateful, // result of bitwise flag comparison
isSSR = false) {
    const props = {};
    const attrs = {};
    def(attrs, InternalObjectKey, 1);
    setFullProps(instance, rawProps, props, attrs);
    // validation
    if ((process.env.NODE_ENV !== 'production')) {
        validateProps(props, instance.type);
    }
    if (isStateful) {
        // stateful
        instance.props = isSSR ? props : shallowReactive(props);
    }
    else {
        if (!instance.type.props) {
            // functional w/ optional props, props === attrs
            instance.props = attrs;
        }
        else {
            // functional w/ declared props
            instance.props = props;
        }
    }
    instance.attrs = attrs;
}
function updateProps(instance, rawProps, rawPrevProps, optimized) {
    const { props, attrs, vnode: { patchFlag } } = instance;
    const rawCurrentProps = toRaw(props);
    const [options] = normalizePropsOptions(instance.type);
    if ((optimized || patchFlag > 0) && !(patchFlag & 16 /* FULL_PROPS */)) {
        if (patchFlag & 8 /* PROPS */) {
            // Compiler-generated props & no keys change, just set the updated
            // the props.
            const propsToUpdate = instance.vnode.dynamicProps;
            for (let i = 0; i < propsToUpdate.length; i++) {
                const key = propsToUpdate[i];
                // PROPS flag guarantees rawProps to be non-null
                const value = rawProps[key];
                if (options) {
                    // attr / props separation was done on init and will be consistent
                    // in this code path, so just check if attrs have it.
                    if (hasOwn(attrs, key)) {
                        attrs[key] = value;
                    }
                    else {
                        const camelizedKey = camelize(key);
                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value);
                    }
                }
                else {
                    attrs[key] = value;
                }
            }
        }
    }
    else {
        // full props update.
        setFullProps(instance, rawProps, props, attrs);
        // in case of dynamic props, check if we need to delete keys from
        // the props object
        let kebabKey;
        for (const key in rawCurrentProps) {
            if (!rawProps ||
                (!hasOwn(rawProps, key) &&
                    // it's possible the original props was passed in as kebab-case
                    // and converted to camelCase (#955)
                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {
                if (options) {
                    if (rawPrevProps && rawPrevProps[kebabKey] !== undefined) {
                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined);
                    }
                }
                else {
                    delete props[key];
                }
            }
        }
        // in the case of functional component w/o props declaration, props and
        // attrs point to the same object so it should already have been updated.
        if (attrs !== rawCurrentProps) {
            for (const key in attrs) {
                if (!rawProps || !hasOwn(rawProps, key)) {
                    delete attrs[key];
                }
            }
        }
    }
    // trigger updates for $attrs in case it's used in component slots
    trigger(instance, \\"set\\" /* SET */, '$attrs');
    if ((process.env.NODE_ENV !== 'production') && rawProps) {
        validateProps(props, instance.type);
    }
}
function setFullProps(instance, rawProps, props, attrs) {
    const [options, needCastKeys] = normalizePropsOptions(instance.type);
    const emits = instance.type.emits;
    if (rawProps) {
        for (const key in rawProps) {
            const value = rawProps[key];
            // key, ref are reserved and never passed down
            if (isReservedProp(key)) {
                continue;
            }
            // prop option names are camelized during normalization, so to support
            // kebab -> camel conversion here we need to camelize the key.
            let camelKey;
            if (options && hasOwn(options, (camelKey = camelize(key)))) {
                props[camelKey] = value;
            }
            else if (!emits || !isEmitListener(emits, key)) {
                // Any non-declared (either as a prop or an emitted event) props are put
                // into a separate \`attrs\` object for spreading. Make sure to preserve
                // original key casing
                attrs[key] = value;
            }
        }
    }
    if (needCastKeys) {
        const rawCurrentProps = toRaw(props);
        for (let i = 0; i < needCastKeys.length; i++) {
            const key = needCastKeys[i];
            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key]);
        }
    }
}
function resolvePropValue(options, props, key, value) {
    const opt = options[key];
    if (opt != null) {
        const hasDefault = hasOwn(opt, 'default');
        // default values
        if (hasDefault && value === undefined) {
            const defaultValue = opt.default;
            value =
                opt.type !== Function && isFunction(defaultValue)
                    ? defaultValue()
                    : defaultValue;
        }
        // boolean casting
        if (opt[0 /* shouldCast */]) {
            if (!hasOwn(props, key) && !hasDefault) {
                value = false;
            }
            else if (opt[1 /* shouldCastTrue */] &&
                (value === '' || value === hyphenate(key))) {
                value = true;
            }
        }
    }
    return value;
}
function normalizePropsOptions(comp) {
    if (comp.__props) {
        return comp.__props;
    }
    const raw = comp.props;
    const normalized = {};
    const needCastKeys = [];
    // apply mixin/extends props
    let hasExtends = false;
    if ( !isFunction(comp)) {
        const extendProps = (raw) => {
            const [props, keys] = normalizePropsOptions(raw);
            extend(normalized, props);
            if (keys)
                needCastKeys.push(...keys);
        };
        if (comp.extends) {
            hasExtends = true;
            extendProps(comp.extends);
        }
        if (comp.mixins) {
            hasExtends = true;
            comp.mixins.forEach(extendProps);
        }
    }
    if (!raw && !hasExtends) {
        return (comp.__props = EMPTY_ARR);
    }
    if (isArray(raw)) {
        for (let i = 0; i < raw.length; i++) {
            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {
                warn(\`props must be strings when using array syntax.\`, raw[i]);
            }
            const normalizedKey = camelize(raw[i]);
            if (validatePropName(normalizedKey)) {
                normalized[normalizedKey] = EMPTY_OBJ;
            }
        }
    }
    else if (raw) {
        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {
            warn(\`invalid props options\`, raw);
        }
        for (const key in raw) {
            const normalizedKey = camelize(key);
            if (validatePropName(normalizedKey)) {
                const opt = raw[key];
                const prop = (normalized[normalizedKey] =
                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);
                if (prop) {
                    const booleanIndex = getTypeIndex(Boolean, prop.type);
                    const stringIndex = getTypeIndex(String, prop.type);
                    prop[0 /* shouldCast */] = booleanIndex > -1;
                    prop[1 /* shouldCastTrue */] =
                        stringIndex < 0 || booleanIndex < stringIndex;
                    // if the prop needs boolean casting or default value
                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {
                        needCastKeys.push(normalizedKey);
                    }
                }
            }
        }
    }
    const normalizedEntry = [normalized, needCastKeys];
    comp.__props = normalizedEntry;
    return normalizedEntry;
}
// use function string name to check type constructors
// so that it works across vms / iframes.
function getType(ctor) {
    const match = ctor && ctor.toString().match(/^\\\\s*function (\\\\w+)/);
    return match ? match[1] : '';
}
function isSameType(a, b) {
    return getType(a) === getType(b);
}
function getTypeIndex(type, expectedTypes) {
    if (isArray(expectedTypes)) {
        for (let i = 0, len = expectedTypes.length; i < len; i++) {
            if (isSameType(expectedTypes[i], type)) {
                return i;
            }
        }
    }
    else if (isFunction(expectedTypes)) {
        return isSameType(expectedTypes, type) ? 0 : -1;
    }
    return -1;
}
/**
 * dev only
 */
function validateProps(props, comp) {
    const rawValues = toRaw(props);
    const options = normalizePropsOptions(comp)[0];
    for (const key in options) {
        let opt = options[key];
        if (opt == null)
            continue;
        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));
    }
}
/**
 * dev only
 */
function validatePropName(key) {
    if (key[0] !== '$') {
        return true;
    }
    else if ((process.env.NODE_ENV !== 'production')) {
        warn(\`Invalid prop name: \\"\${key}\\" is a reserved property.\`);
    }
    return false;
}
/**
 * dev only
 */
function validateProp(name, value, prop, isAbsent) {
    const { type, required, validator } = prop;
    // required!
    if (required && isAbsent) {
        warn('Missing required prop: \\"' + name + '\\"');
        return;
    }
    // missing but optional
    if (value == null && !prop.required) {
        return;
    }
    // type check
    if (type != null && type !== true) {
        let isValid = false;
        const types = isArray(type) ? type : [type];
        const expectedTypes = [];
        // value is valid as long as one of the specified types match
        for (let i = 0; i < types.length && !isValid; i++) {
            const { valid, expectedType } = assertType(value, types[i]);
            expectedTypes.push(expectedType || '');
            isValid = valid;
        }
        if (!isValid) {
            warn(getInvalidTypeMessage(name, value, expectedTypes));
            return;
        }
    }
    // custom validator
    if (validator && !validator(value)) {
        warn('Invalid prop: custom validator check failed for prop \\"' + name + '\\".');
    }
}
const isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol');
/**
 * dev only
 */
function assertType(value, type) {
    let valid;
    const expectedType = getType(type);
    if (isSimpleType(expectedType)) {
        const t = typeof value;
        valid = t === expectedType.toLowerCase();
        // for primitive wrapper objects
        if (!valid && t === 'object') {
            valid = value instanceof type;
        }
    }
    else if (expectedType === 'Object') {
        valid = toRawType(value) === 'Object';
    }
    else if (expectedType === 'Array') {
        valid = isArray(value);
    }
    else {
        valid = value instanceof type;
    }
    return {
        valid,
        expectedType
    };
}
/**
 * dev only
 */
function getInvalidTypeMessage(name, value, expectedTypes) {
    let message = \`Invalid prop: type check failed for prop \\"\${name}\\".\` +
        \` Expected \${expectedTypes.map(capitalize).join(', ')}\`;
    const expectedType = expectedTypes[0];
    const receivedType = toRawType(value);
    const expectedValue = styleValue(value, expectedType);
    const receivedValue = styleValue(value, receivedType);
    // check if we need to specify expected value
    if (expectedTypes.length === 1 &&
        isExplicable(expectedType) &&
        !isBoolean(expectedType, receivedType)) {
        message += \` with value \${expectedValue}\`;
    }
    message += \`, got \${receivedType} \`;
    // check if we need to specify received value
    if (isExplicable(receivedType)) {
        message += \`with value \${receivedValue}.\`;
    }
    return message;
}
/**
 * dev only
 */
function styleValue(value, type) {
    if (type === 'String') {
        return \`\\"\${value}\\"\`;
    }
    else if (type === 'Number') {
        return \`\${Number(value)}\`;
    }
    else {
        return \`\${value}\`;
    }
}
/**
 * dev only
 */
function isExplicable(type) {
    const explicitTypes = ['string', 'number', 'boolean'];
    return explicitTypes.some(elem => type.toLowerCase() === elem);
}
/**
 * dev only
 */
function isBoolean(...args) {
    return args.some(elem => elem.toLowerCase() === 'boolean');
}

const isInternalKey = (key) => key[0] === '_' || key === '$stable';
const normalizeSlotValue = (value) => isArray(value)
    ? value.map(normalizeVNode)
    : [normalizeVNode(value)];
const normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {
    if ((process.env.NODE_ENV !== 'production') && currentInstance) {
        warn(\`Slot \\"\${key}\\" invoked outside of the render function: \` +
            \`this will not track dependencies used in the slot. \` +
            \`Invoke the slot function inside the render function instead.\`);
    }
    return normalizeSlotValue(rawSlot(props));
}, ctx);
const normalizeObjectSlots = (rawSlots, slots) => {
    const ctx = rawSlots._ctx;
    for (const key in rawSlots) {
        if (isInternalKey(key))
            continue;
        const value = rawSlots[key];
        if (isFunction(value)) {
            slots[key] = normalizeSlot(key, value, ctx);
        }
        else if (value != null) {
            if ((process.env.NODE_ENV !== 'production')) {
                warn(\`Non-function value encountered for slot \\"\${key}\\". \` +
                    \`Prefer function slots for better performance.\`);
            }
            const normalized = normalizeSlotValue(value);
            slots[key] = () => normalized;
        }
    }
};
const normalizeVNodeSlots = (instance, children) => {
    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {
        warn(\`Non-function value encountered for default slot. \` +
            \`Prefer function slots for better performance.\`);
    }
    const normalized = normalizeSlotValue(children);
    instance.slots.default = () => normalized;
};
const initSlots = (instance, children) => {
    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {
        if (children._ === 1) {
            instance.slots = children;
        }
        else {
            normalizeObjectSlots(children, (instance.slots = {}));
        }
    }
    else {
        instance.slots = {};
        if (children) {
            normalizeVNodeSlots(instance, children);
        }
    }
    def(instance.slots, InternalObjectKey, 1);
};
const updateSlots = (instance, children) => {
    const { vnode, slots } = instance;
    let needDeletionCheck = true;
    let deletionComparisonTarget = EMPTY_OBJ;
    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {
        if (children._ === 1) {
            // compiled slots.
            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {
                // Parent was HMR updated so slot content may have changed.
                // force update slots and mark instance for hmr as well
                extend(slots, children);
            }
            else if (
            // bail on dynamic slots (v-if, v-for, reference of scope variables)
            !(vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */)) {
                // compiled AND static.
                // no need to update, and skip stale slots removal.
                needDeletionCheck = false;
            }
            else {
                // compiled but dynamic - update slots, but skip normalization.
                extend(slots, children);
            }
        }
        else {
            needDeletionCheck = !children.$stable;
            normalizeObjectSlots(children, slots);
        }
        deletionComparisonTarget = children;
    }
    else if (children) {
        // non slot object children (direct value) passed to a component
        normalizeVNodeSlots(instance, children);
        deletionComparisonTarget = { default: 1 };
    }
    // delete stale slots
    if (needDeletionCheck) {
        for (const key in slots) {
            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {
                delete slots[key];
            }
        }
    }
};

/**
Runtime helper for applying directives to a vnode. Example usage:

const comp = resolveComponent('comp')
const foo = resolveDirective('foo')
const bar = resolveDirective('bar')

return withDirectives(h(comp), [
  [foo, this.x],
  [bar, this.y]
])
*/
const isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');
function validateDirectiveName(name) {
    if (isBuiltInDirective(name)) {
        warn('Do not use built-in directive ids as custom directive id: ' + name);
    }
}
function invokeDirectiveHook(vnode, prevVNode, instance, name) {
    const bindings = vnode.dirs;
    const oldBindings = prevVNode && prevVNode.dirs;
    for (let i = 0; i < bindings.length; i++) {
        const binding = bindings[i];
        if (oldBindings) {
            binding.oldValue = oldBindings[i].value;
        }
        const hook = binding.dir[name];
        if (hook) {
            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [
                vnode.el,
                binding,
                vnode,
                prevVNode
            ]);
        }
    }
}

function createAppContext() {
    return {
        config: {
            isNativeTag: NO,
            devtools: true,
            performance: false,
            globalProperties: {},
            optionMergeStrategies: {},
            isCustomElement: NO,
            errorHandler: undefined,
            warnHandler: undefined
        },
        mixins: [],
        components: {},
        directives: {},
        provides: Object.create(null)
    };
}
function createAppAPI(render, hydrate) {
    return function createApp(rootComponent, rootProps = null) {
        if (rootProps != null && !isObject(rootProps)) {
            (process.env.NODE_ENV !== 'production') && warn(\`root props passed to app.mount() must be an object.\`);
            rootProps = null;
        }
        const context = createAppContext();
        const installedPlugins = new Set();
        let isMounted = false;
        const app = {
            _component: rootComponent,
            _props: rootProps,
            _container: null,
            _context: context,
            get config() {
                return context.config;
            },
            set config(v) {
                if ((process.env.NODE_ENV !== 'production')) {
                    warn(\`app.config cannot be replaced. Modify individual options instead.\`);
                }
            },
            use(plugin, ...options) {
                if (installedPlugins.has(plugin)) {
                    (process.env.NODE_ENV !== 'production') && warn(\`Plugin has already been applied to target app.\`);
                }
                else if (plugin && isFunction(plugin.install)) {
                    installedPlugins.add(plugin);
                    plugin.install(app, ...options);
                }
                else if (isFunction(plugin)) {
                    installedPlugins.add(plugin);
                    plugin(app, ...options);
                }
                else if ((process.env.NODE_ENV !== 'production')) {
                    warn(\`A plugin must either be a function or an object with an \\"install\\" \` +
                        \`function.\`);
                }
                return app;
            },
            mixin(mixin) {
                {
                    if (!context.mixins.includes(mixin)) {
                        context.mixins.push(mixin);
                    }
                    else if ((process.env.NODE_ENV !== 'production')) {
                        warn('Mixin has already been applied to target app' +
                            (mixin.name ? \`: \${mixin.name}\` : ''));
                    }
                }
                return app;
            },
            component(name, component) {
                if ((process.env.NODE_ENV !== 'production')) {
                    validateComponentName(name, context.config);
                }
                if (!component) {
                    return context.components[name];
                }
                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {
                    warn(\`Component \\"\${name}\\" has already been registered in target app.\`);
                }
                context.components[name] = component;
                return app;
            },
            directive(name, directive) {
                if ((process.env.NODE_ENV !== 'production')) {
                    validateDirectiveName(name);
                }
                if (!directive) {
                    return context.directives[name];
                }
                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {
                    warn(\`Directive \\"\${name}\\" has already been registered in target app.\`);
                }
                context.directives[name] = directive;
                return app;
            },
            mount(rootContainer, isHydrate) {
                if (!isMounted) {
                    const vnode = createVNode(rootComponent, rootProps);
                    // store app context on the root VNode.
                    // this will be set on the root instance on initial mount.
                    vnode.appContext = context;
                    // HMR root reload
                    if ((process.env.NODE_ENV !== 'production')) {
                        context.reload = () => {
                            render(cloneVNode(vnode), rootContainer);
                        };
                    }
                    if (isHydrate && hydrate) {
                        hydrate(vnode, rootContainer);
                    }
                    else {
                        render(vnode, rootContainer);
                    }
                    isMounted = true;
                    app._container = rootContainer;
                    return vnode.component.proxy;
                }
                else if ((process.env.NODE_ENV !== 'production')) {
                    warn(\`App has already been mounted.\\\\n\` +
                        \`If you want to remount the same app, move your app creation logic \` +
                        \`into a factory function and create fresh app instances for each \` +
                        \`mount - e.g. \\\\\`const createMyApp = () => createApp(App)\\\\\`\`);
                }
            },
            unmount() {
                if (isMounted) {
                    render(null, app._container);
                }
                else if ((process.env.NODE_ENV !== 'production')) {
                    warn(\`Cannot unmount an app that is not mounted.\`);
                }
            },
            provide(key, value) {
                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {
                    warn(\`App already provides property with key \\"\${String(key)}\\". \` +
                        \`It will be overwritten with the new value.\`);
                }
                // TypeScript doesn't allow symbols as index type
                // https://github.com/Microsoft/TypeScript/issues/24587
                context.provides[key] = value;
                return app;
            }
        };
        return app;
    };
}

let supported;
let perf;
function startMeasure(instance, type) {
    if (instance.appContext.config.performance && isSupported()) {
        perf.mark(\`vue-\${type}-\${instance.uid}\`);
    }
}
function endMeasure(instance, type) {
    if (instance.appContext.config.performance && isSupported()) {
        const startTag = \`vue-\${type}-\${instance.uid}\`;
        const endTag = startTag + \`:end\`;
        perf.mark(endTag);
        perf.measure(\`<\${formatComponentName(instance.type)}> \${type}\`, startTag, endTag);
        perf.clearMarks(startTag);
        perf.clearMarks(endTag);
    }
}
function isSupported() {
    if (supported !== undefined) {
        return supported;
    }
    /* eslint-disable no-restricted-globals */
    if (typeof window !== 'undefined' && window.performance) {
        supported = true;
        perf = window.performance;
    }
    else {
        supported = false;
    }
    /* eslint-enable no-restricted-globals */
    return supported;
}

const prodEffectOptions = {
    scheduler: queueJob
};
function createDevEffectOptions(instance) {
    return {
        scheduler: queueJob,
        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,
        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0
    };
}
const queuePostRenderEffect =  queueEffectWithSuspense
    ;
const setRef = (rawRef, oldRawRef, parent, vnode) => {
    let value;
    if (!vnode) {
        value = null;
    }
    else {
        const { el, component, shapeFlag, type } = vnode;
        if (shapeFlag & 6 /* COMPONENT */ && type.inheritRef) {
            return;
        }
        if (shapeFlag & 4 /* STATEFUL_COMPONENT */) {
            value = component.proxy;
        }
        else {
            value = el;
        }
    }
    const [owner, ref] = rawRef;
    if ((process.env.NODE_ENV !== 'production') && !owner) {
        warn(\`Missing ref owner context. ref cannot be used on hoisted vnodes. \` +
            \`A vnode with ref must be created inside the render function.\`);
        return;
    }
    const oldRef = oldRawRef && oldRawRef[1];
    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;
    const setupState = owner.setupState;
    // unset old ref
    if (oldRef != null && oldRef !== ref) {
        if (isString(oldRef)) {
            refs[oldRef] = null;
            if (hasOwn(setupState, oldRef)) {
                setupState[oldRef] = null;
            }
        }
        else if (isRef(oldRef)) {
            oldRef.value = null;
        }
    }
    if (isString(ref)) {
        refs[ref] = value;
        if (hasOwn(setupState, ref)) {
            setupState[ref] = value;
        }
    }
    else if (isRef(ref)) {
        ref.value = value;
    }
    else if (isFunction(ref)) {
        callWithErrorHandling(ref, parent, 12 /* FUNCTION_REF */, [value, refs]);
    }
    else if ((process.env.NODE_ENV !== 'production')) {
        warn('Invalid template ref type:', value, \`(\${typeof value})\`);
    }
};
/**
 * The createRenderer function accepts two generic arguments:
 * HostNode and HostElement, corresponding to Node and Element types in the
 * host environment. For example, for runtime-dom, HostNode would be the DOM
 * \`Node\` interface and HostElement would be the DOM \`Element\` interface.
 *
 * Custom renderers can pass in the platform specific types like this:
 *
 * \`\`\` js
 * const { render, createApp } = createRenderer<Node, Element>({
 *   patchProp,
 *   ...nodeOps
 * })
 * \`\`\`
 */
function createRenderer(options) {
    return baseCreateRenderer(options);
}
// implementation
function baseCreateRenderer(options, createHydrationFns) {
    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;
    // Note: functions inside this closure should use \`const xxx = () => {}\`
    // style in order to prevent being inlined by minifiers.
    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {
        // patching & not same type, unmount old tree
        if (n1 && !isSameVNodeType(n1, n2)) {
            anchor = getNextHostNode(n1);
            unmount(n1, parentComponent, parentSuspense, true);
            n1 = null;
        }
        if (n2.patchFlag === -2 /* BAIL */) {
            optimized = false;
            n2.dynamicChildren = null;
        }
        const { type, ref, shapeFlag } = n2;
        switch (type) {
            case Text:
                processText(n1, n2, container, anchor);
                break;
            case Comment:
                processCommentNode(n1, n2, container, anchor);
                break;
            case Static:
                if (n1 == null) {
                    mountStaticNode(n2, container, anchor, isSVG);
                }
                else if ((process.env.NODE_ENV !== 'production')) {
                    patchStaticNode(n1, n2, container, isSVG);
                }
                break;
            case Fragment:
                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
                break;
            default:
                if (shapeFlag & 1 /* ELEMENT */) {
                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
                }
                else if (shapeFlag & 6 /* COMPONENT */) {
                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
                }
                else if (shapeFlag & 64 /* TELEPORT */) {
                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);
                }
                else if ( shapeFlag & 128 /* SUSPENSE */) {
                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);
                }
                else if ((process.env.NODE_ENV !== 'production')) {
                    warn('Invalid VNode type:', type, \`(\${typeof type})\`);
                }
        }
        // set ref
        if (ref != null && parentComponent) {
            setRef(ref, n1 && n1.ref, parentComponent, n2);
        }
    };
    const processText = (n1, n2, container, anchor) => {
        if (n1 == null) {
            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);
        }
        else {
            const el = (n2.el = n1.el);
            if (n2.children !== n1.children) {
                hostSetText(el, n2.children);
            }
        }
    };
    const processCommentNode = (n1, n2, container, anchor) => {
        if (n1 == null) {
            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);
        }
        else {
            // there's no support for dynamic comments
            n2.el = n1.el;
        }
    };
    const mountStaticNode = (n2, container, anchor, isSVG) => {
        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);
    };
    /**
     * Dev / HMR only
     */
    const patchStaticNode = (n1, n2, container, isSVG) => {
        // static nodes are only patched during dev for HMR
        if (n2.children !== n1.children) {
            const anchor = hostNextSibling(n1.anchor);
            // remove existing
            removeStaticNode(n1);
            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);
        }
        else {
            n2.el = n1.el;
            n2.anchor = n1.anchor;
        }
    };
    /**
     * Dev / HMR only
     */
    const moveStaticNode = (vnode, container, anchor) => {
        let cur = vnode.el;
        const end = vnode.anchor;
        while (cur && cur !== end) {
            const next = hostNextSibling(cur);
            hostInsert(cur, container, anchor);
            cur = next;
        }
        hostInsert(end, container, anchor);
    };
    /**
     * Dev / HMR only
     */
    const removeStaticNode = (vnode) => {
        let cur = vnode.el;
        while (cur && cur !== vnode.anchor) {
            const next = hostNextSibling(cur);
            hostRemove(cur);
            cur = next;
        }
        hostRemove(vnode.anchor);
    };
    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {
        isSVG = isSVG || n2.type === 'svg';
        if (n1 == null) {
            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
        }
        else {
            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);
        }
    };
    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {
        let el;
        let vnodeHook;
        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;
        if (vnode.el &&
            hostCloneNode !== undefined &&
            patchFlag === -1 /* HOISTED */) {
            // If a vnode has non-null el, it means it's being reused.
            // Only static vnodes can be reused, so its mounted DOM nodes should be
            // exactly the same, and we can simply do a clone here.
            el = vnode.el = hostCloneNode(vnode.el);
        }
        else {
            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);
            // mount children first, since some props may rely on child content
            // being already rendered, e.g. \`<select value>\`
            if (shapeFlag & 8 /* TEXT_CHILDREN */) {
                hostSetElementText(el, vnode.children);
            }
            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {
                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);
            }
            // props
            if (props) {
                for (const key in props) {
                    if (!isReservedProp(key)) {
                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense);
                    }
                }
                if ((vnodeHook = props.onVnodeBeforeMount)) {
                    invokeVNodeHook(vnodeHook, parentComponent, vnode);
                }
            }
            if (dirs) {
                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');
            }
            // scopeId
            if (scopeId) {
                hostSetScopeId(el, scopeId);
            }
            const treeOwnerId = parentComponent && parentComponent.type.__scopeId;
            // vnode's own scopeId and the current patched component's scopeId is
            // different - this is a slot content node.
            if (treeOwnerId && treeOwnerId !== scopeId) {
                hostSetScopeId(el, treeOwnerId + '-s');
            }
            if (transition && !transition.persisted) {
                transition.beforeEnter(el);
            }
        }
        hostInsert(el, container, anchor);
        if ((vnodeHook = props && props.onVnodeMounted) ||
            (transition && !transition.persisted) ||
            dirs) {
            queuePostRenderEffect(() => {
                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);
                transition && !transition.persisted && transition.enter(el);
                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');
            }, parentSuspense);
        }
    };
    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {
        for (let i = start; i < children.length; i++) {
            const child = (children[i] = optimized
                ? cloneIfMounted(children[i])
                : normalizeVNode(children[i]));
            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
        }
    };
    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {
        const el = (n2.el = n1.el);
        let { patchFlag, dynamicChildren, dirs } = n2;
        const oldProps = (n1 && n1.props) || EMPTY_OBJ;
        const newProps = n2.props || EMPTY_OBJ;
        let vnodeHook;
        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {
            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);
        }
        if (dirs) {
            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');
        }
        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {
            // HMR updated, force full diff
            patchFlag = 0;
            optimized = false;
            dynamicChildren = null;
        }
        if (patchFlag > 0) {
            // the presence of a patchFlag means this element's render code was
            // generated by the compiler and can take the fast path.
            // in this path old node and new node are guaranteed to have the same shape
            // (i.e. at the exact same position in the source template)
            if (patchFlag & 16 /* FULL_PROPS */) {
                // element props contain dynamic keys, full diff needed
                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);
            }
            else {
                // class
                // this flag is matched when the element has dynamic class bindings.
                if (patchFlag & 2 /* CLASS */) {
                    if (oldProps.class !== newProps.class) {
                        hostPatchProp(el, 'class', null, newProps.class, isSVG);
                    }
                }
                // style
                // this flag is matched when the element has dynamic style bindings
                if (patchFlag & 4 /* STYLE */) {
                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);
                }
                // props
                // This flag is matched when the element has dynamic prop/attr bindings
                // other than class and style. The keys of dynamic prop/attrs are saved for
                // faster iteration.
                // Note dynamic keys like :[foo]=\\"bar\\" will cause this optimization to
                // bail out and go through a full diff because we need to unset the old key
                if (patchFlag & 8 /* PROPS */) {
                    // if the flag is present then dynamicProps must be non-null
                    const propsToUpdate = n2.dynamicProps;
                    for (let i = 0; i < propsToUpdate.length; i++) {
                        const key = propsToUpdate[i];
                        const prev = oldProps[key];
                        const next = newProps[key];
                        if (prev !== next) {
                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);
                        }
                    }
                }
            }
            // text
            // This flag is matched when the element has only dynamic text children.
            if (patchFlag & 1 /* TEXT */) {
                if (n1.children !== n2.children) {
                    hostSetElementText(el, n2.children);
                }
            }
        }
        else if (!optimized && dynamicChildren == null) {
            // unoptimized, full diff
            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);
        }
        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';
        if (dynamicChildren) {
            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);
            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {
                traverseStaticChildren(n1, n2);
            }
        }
        else if (!optimized) {
            // full diff
            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);
        }
        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {
            queuePostRenderEffect(() => {
                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);
                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');
            }, parentSuspense);
        }
    };
    // The fast path for blocks.
    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {
        for (let i = 0; i < newChildren.length; i++) {
            const oldVNode = oldChildren[i];
            const newVNode = newChildren[i];
            // Determine the container (parent element) for the patch.
            const container = 
            // - In the case of a Fragment, we need to provide the actual parent
            // of the Fragment itself so it can move its children.
            oldVNode.type === Fragment ||
                // - In the case of different nodes, there is going to be a replacement
                // which also requires the correct parent container
                !isSameVNodeType(oldVNode, newVNode) ||
                // - In the case of a component, it could contain anything.
                oldVNode.shapeFlag & 6 /* COMPONENT */
                ? hostParentNode(oldVNode.el)
                : // In other cases, the parent container is not actually used so we
                    // just pass the block element here to avoid a DOM parentNode call.
                    fallbackContainer;
            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);
        }
    };
    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {
        if (oldProps !== newProps) {
            for (const key in newProps) {
                if (isReservedProp(key))
                    continue;
                const next = newProps[key];
                const prev = oldProps[key];
                if (next !== prev) {
                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);
                }
            }
            if (oldProps !== EMPTY_OBJ) {
                for (const key in oldProps) {
                    if (!isReservedProp(key) && !(key in newProps)) {
                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);
                    }
                }
            }
        }
    };
    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {
        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));
        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));
        let { patchFlag, dynamicChildren } = n2;
        if (patchFlag > 0) {
            optimized = true;
        }
        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {
            // HMR updated, force full diff
            patchFlag = 0;
            optimized = false;
            dynamicChildren = null;
        }
        if (n1 == null) {
            hostInsert(fragmentStartAnchor, container, anchor);
            hostInsert(fragmentEndAnchor, container, anchor);
            // a fragment can only have array children
            // since they are either generated by the compiler, or implicitly created
            // from arrays.
            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);
        }
        else {
            if (patchFlag > 0 &&
                patchFlag & 64 /* STABLE_FRAGMENT */ &&
                dynamicChildren) {
                // a stable fragment (template root or <template v-for>) doesn't need to
                // patch children order, but it may contain dynamicChildren.
                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);
                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {
                    traverseStaticChildren(n1, n2);
                }
            }
            else {
                // keyed / unkeyed, or manual fragments.
                // for keyed & unkeyed, since they are compiler generated from v-for,
                // each child is guaranteed to be a block so the fragment will never
                // have dynamicChildren.
                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);
            }
        }
    };
    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {
        if (n1 == null) {
            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {
                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);
            }
            else {
                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
            }
        }
        else {
            updateComponent(n1, n2, optimized);
        }
    };
    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {
        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));
        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {
            registerHMR(instance);
        }
        if ((process.env.NODE_ENV !== 'production')) {
            pushWarningContext(initialVNode);
            startMeasure(instance, \`mount\`);
        }
        // inject renderer internals for keepAlive
        if (isKeepAlive(initialVNode)) {
            instance.ctx.renderer = internals;
        }
        // resolve props and slots for setup context
        if ((process.env.NODE_ENV !== 'production')) {
            startMeasure(instance, \`init\`);
        }
        setupComponent(instance);
        if ((process.env.NODE_ENV !== 'production')) {
            endMeasure(instance, \`init\`);
        }
        // setup() is async. This component relies on async logic to be resolved
        // before proceeding
        if ( instance.asyncDep) {
            if (!parentSuspense) {
                if ((process.env.NODE_ENV !== 'production'))
                    warn('async setup() is used without a suspense boundary!');
                return;
            }
            parentSuspense.registerDep(instance, setupRenderEffect);
            // Give it a placeholder if this is not hydration
            if (!initialVNode.el) {
                const placeholder = (instance.subTree = createVNode(Comment));
                processCommentNode(null, placeholder, container, anchor);
            }
            return;
        }
        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);
        if ((process.env.NODE_ENV !== 'production')) {
            popWarningContext();
            endMeasure(instance, \`mount\`);
        }
    };
    const updateComponent = (n1, n2, optimized) => {
        const instance = (n2.component = n1.component);
        if (shouldUpdateComponent(n1, n2, optimized)) {
            if (
                instance.asyncDep &&
                !instance.asyncResolved) {
                // async & still pending - just update props and slots
                // since the component's reactive effect for render isn't set-up yet
                if ((process.env.NODE_ENV !== 'production')) {
                    pushWarningContext(n2);
                }
                updateComponentPreRender(instance, n2, optimized);
                if ((process.env.NODE_ENV !== 'production')) {
                    popWarningContext();
                }
                return;
            }
            else {
                // normal update
                instance.next = n2;
                // in case the child component is also queued, remove it to avoid
                // double updating the same child component in the same flush.
                invalidateJob(instance.update);
                // instance.update is the reactive effect runner.
                instance.update();
            }
        }
        else {
            // no update needed. just copy over properties
            n2.component = n1.component;
            n2.el = n1.el;
        }
    };
    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {
        // create reactive effect for rendering
        instance.update = effect(function componentEffect() {
            if (!instance.isMounted) {
                let vnodeHook;
                const { el, props } = initialVNode;
                const { bm, m, a, parent } = instance;
                if ((process.env.NODE_ENV !== 'production')) {
                    startMeasure(instance, \`render\`);
                }
                const subTree = (instance.subTree = renderComponentRoot(instance));
                if ((process.env.NODE_ENV !== 'production')) {
                    endMeasure(instance, \`render\`);
                }
                // beforeMount hook
                if (bm) {
                    invokeArrayFns(bm);
                }
                // onVnodeBeforeMount
                if ((vnodeHook = props && props.onVnodeBeforeMount)) {
                    invokeVNodeHook(vnodeHook, parent, initialVNode);
                }
                if (el && hydrateNode) {
                    if ((process.env.NODE_ENV !== 'production')) {
                        startMeasure(instance, \`hydrate\`);
                    }
                    // vnode has adopted host node - perform hydration instead of mount.
                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);
                    if ((process.env.NODE_ENV !== 'production')) {
                        endMeasure(instance, \`hydrate\`);
                    }
                }
                else {
                    if ((process.env.NODE_ENV !== 'production')) {
                        startMeasure(instance, \`patch\`);
                    }
                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);
                    if ((process.env.NODE_ENV !== 'production')) {
                        endMeasure(instance, \`patch\`);
                    }
                    initialVNode.el = subTree.el;
                }
                // mounted hook
                if (m) {
                    queuePostRenderEffect(m, parentSuspense);
                }
                // onVnodeMounted
                if ((vnodeHook = props && props.onVnodeMounted)) {
                    queuePostRenderEffect(() => {
                        invokeVNodeHook(vnodeHook, parent, initialVNode);
                    }, parentSuspense);
                }
                // activated hook for keep-alive roots.
                if (a &&
                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {
                    queuePostRenderEffect(a, parentSuspense);
                }
                instance.isMounted = true;
            }
            else {
                // updateComponent
                // This is triggered by mutation of component's own state (next: null)
                // OR parent calling processComponent (next: VNode)
                let { next, bu, u, parent, vnode } = instance;
                let vnodeHook;
                if ((process.env.NODE_ENV !== 'production')) {
                    pushWarningContext(next || instance.vnode);
                }
                if (next) {
                    updateComponentPreRender(instance, next, optimized);
                }
                else {
                    next = vnode;
                }
                if ((process.env.NODE_ENV !== 'production')) {
                    startMeasure(instance, \`render\`);
                }
                const nextTree = renderComponentRoot(instance);
                if ((process.env.NODE_ENV !== 'production')) {
                    endMeasure(instance, \`render\`);
                }
                const prevTree = instance.subTree;
                instance.subTree = nextTree;
                next.el = vnode.el;
                // beforeUpdate hook
                if (bu) {
                    invokeArrayFns(bu);
                }
                // onVnodeBeforeUpdate
                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {
                    invokeVNodeHook(vnodeHook, parent, next, vnode);
                }
                // reset refs
                // only needed if previous patch had refs
                if (instance.refs !== EMPTY_OBJ) {
                    instance.refs = {};
                }
                if ((process.env.NODE_ENV !== 'production')) {
                    startMeasure(instance, \`patch\`);
                }
                patch(prevTree, nextTree, 
                // parent may have changed if it's in a teleport
                hostParentNode(prevTree.el), 
                // anchor may have changed if it's in a fragment
                getNextHostNode(prevTree), instance, parentSuspense, isSVG);
                if ((process.env.NODE_ENV !== 'production')) {
                    endMeasure(instance, \`patch\`);
                }
                next.el = nextTree.el;
                if (next === null) {
                    // self-triggered update. In case of HOC, update parent component
                    // vnode el. HOC is indicated by parent instance's subTree pointing
                    // to child component's vnode
                    updateHOCHostEl(instance, nextTree.el);
                }
                // updated hook
                if (u) {
                    queuePostRenderEffect(u, parentSuspense);
                }
                // onVnodeUpdated
                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {
                    queuePostRenderEffect(() => {
                        invokeVNodeHook(vnodeHook, parent, next, vnode);
                    }, parentSuspense);
                }
                if ((process.env.NODE_ENV !== 'production')) {
                    popWarningContext();
                }
            }
        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);
    };
    const updateComponentPreRender = (instance, nextVNode, optimized) => {
        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {
            optimized = false;
        }
        nextVNode.component = instance;
        const prevProps = instance.vnode.props;
        instance.vnode = nextVNode;
        instance.next = null;
        updateProps(instance, nextVNode.props, prevProps, optimized);
        updateSlots(instance, nextVNode.children);
    };
    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {
        const c1 = n1 && n1.children;
        const prevShapeFlag = n1 ? n1.shapeFlag : 0;
        const c2 = n2.children;
        const { patchFlag, shapeFlag } = n2;
        // fast path
        if (patchFlag > 0) {
            if (patchFlag & 128 /* KEYED_FRAGMENT */) {
                // this could be either fully-keyed or mixed (some keyed some not)
                // presence of patchFlag means children are guaranteed to be arrays
                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
                return;
            }
            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {
                // unkeyed
                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
                return;
            }
        }
        // children has 3 possibilities: text, array or no children.
        if (shapeFlag & 8 /* TEXT_CHILDREN */) {
            // text children fast path
            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {
                unmountChildren(c1, parentComponent, parentSuspense);
            }
            if (c2 !== c1) {
                hostSetElementText(container, c2);
            }
        }
        else {
            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {
                // prev children was array
                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {
                    // two arrays, cannot assume anything, do full diff
                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
                }
                else {
                    // no new children, just unmount old
                    unmountChildren(c1, parentComponent, parentSuspense, true);
                }
            }
            else {
                // prev children was text OR null
                // new children is array OR null
                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {
                    hostSetElementText(container, '');
                }
                // mount new if array
                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {
                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);
                }
            }
        }
    };
    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {
        c1 = c1 || EMPTY_ARR;
        c2 = c2 || EMPTY_ARR;
        const oldLength = c1.length;
        const newLength = c2.length;
        const commonLength = Math.min(oldLength, newLength);
        let i;
        for (i = 0; i < commonLength; i++) {
            const nextChild = (c2[i] = optimized
                ? cloneIfMounted(c2[i])
                : normalizeVNode(c2[i]));
            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);
        }
        if (oldLength > newLength) {
            // remove old
            unmountChildren(c1, parentComponent, parentSuspense, true, commonLength);
        }
        else {
            // mount new
            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);
        }
    };
    // can be all-keyed or mixed
    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {
        let i = 0;
        const l2 = c2.length;
        let e1 = c1.length - 1; // prev ending index
        let e2 = l2 - 1; // next ending index
        // 1. sync from start
        // (a b) c
        // (a b) d e
        while (i <= e1 && i <= e2) {
            const n1 = c1[i];
            const n2 = (c2[i] = optimized
                ? cloneIfMounted(c2[i])
                : normalizeVNode(c2[i]));
            if (isSameVNodeType(n1, n2)) {
                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);
            }
            else {
                break;
            }
            i++;
        }
        // 2. sync from end
        // a (b c)
        // d e (b c)
        while (i <= e1 && i <= e2) {
            const n1 = c1[e1];
            const n2 = (c2[e2] = optimized
                ? cloneIfMounted(c2[e2])
                : normalizeVNode(c2[e2]));
            if (isSameVNodeType(n1, n2)) {
                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);
            }
            else {
                break;
            }
            e1--;
            e2--;
        }
        // 3. common sequence + mount
        // (a b)
        // (a b) c
        // i = 2, e1 = 1, e2 = 2
        // (a b)
        // c (a b)
        // i = 0, e1 = -1, e2 = 0
        if (i > e1) {
            if (i <= e2) {
                const nextPos = e2 + 1;
                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;
                while (i <= e2) {
                    patch(null, (c2[i] = optimized
                        ? cloneIfMounted(c2[i])
                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);
                    i++;
                }
            }
        }
        // 4. common sequence + unmount
        // (a b) c
        // (a b)
        // i = 2, e1 = 2, e2 = 1
        // a (b c)
        // (b c)
        // i = 0, e1 = 0, e2 = -1
        else if (i > e2) {
            while (i <= e1) {
                unmount(c1[i], parentComponent, parentSuspense, true);
                i++;
            }
        }
        // 5. unknown sequence
        // [i ... e1 + 1]: a b [c d e] f g
        // [i ... e2 + 1]: a b [e d c h] f g
        // i = 2, e1 = 4, e2 = 5
        else {
            const s1 = i; // prev starting index
            const s2 = i; // next starting index
            // 5.1 build key:index map for newChildren
            const keyToNewIndexMap = new Map();
            for (i = s2; i <= e2; i++) {
                const nextChild = (c2[i] = optimized
                    ? cloneIfMounted(c2[i])
                    : normalizeVNode(c2[i]));
                if (nextChild.key != null) {
                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {
                        warn(\`Duplicate keys found during update:\`, JSON.stringify(nextChild.key), \`Make sure keys are unique.\`);
                    }
                    keyToNewIndexMap.set(nextChild.key, i);
                }
            }
            // 5.2 loop through old children left to be patched and try to patch
            // matching nodes & remove nodes that are no longer present
            let j;
            let patched = 0;
            const toBePatched = e2 - s2 + 1;
            let moved = false;
            // used to track whether any node has moved
            let maxNewIndexSoFar = 0;
            // works as Map<newIndex, oldIndex>
            // Note that oldIndex is offset by +1
            // and oldIndex = 0 is a special value indicating the new node has
            // no corresponding old node.
            // used for determining longest stable subsequence
            const newIndexToOldIndexMap = new Array(toBePatched);
            for (i = 0; i < toBePatched; i++)
                newIndexToOldIndexMap[i] = 0;
            for (i = s1; i <= e1; i++) {
                const prevChild = c1[i];
                if (patched >= toBePatched) {
                    // all new children have been patched so this can only be a removal
                    unmount(prevChild, parentComponent, parentSuspense, true);
                    continue;
                }
                let newIndex;
                if (prevChild.key != null) {
                    newIndex = keyToNewIndexMap.get(prevChild.key);
                }
                else {
                    // key-less node, try to locate a key-less node of the same type
                    for (j = s2; j <= e2; j++) {
                        if (newIndexToOldIndexMap[j - s2] === 0 &&
                            isSameVNodeType(prevChild, c2[j])) {
                            newIndex = j;
                            break;
                        }
                    }
                }
                if (newIndex === undefined) {
                    unmount(prevChild, parentComponent, parentSuspense, true);
                }
                else {
                    newIndexToOldIndexMap[newIndex - s2] = i + 1;
                    if (newIndex >= maxNewIndexSoFar) {
                        maxNewIndexSoFar = newIndex;
                    }
                    else {
                        moved = true;
                    }
                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);
                    patched++;
                }
            }
            // 5.3 move and mount
            // generate longest stable subsequence only when nodes have moved
            const increasingNewIndexSequence = moved
                ? getSequence(newIndexToOldIndexMap)
                : EMPTY_ARR;
            j = increasingNewIndexSequence.length - 1;
            // looping backwards so that we can use last patched node as anchor
            for (i = toBePatched - 1; i >= 0; i--) {
                const nextIndex = s2 + i;
                const nextChild = c2[nextIndex];
                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;
                if (newIndexToOldIndexMap[i] === 0) {
                    // mount new
                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);
                }
                else if (moved) {
                    // move if:
                    // There is no stable subsequence (e.g. a reverse)
                    // OR current node is not among the stable sequence
                    if (j < 0 || i !== increasingNewIndexSequence[j]) {
                        move(nextChild, container, anchor, 2 /* REORDER */);
                    }
                    else {
                        j--;
                    }
                }
            }
        }
    };
    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {
        const { el, type, transition, children, shapeFlag } = vnode;
        if (shapeFlag & 6 /* COMPONENT */) {
            move(vnode.component.subTree, container, anchor, moveType);
            return;
        }
        if ( shapeFlag & 128 /* SUSPENSE */) {
            vnode.suspense.move(container, anchor, moveType);
            return;
        }
        if (shapeFlag & 64 /* TELEPORT */) {
            type.move(vnode, container, anchor, internals);
            return;
        }
        if (type === Fragment) {
            hostInsert(el, container, anchor);
            for (let i = 0; i < children.length; i++) {
                move(children[i], container, anchor, moveType);
            }
            hostInsert(vnode.anchor, container, anchor);
            return;
        }
        // static node move can only happen when force updating HMR
        if ((process.env.NODE_ENV !== 'production') && type === Static) {
            moveStaticNode(vnode, container, anchor);
            return;
        }
        // single nodes
        const needTransition = moveType !== 2 /* REORDER */ &&
            shapeFlag & 1 /* ELEMENT */ &&
            transition;
        if (needTransition) {
            if (moveType === 0 /* ENTER */) {
                transition.beforeEnter(el);
                hostInsert(el, container, anchor);
                queuePostRenderEffect(() => transition.enter(el), parentSuspense);
            }
            else {
                const { leave, delayLeave, afterLeave } = transition;
                const remove = () => hostInsert(el, container, anchor);
                const performLeave = () => {
                    leave(el, () => {
                        remove();
                        afterLeave && afterLeave();
                    });
                };
                if (delayLeave) {
                    delayLeave(el, remove, performLeave);
                }
                else {
                    performLeave();
                }
            }
        }
        else {
            hostInsert(el, container, anchor);
        }
    };
    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false) => {
        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;
        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;
        const shouldKeepAlive = shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;
        let vnodeHook;
        // unset ref
        if (ref != null && parentComponent) {
            setRef(ref, null, parentComponent, null);
        }
        if ((vnodeHook = props && props.onVnodeBeforeUnmount) && !shouldKeepAlive) {
            invokeVNodeHook(vnodeHook, parentComponent, vnode);
        }
        if (shapeFlag & 6 /* COMPONENT */) {
            if (shouldKeepAlive) {
                parentComponent.ctx.deactivate(vnode);
            }
            else {
                unmountComponent(vnode.component, parentSuspense, doRemove);
            }
        }
        else {
            if ( shapeFlag & 128 /* SUSPENSE */) {
                vnode.suspense.unmount(parentSuspense, doRemove);
                return;
            }
            if (shouldInvokeDirs) {
                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');
            }
            if (dynamicChildren &&
                // #1153: fast path should not be taken for non-stable (v-for) fragments
                (type !== Fragment ||
                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {
                // fast path for block nodes: only need to unmount dynamic children.
                unmountChildren(dynamicChildren, parentComponent, parentSuspense);
            }
            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {
                unmountChildren(children, parentComponent, parentSuspense);
            }
            // an unmounted teleport should always remove its children
            if (shapeFlag & 64 /* TELEPORT */) {
                vnode.type.remove(vnode, internals);
            }
            if (doRemove) {
                remove(vnode);
            }
        }
        if (((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) &&
            !shouldKeepAlive) {
            queuePostRenderEffect(() => {
                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);
                shouldInvokeDirs &&
                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');
            }, parentSuspense);
        }
    };
    const remove = vnode => {
        const { type, el, anchor, transition } = vnode;
        if (type === Fragment) {
            removeFragment(el, anchor);
            return;
        }
        if ((process.env.NODE_ENV !== 'production') && type === Static) {
            removeStaticNode(vnode);
            return;
        }
        const performRemove = () => {
            hostRemove(el);
            if (transition && !transition.persisted && transition.afterLeave) {
                transition.afterLeave();
            }
        };
        if (vnode.shapeFlag & 1 /* ELEMENT */ &&
            transition &&
            !transition.persisted) {
            const { leave, delayLeave } = transition;
            const performLeave = () => leave(el, performRemove);
            if (delayLeave) {
                delayLeave(vnode.el, performRemove, performLeave);
            }
            else {
                performLeave();
            }
        }
        else {
            performRemove();
        }
    };
    const removeFragment = (cur, end) => {
        // For fragments, directly remove all contained DOM nodes.
        // (fragment child nodes cannot have transition)
        let next;
        while (cur !== end) {
            next = hostNextSibling(cur);
            hostRemove(cur);
            cur = next;
        }
        hostRemove(end);
    };
    const unmountComponent = (instance, parentSuspense, doRemove) => {
        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {
            unregisterHMR(instance);
        }
        const { bum, effects, update, subTree, um, da, isDeactivated } = instance;
        // beforeUnmount hook
        if (bum) {
            invokeArrayFns(bum);
        }
        if (effects) {
            for (let i = 0; i < effects.length; i++) {
                stop(effects[i]);
            }
        }
        // update may be null if a component is unmounted before its async
        // setup has resolved.
        if (update) {
            stop(update);
            unmount(subTree, instance, parentSuspense, doRemove);
        }
        // unmounted hook
        if (um) {
            queuePostRenderEffect(um, parentSuspense);
        }
        // deactivated hook
        if (da &&
            !isDeactivated &&
            instance.vnode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {
            queuePostRenderEffect(da, parentSuspense);
        }
        queuePostRenderEffect(() => {
            instance.isUnmounted = true;
        }, parentSuspense);
        // A component with async dep inside a pending suspense is unmounted before
        // its async dep resolves. This should remove the dep from the suspense, and
        // cause the suspense to resolve immediately if that was the last dep.
        if (
            parentSuspense &&
            !parentSuspense.isResolved &&
            !parentSuspense.isUnmounted &&
            instance.asyncDep &&
            !instance.asyncResolved) {
            parentSuspense.deps--;
            if (parentSuspense.deps === 0) {
                parentSuspense.resolve();
            }
        }
    };
    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, start = 0) => {
        for (let i = start; i < children.length; i++) {
            unmount(children[i], parentComponent, parentSuspense, doRemove);
        }
    };
    const getNextHostNode = vnode => {
        if (vnode.shapeFlag & 6 /* COMPONENT */) {
            return getNextHostNode(vnode.component.subTree);
        }
        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {
            return vnode.suspense.next();
        }
        return hostNextSibling((vnode.anchor || vnode.el));
    };
    /**
     * #1156
     * When a component is HMR-enabled, we need to make sure that all static nodes
     * inside a block also inherit the DOM element from the previous tree so that
     * HMR updates (which are full updates) can retrieve the element for patching.
     *
     * Dev only.
     */
    const traverseStaticChildren = (n1, n2) => {
        const ch1 = n1.children;
        const ch2 = n2.children;
        if (isArray(ch1) && isArray(ch2)) {
            for (let i = 0; i < ch1.length; i++) {
                const c1 = ch1[i];
                const c2 = ch2[i];
                if (isVNode(c1) &&
                    isVNode(c2) &&
                    c2.shapeFlag & 1 /* ELEMENT */ &&
                    !c2.dynamicChildren) {
                    if (c2.patchFlag <= 0) {
                        c2.el = c1.el;
                    }
                    traverseStaticChildren(c1, c2);
                }
            }
        }
    };
    const render = (vnode, container) => {
        if (vnode == null) {
            if (container._vnode) {
                unmount(container._vnode, null, null, true);
            }
        }
        else {
            patch(container._vnode || null, vnode, container);
        }
        flushPostFlushCbs();
        container._vnode = vnode;
    };
    const internals = {
        p: patch,
        um: unmount,
        m: move,
        r: remove,
        mt: mountComponent,
        mc: mountChildren,
        pc: patchChildren,
        pbc: patchBlockChildren,
        n: getNextHostNode,
        o: options
    };
    let hydrate;
    let hydrateNode;
    if (createHydrationFns) {
        [hydrate, hydrateNode] = createHydrationFns(internals);
    }
    return {
        render,
        hydrate,
        createApp: createAppAPI(render, hydrate)
    };
}
function invokeVNodeHook(hook, instance, vnode, prevVNode = null) {
    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [
        vnode,
        prevVNode
    ]);
}
// https://en.wikipedia.org/wiki/Longest_increasing_subsequence
function getSequence(arr) {
    const p = arr.slice();
    const result = [0];
    let i, j, u, v, c;
    const len = arr.length;
    for (i = 0; i < len; i++) {
        const arrI = arr[i];
        if (arrI !== 0) {
            j = result[result.length - 1];
            if (arr[j] < arrI) {
                p[i] = j;
                result.push(i);
                continue;
            }
            u = 0;
            v = result.length - 1;
            while (u < v) {
                c = ((u + v) / 2) | 0;
                if (arr[result[c]] < arrI) {
                    u = c + 1;
                }
                else {
                    v = c;
                }
            }
            if (arrI < arr[result[u]]) {
                if (u > 0) {
                    p[i] = result[u - 1];
                }
                result[u] = i;
            }
        }
    }
    u = result.length;
    v = result[u - 1];
    while (u-- > 0) {
        result[u] = v;
        v = p[v];
    }
    return result;
}

function useTransitionState() {
    const state = {
        isMounted: false,
        isLeaving: false,
        isUnmounting: false,
        leavingVNodes: new Map()
    };
    onMounted(() => {
        state.isMounted = true;
    });
    onBeforeUnmount(() => {
        state.isUnmounting = true;
    });
    return state;
}
const BaseTransitionImpl = {
    name: \`BaseTransition\`,
    inheritRef: true,
    props: {
        mode: String,
        appear: Boolean,
        persisted: Boolean,
        // enter
        onBeforeEnter: Function,
        onEnter: Function,
        onAfterEnter: Function,
        onEnterCancelled: Function,
        // leave
        onBeforeLeave: Function,
        onLeave: Function,
        onAfterLeave: Function,
        onLeaveCancelled: Function
    },
    setup(props, { slots }) {
        const instance = getCurrentInstance();
        const state = useTransitionState();
        return () => {
            const children = slots.default && slots.default();
            if (!children || !children.length) {
                return;
            }
            // warn multiple elements
            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {
                warn('<transition> can only be used on a single element or component. Use ' +
                    '<transition-group> for lists.');
            }
            // there's no need to track reactivity for these props so use the raw
            // props for a bit better perf
            const rawProps = toRaw(props);
            const { mode } = rawProps;
            // check mode
            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {
                warn(\`invalid <transition> mode: \${mode}\`);
            }
            // at this point children has a guaranteed length of 1.
            const child = children[0];
            if (state.isLeaving) {
                return emptyPlaceholder(child);
            }
            // in the case of <transition><keep-alive/></transition>, we need to
            // compare the type of the kept-alive children.
            const innerChild = getKeepAliveChild(child);
            if (!innerChild) {
                return emptyPlaceholder(child);
            }
            const enterHooks = (innerChild.transition = resolveTransitionHooks(innerChild, rawProps, state, instance));
            const oldChild = instance.subTree;
            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);
            // handle mode
            if (oldInnerChild &&
                oldInnerChild.type !== Comment &&
                !isSameVNodeType(innerChild, oldInnerChild)) {
                const prevHooks = oldInnerChild.transition;
                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);
                // update old tree's hooks in case of dynamic transition
                setTransitionHooks(oldInnerChild, leavingHooks);
                // switching between different views
                if (mode === 'out-in') {
                    state.isLeaving = true;
                    // return placeholder node and queue update when leave finishes
                    leavingHooks.afterLeave = () => {
                        state.isLeaving = false;
                        instance.update();
                    };
                    return emptyPlaceholder(child);
                }
                else if (mode === 'in-out') {
                    delete prevHooks.delayedLeave;
                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {
                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);
                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;
                        // early removal callback
                        el._leaveCb = () => {
                            earlyRemove();
                            el._leaveCb = undefined;
                            delete enterHooks.delayedLeave;
                        };
                        enterHooks.delayedLeave = delayedLeave;
                    };
                }
            }
            return child;
        };
    }
};
// export the public type for h/tsx inference
// also to avoid inline import() in generated d.ts files
const BaseTransition = BaseTransitionImpl;
function getLeavingNodesForType(state, vnode) {
    const { leavingVNodes } = state;
    let leavingVNodesCache = leavingVNodes.get(vnode.type);
    if (!leavingVNodesCache) {
        leavingVNodesCache = Object.create(null);
        leavingVNodes.set(vnode.type, leavingVNodesCache);
    }
    return leavingVNodesCache;
}
// The transition hooks are attached to the vnode as vnode.transition
// and will be called at appropriate timing in the renderer.
function resolveTransitionHooks(vnode, { appear, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled }, state, instance) {
    const key = String(vnode.key);
    const leavingVNodesCache = getLeavingNodesForType(state, vnode);
    const callHook = (hook, args) => {
        hook &&
            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);
    };
    const hooks = {
        persisted,
        beforeEnter(el) {
            if (!appear && !state.isMounted) {
                return;
            }
            // for same element (v-show)
            if (el._leaveCb) {
                el._leaveCb(true /* cancelled */);
            }
            // for toggled element with same key (v-if)
            const leavingVNode = leavingVNodesCache[key];
            if (leavingVNode &&
                isSameVNodeType(vnode, leavingVNode) &&
                leavingVNode.el._leaveCb) {
                // force early removal (not cancelled)
                leavingVNode.el._leaveCb();
            }
            callHook(onBeforeEnter, [el]);
        },
        enter(el) {
            if (!appear && !state.isMounted) {
                return;
            }
            let called = false;
            const afterEnter = (el._enterCb = (cancelled) => {
                if (called)
                    return;
                called = true;
                if (cancelled) {
                    callHook(onEnterCancelled, [el]);
                }
                else {
                    callHook(onAfterEnter, [el]);
                }
                if (hooks.delayedLeave) {
                    hooks.delayedLeave();
                }
                el._enterCb = undefined;
            });
            if (onEnter) {
                onEnter(el, afterEnter);
            }
            else {
                afterEnter();
            }
        },
        leave(el, remove) {
            const key = String(vnode.key);
            if (el._enterCb) {
                el._enterCb(true /* cancelled */);
            }
            if (state.isUnmounting) {
                return remove();
            }
            callHook(onBeforeLeave, [el]);
            let called = false;
            const afterLeave = (el._leaveCb = (cancelled) => {
                if (called)
                    return;
                called = true;
                remove();
                if (cancelled) {
                    callHook(onLeaveCancelled, [el]);
                }
                else {
                    callHook(onAfterLeave, [el]);
                }
                el._leaveCb = undefined;
                if (leavingVNodesCache[key] === vnode) {
                    delete leavingVNodesCache[key];
                }
            });
            leavingVNodesCache[key] = vnode;
            if (onLeave) {
                onLeave(el, afterLeave);
            }
            else {
                afterLeave();
            }
        }
    };
    return hooks;
}
// the placeholder really only handles one special case: KeepAlive
// in the case of a KeepAlive in a leave phase we need to return a KeepAlive
// placeholder with empty content to avoid the KeepAlive instance from being
// unmounted.
function emptyPlaceholder(vnode) {
    if (isKeepAlive(vnode)) {
        vnode = cloneVNode(vnode);
        vnode.children = null;
        return vnode;
    }
}
function getKeepAliveChild(vnode) {
    return isKeepAlive(vnode)
        ? vnode.children
            ? vnode.children[0]
            : undefined
        : vnode;
}
function setTransitionHooks(vnode, hooks) {
    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {
        setTransitionHooks(vnode.component.subTree, hooks);
    }
    else {
        vnode.transition = hooks;
    }
}

const isKeepAlive = (vnode) => vnode.type.__isKeepAlive;
function onActivated(hook, target) {
    registerKeepAliveHook(hook, \\"a\\" /* ACTIVATED */, target);
}
function onDeactivated(hook, target) {
    registerKeepAliveHook(hook, \\"da\\" /* DEACTIVATED */, target);
}
function registerKeepAliveHook(hook, type, target = currentInstance) {
    // cache the deactivate branch check wrapper for injected hooks so the same
    // hook can be properly deduped by the scheduler. \\"__wdc\\" stands for \\"with
    // deactivation check\\".
    const wrappedHook = hook.__wdc ||
        (hook.__wdc = () => {
            // only fire the hook if the target instance is NOT in a deactivated branch.
            let current = target;
            while (current) {
                if (current.isDeactivated) {
                    return;
                }
                current = current.parent;
            }
            hook();
        });
    injectHook(type, wrappedHook, target);
    // In addition to registering it on the target instance, we walk up the parent
    // chain and register it on all ancestor instances that are keep-alive roots.
    // This avoids the need to walk the entire component tree when invoking these
    // hooks, and more importantly, avoids the need to track child components in
    // arrays.
    if (target) {
        let current = target.parent;
        while (current && current.parent) {
            if (isKeepAlive(current.parent.vnode)) {
                injectToKeepAliveRoot(wrappedHook, type, target, current);
            }
            current = current.parent;
        }
    }
}
function injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {
    injectHook(type, hook, keepAliveRoot, true /* prepend */);
    onUnmounted(() => {
        remove(keepAliveRoot[type], hook);
    }, target);
}

function injectHook(type, hook, target = currentInstance, prepend = false) {
    if (target) {
        const hooks = target[type] || (target[type] = []);
        // cache the error handling wrapper for injected hooks so the same hook
        // can be properly deduped by the scheduler. \\"__weh\\" stands for \\"with error
        // handling\\".
        const wrappedHook = hook.__weh ||
            (hook.__weh = (...args) => {
                if (target.isUnmounted) {
                    return;
                }
                // disable tracking inside all lifecycle hooks
                // since they can potentially be called inside effects.
                pauseTracking();
                // Set currentInstance during hook invocation.
                // This assumes the hook does not synchronously trigger other hooks, which
                // can only be false when the user does something really funky.
                setCurrentInstance(target);
                const res = callWithAsyncErrorHandling(hook, target, type, args);
                setCurrentInstance(null);
                resetTracking();
                return res;
            });
        if (prepend) {
            hooks.unshift(wrappedHook);
        }
        else {
            hooks.push(wrappedHook);
        }
    }
    else if ((process.env.NODE_ENV !== 'production')) {
        const apiName = \`on\${capitalize(ErrorTypeStrings[type].replace(/ hook$/, ''))}\`;
        warn(\`\${apiName} is called when there is no active component instance to be \` +
            \`associated with. \` +
            \`Lifecycle injection APIs can only be used during execution of setup().\` +
            ( \` If you are using async setup(), make sure to register lifecycle \` +
                    \`hooks before the first await statement.\`
                ));
    }
}
const createHook = (lifecycle) => (hook, target = currentInstance) => 
// post-create lifecycle registrations are noops during SSR
!isInSSRComponentSetup && injectHook(lifecycle, hook, target);
const onBeforeMount = createHook(\\"bm\\" /* BEFORE_MOUNT */);
const onMounted = createHook(\\"m\\" /* MOUNTED */);
const onBeforeUpdate = createHook(\\"bu\\" /* BEFORE_UPDATE */);
const onUpdated = createHook(\\"u\\" /* UPDATED */);
const onBeforeUnmount = createHook(\\"bum\\" /* BEFORE_UNMOUNT */);
const onUnmounted = createHook(\\"um\\" /* UNMOUNTED */);
const onRenderTriggered = createHook(\\"rtg\\" /* RENDER_TRIGGERED */);
const onRenderTracked = createHook(\\"rtc\\" /* RENDER_TRACKED */);
const onErrorCaptured = (hook, target = currentInstance) => {
    injectHook(\\"ec\\" /* ERROR_CAPTURED */, hook, target);
};

const invoke = (fn) => fn();
// initial value for watchers to trigger on undefined initial values
const INITIAL_WATCHER_VALUE = {};
// implementation
function watch(source, cb, options) {
    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {
        warn(\`\\\\\`watch(fn, options?)\\\\\` signature has been moved to a separate API. \` +
            \`Use \\\\\`watchEffect(fn, options?)\\\\\` instead. \\\\\`watch\\\\\` now only \` +
            \`supports \\\\\`watch(source, cb, options?) signature.\`);
    }
    return doWatch(source, cb, options);
}
function doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ) {
    if ((process.env.NODE_ENV !== 'production') && !cb) {
        if (immediate !== undefined) {
            warn(\`watch() \\"immediate\\" option is only respected when using the \` +
                \`watch(source, callback, options?) signature.\`);
        }
        if (deep !== undefined) {
            warn(\`watch() \\"deep\\" option is only respected when using the \` +
                \`watch(source, callback, options?) signature.\`);
        }
    }
    const warnInvalidSource = (s) => {
        warn(\`Invalid watch source: \`, s, \`A watch source can only be a getter/effect function, a ref, \` +
            \`a reactive object, or an array of these types.\`);
    };
    const instance = currentInstance;
    let getter;
    if (isArray(source)) {
        getter = () => source.map(s => {
            if (isRef(s)) {
                return s.value;
            }
            else if (isReactive(s)) {
                return traverse(s);
            }
            else if (isFunction(s)) {
                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);
            }
            else {
                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);
            }
        });
    }
    else if (isRef(source)) {
        getter = () => source.value;
    }
    else if (isReactive(source)) {
        getter = () => source;
        deep = true;
    }
    else if (isFunction(source)) {
        if (cb) {
            // getter with cb
            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);
        }
        else {
            // no cb -> simple effect
            getter = () => {
                if (instance && instance.isUnmounted) {
                    return;
                }
                if (cleanup) {
                    cleanup();
                }
                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);
            };
        }
    }
    else {
        getter = NOOP;
        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);
    }
    if (cb && deep) {
        const baseGetter = getter;
        getter = () => traverse(baseGetter());
    }
    let cleanup;
    const onInvalidate = (fn) => {
        cleanup = runner.options.onStop = () => {
            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);
        };
    };
    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;
    const applyCb = cb
        ? () => {
            if (instance && instance.isUnmounted) {
                return;
            }
            const newValue = runner();
            if (deep || hasChanged(newValue, oldValue)) {
                // cleanup before running cb again
                if (cleanup) {
                    cleanup();
                }
                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [
                    newValue,
                    // pass undefined as the old value when it's changed for the first time
                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,
                    onInvalidate
                ]);
                oldValue = newValue;
            }
        }
        : void 0;
    let scheduler;
    if (flush === 'sync') {
        scheduler = invoke;
    }
    else if (flush === 'pre') {
        scheduler = job => {
            if (!instance || instance.isMounted) {
                queueJob(job);
            }
            else {
                // with 'pre' option, the first call must happen before
                // the component is mounted so it is called synchronously.
                job();
            }
        };
    }
    else {
        scheduler = job => queuePostRenderEffect(job, instance && instance.suspense);
    }
    const runner = effect(getter, {
        lazy: true,
        // so it runs before component update effects in pre flush mode
        computed: true,
        onTrack,
        onTrigger,
        scheduler: applyCb ? () => scheduler(applyCb) : scheduler
    });
    recordInstanceBoundEffect(runner);
    // initial run
    if (applyCb) {
        if (immediate) {
            applyCb();
        }
        else {
            oldValue = runner();
        }
    }
    else {
        runner();
    }
    return () => {
        stop(runner);
        if (instance) {
            remove(instance.effects, runner);
        }
    };
}
// this.$watch
function instanceWatch(source, cb, options) {
    const publicThis = this.proxy;
    const getter = isString(source)
        ? () => publicThis[source]
        : source.bind(publicThis);
    const stop = watch(getter, cb.bind(publicThis), options);
    onBeforeUnmount(stop, this);
    return stop;
}
function traverse(value, seen = new Set()) {
    if (!isObject(value) || seen.has(value)) {
        return value;
    }
    seen.add(value);
    if (isArray(value)) {
        for (let i = 0; i < value.length; i++) {
            traverse(value[i], seen);
        }
    }
    else if (value instanceof Map) {
        value.forEach((v, key) => {
            // to register mutation dep for existing keys
            traverse(value.get(key), seen);
        });
    }
    else if (value instanceof Set) {
        value.forEach(v => {
            traverse(v, seen);
        });
    }
    else {
        for (const key in value) {
            traverse(value[key], seen);
        }
    }
    return value;
}

function provide(key, value) {
    if (!currentInstance) {
        if ((process.env.NODE_ENV !== 'production')) {
            warn(\`provide() can only be used inside setup().\`);
        }
    }
    else {
        let provides = currentInstance.provides;
        // by default an instance inherits its parent's provides object
        // but when it needs to provide values of its own, it creates its
        // own provides object using parent provides object as prototype.
        // this way in \`inject\` we can simply look up injections from direct
        // parent and let the prototype chain do the work.
        const parentProvides = currentInstance.parent && currentInstance.parent.provides;
        if (parentProvides === provides) {
            provides = currentInstance.provides = Object.create(parentProvides);
        }
        // TS doesn't allow symbol as index type
        provides[key] = value;
    }
}
function inject(key, defaultValue) {
    // fallback to \`currentRenderingInstance\` so that this can be called in
    // a functional component
    const instance = currentInstance || currentRenderingInstance;
    if (instance) {
        const provides = instance.provides;
        if (key in provides) {
            // TS doesn't allow symbol as index type
            return provides[key];
        }
        else if (arguments.length > 1) {
            return defaultValue;
        }
        else if ((process.env.NODE_ENV !== 'production')) {
            warn(\`injection \\"\${String(key)}\\" not found.\`);
        }
    }
    else if ((process.env.NODE_ENV !== 'production')) {
        warn(\`inject() can only be used inside setup() or functional components.\`);
    }
}

function createDuplicateChecker() {
    const cache = Object.create(null);
    return (type, key) => {
        if (cache[key]) {
            warn(\`\${type} property \\"\${key}\\" is already defined in \${cache[key]}.\`);
        }
        else {
            cache[key] = type;
        }
    };
}
function applyOptions(instance, options, deferredData = [], deferredWatch = [], asMixin = false) {
    const { 
    // composition
    mixins, extends: extendsOptions, 
    // state
    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, 
    // assets
    components, directives, 
    // lifecycle
    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeUnmount, unmounted, renderTracked, renderTriggered, errorCaptured } = options;
    const publicThis = instance.proxy;
    const ctx = instance.ctx;
    const globalMixins = instance.appContext.mixins;
    // call it only during dev
    // applyOptions is called non-as-mixin once per instance
    if (!asMixin) {
        callSyncHook('beforeCreate', options, publicThis, globalMixins);
        // global mixins are applied first
        applyMixins(instance, globalMixins, deferredData, deferredWatch);
    }
    // extending a base component...
    if (extendsOptions) {
        applyOptions(instance, extendsOptions, deferredData, deferredWatch, true);
    }
    // local mixins
    if (mixins) {
        applyMixins(instance, mixins, deferredData, deferredWatch);
    }
    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;
    if ((process.env.NODE_ENV !== 'production')) {
        const propsOptions = normalizePropsOptions(options)[0];
        if (propsOptions) {
            for (const key in propsOptions) {
                checkDuplicateProperties(\\"Props\\" /* PROPS */, key);
            }
        }
    }
    // options initialization order (to be consistent with Vue 2):
    // - props (already done outside of this function)
    // - inject
    // - methods
    // - data (deferred since it relies on \`this\` access)
    // - computed
    // - watch (deferred since it relies on \`this\` access)
    if (injectOptions) {
        if (isArray(injectOptions)) {
            for (let i = 0; i < injectOptions.length; i++) {
                const key = injectOptions[i];
                ctx[key] = inject(key);
                if ((process.env.NODE_ENV !== 'production')) {
                    checkDuplicateProperties(\\"Inject\\" /* INJECT */, key);
                }
            }
        }
        else {
            for (const key in injectOptions) {
                const opt = injectOptions[key];
                if (isObject(opt)) {
                    ctx[key] = inject(opt.from, opt.default);
                }
                else {
                    ctx[key] = inject(opt);
                }
                if ((process.env.NODE_ENV !== 'production')) {
                    checkDuplicateProperties(\\"Inject\\" /* INJECT */, key);
                }
            }
        }
    }
    if (methods) {
        for (const key in methods) {
            const methodHandler = methods[key];
            if (isFunction(methodHandler)) {
                ctx[key] = methodHandler.bind(publicThis);
                if ((process.env.NODE_ENV !== 'production')) {
                    checkDuplicateProperties(\\"Methods\\" /* METHODS */, key);
                }
            }
            else if ((process.env.NODE_ENV !== 'production')) {
                warn(\`Method \\"\${key}\\" has type \\"\${typeof methodHandler}\\" in the component definition. \` +
                    \`Did you reference the function correctly?\`);
            }
        }
    }
    if (dataOptions) {
        if ((process.env.NODE_ENV !== 'production') && !isFunction(dataOptions)) {
            warn(\`The data option must be a function. \` +
                \`Plain object usage is no longer supported.\`);
        }
        if (asMixin) {
            deferredData.push(dataOptions);
        }
        else {
            resolveData(instance, dataOptions, publicThis);
        }
    }
    if (!asMixin) {
        if (deferredData.length) {
            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));
        }
        if ((process.env.NODE_ENV !== 'production')) {
            const rawData = toRaw(instance.data);
            for (const key in rawData) {
                checkDuplicateProperties(\\"Data\\" /* DATA */, key);
                // expose data on ctx during dev
                if (key[0] !== '$' && key[0] !== '_') {
                    Object.defineProperty(ctx, key, {
                        configurable: true,
                        enumerable: true,
                        get: () => rawData[key],
                        set: NOOP
                    });
                }
            }
        }
    }
    if (computedOptions) {
        for (const key in computedOptions) {
            const opt = computedOptions[key];
            const get = isFunction(opt)
                ? opt.bind(publicThis, publicThis)
                : isFunction(opt.get)
                    ? opt.get.bind(publicThis, publicThis)
                    : NOOP;
            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {
                warn(\`Computed property \\"\${key}\\" has no getter.\`);
            }
            const set = !isFunction(opt) && isFunction(opt.set)
                ? opt.set.bind(publicThis)
                : (process.env.NODE_ENV !== 'production')
                    ? () => {
                        warn(\`Write operation failed: computed property \\"\${key}\\" is readonly.\`);
                    }
                    : NOOP;
            const c = computed$1({
                get,
                set
            });
            Object.defineProperty(ctx, key, {
                enumerable: true,
                configurable: true,
                get: () => c.value,
                set: v => (c.value = v)
            });
            if ((process.env.NODE_ENV !== 'production')) {
                checkDuplicateProperties(\\"Computed\\" /* COMPUTED */, key);
            }
        }
    }
    if (watchOptions) {
        deferredWatch.push(watchOptions);
    }
    if (!asMixin && deferredWatch.length) {
        deferredWatch.forEach(watchOptions => {
            for (const key in watchOptions) {
                createWatcher(watchOptions[key], ctx, publicThis, key);
            }
        });
    }
    if (provideOptions) {
        const provides = isFunction(provideOptions)
            ? provideOptions.call(publicThis)
            : provideOptions;
        for (const key in provides) {
            provide(key, provides[key]);
        }
    }
    // asset options
    if (components) {
        extend(instance.components, components);
    }
    if (directives) {
        extend(instance.directives, directives);
    }
    // lifecycle options
    if (!asMixin) {
        callSyncHook('created', options, publicThis, globalMixins);
    }
    if (beforeMount) {
        onBeforeMount(beforeMount.bind(publicThis));
    }
    if (mounted) {
        onMounted(mounted.bind(publicThis));
    }
    if (beforeUpdate) {
        onBeforeUpdate(beforeUpdate.bind(publicThis));
    }
    if (updated) {
        onUpdated(updated.bind(publicThis));
    }
    if (activated) {
        onActivated(activated.bind(publicThis));
    }
    if (deactivated) {
        onDeactivated(deactivated.bind(publicThis));
    }
    if (errorCaptured) {
        onErrorCaptured(errorCaptured.bind(publicThis));
    }
    if (renderTracked) {
        onRenderTracked(renderTracked.bind(publicThis));
    }
    if (renderTriggered) {
        onRenderTriggered(renderTriggered.bind(publicThis));
    }
    if (beforeUnmount) {
        onBeforeUnmount(beforeUnmount.bind(publicThis));
    }
    if (unmounted) {
        onUnmounted(unmounted.bind(publicThis));
    }
}
function callSyncHook(name, options, ctx, globalMixins) {
    callHookFromMixins(name, globalMixins, ctx);
    const baseHook = options.extends && options.extends[name];
    if (baseHook) {
        baseHook.call(ctx);
    }
    const mixins = options.mixins;
    if (mixins) {
        callHookFromMixins(name, mixins, ctx);
    }
    const selfHook = options[name];
    if (selfHook) {
        selfHook.call(ctx);
    }
}
function callHookFromMixins(name, mixins, ctx) {
    for (let i = 0; i < mixins.length; i++) {
        const fn = mixins[i][name];
        if (fn) {
            fn.call(ctx);
        }
    }
}
function applyMixins(instance, mixins, deferredData, deferredWatch) {
    for (let i = 0; i < mixins.length; i++) {
        applyOptions(instance, mixins[i], deferredData, deferredWatch, true);
    }
}
function resolveData(instance, dataFn, publicThis) {
    const data = dataFn.call(publicThis, publicThis);
    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {
        warn(\`data() returned a Promise - note data() cannot be async; If you \` +
            \`intend to perform data fetching before component renders, use \` +
            \`async setup() + <Suspense>.\`);
    }
    if (!isObject(data)) {
        (process.env.NODE_ENV !== 'production') && warn(\`data() should return an object.\`);
    }
    else if (instance.data === EMPTY_OBJ) {
        instance.data = reactive(data);
    }
    else {
        // existing data: this is a mixin or extends.
        extend(instance.data, data);
    }
}
function createWatcher(raw, ctx, publicThis, key) {
    const getter = () => publicThis[key];
    if (isString(raw)) {
        const handler = ctx[raw];
        if (isFunction(handler)) {
            watch(getter, handler);
        }
        else if ((process.env.NODE_ENV !== 'production')) {
            warn(\`Invalid watch handler specified by key \\"\${raw}\\"\`, handler);
        }
    }
    else if (isFunction(raw)) {
        watch(getter, raw.bind(publicThis));
    }
    else if (isObject(raw)) {
        if (isArray(raw)) {
            raw.forEach(r => createWatcher(r, ctx, publicThis, key));
        }
        else {
            watch(getter, raw.handler.bind(publicThis), raw);
        }
    }
    else if ((process.env.NODE_ENV !== 'production')) {
        warn(\`Invalid watch option: \\"\${key}\\"\`);
    }
}
function resolveMergedOptions(instance) {
    const raw = instance.type;
    const { __merged, mixins, extends: extendsOptions } = raw;
    if (__merged)
        return __merged;
    const globalMixins = instance.appContext.mixins;
    if (!globalMixins.length && !mixins && !extendsOptions)
        return raw;
    const options = {};
    globalMixins.forEach(m => mergeOptions(options, m, instance));
    extendsOptions && mergeOptions(options, extendsOptions, instance);
    mixins && mixins.forEach(m => mergeOptions(options, m, instance));
    mergeOptions(options, raw, instance);
    return (raw.__merged = options);
}
function mergeOptions(to, from, instance) {
    const strats = instance.appContext.config.optionMergeStrategies;
    for (const key in from) {
        const strat = strats && strats[key];
        if (strat) {
            to[key] = strat(to[key], from[key], instance.proxy, key);
        }
        else if (!hasOwn(to, key)) {
            to[key] = from[key];
        }
    }
}

const publicPropertiesMap = {
    $: i => i,
    $el: i => i.vnode.el,
    $data: i => i.data,
    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),
    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),
    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),
    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),
    $parent: i => i.parent && i.parent.proxy,
    $root: i => i.root && i.root.proxy,
    $emit: i => i.emit,
    $options: i => ( resolveMergedOptions(i) ),
    $forceUpdate: i => () => queueJob(i.update),
    $nextTick: () => nextTick,
    $watch:  i => instanceWatch.bind(i) 
};
const PublicInstanceProxyHandlers = {
    get({ _: instance }, key) {
        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;
        // let @vue/reatvitiy know it should never observe Vue public instances.
        if (key === \\"__v_skip\\" /* skip */) {
            return true;
        }
        // data / props / ctx
        // This getter gets called for every property access on the render context
        // during render and is a major hotspot. The most expensive part of this
        // is the multiple hasOwn() calls. It's much faster to do a simple property
        // access on a plain object, so we use an accessCache object (with null
        // prototype) to memoize what access type a key corresponds to.
        if (key[0] !== '$') {
            const n = accessCache[key];
            if (n !== undefined) {
                switch (n) {
                    case 0 /* SETUP */:
                        return setupState[key];
                    case 1 /* DATA */:
                        return data[key];
                    case 3 /* CONTEXT */:
                        return ctx[key];
                    case 2 /* PROPS */:
                        return props[key];
                    // default: just fallthrough
                }
            }
            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {
                accessCache[key] = 0 /* SETUP */;
                return setupState[key];
            }
            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {
                accessCache[key] = 1 /* DATA */;
                return data[key];
            }
            else if (
            // only cache other properties when instance has declared (thus stable)
            // props
            type.props &&
                hasOwn(normalizePropsOptions(type)[0], key)) {
                accessCache[key] = 2 /* PROPS */;
                return props[key];
            }
            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {
                accessCache[key] = 3 /* CONTEXT */;
                return ctx[key];
            }
            else {
                accessCache[key] = 4 /* OTHER */;
            }
        }
        const publicGetter = publicPropertiesMap[key];
        let cssModule, globalProperties;
        // public $xxx properties
        if (publicGetter) {
            if (key === '$attrs') {
                track(instance, \\"get\\" /* GET */, key);
                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();
            }
            return publicGetter(instance);
        }
        else if (
        // css module (injected by vue-loader)
        (cssModule = type.__cssModules) &&
            (cssModule = cssModule[key])) {
            return cssModule;
        }
        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {
            // user may set custom properties to \`this\` that start with \`$\`
            accessCache[key] = 3 /* CONTEXT */;
            return ctx[key];
        }
        else if (
        // global properties
        ((globalProperties = appContext.config.globalProperties),
            hasOwn(globalProperties, key))) {
            return globalProperties[key];
        }
        else if ((process.env.NODE_ENV !== 'production') &&
            currentRenderingInstance &&
            // #1091 avoid internal isRef/isVNode checks on component instance leading
            // to infinite warning loop
            key.indexOf('__v') !== 0) {
            if (data !== EMPTY_OBJ && key[0] === '$' && hasOwn(data, key)) {
                warn(\`Property \${JSON.stringify(key)} must be accessed via $data because it starts with a reserved \` +
                    \`character and is not proxied on the render context.\`);
            }
            else {
                warn(\`Property \${JSON.stringify(key)} was accessed during render \` +
                    \`but is not defined on instance.\`);
            }
        }
    },
    set({ _: instance }, key, value) {
        const { data, setupState, ctx } = instance;
        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {
            setupState[key] = value;
        }
        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {
            data[key] = value;
        }
        else if (key in instance.props) {
            (process.env.NODE_ENV !== 'production') &&
                warn(\`Attempting to mutate prop \\"\${key}\\". Props are readonly.\`, instance);
            return false;
        }
        if (key[0] === '$' && key.slice(1) in instance) {
            (process.env.NODE_ENV !== 'production') &&
                warn(\`Attempting to mutate public property \\"\${key}\\". \` +
                    \`Properties starting with $ are reserved and readonly.\`, instance);
            return false;
        }
        else {
            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {
                Object.defineProperty(ctx, key, {
                    enumerable: true,
                    configurable: true,
                    value
                });
            }
            else {
                ctx[key] = value;
            }
        }
        return true;
    },
    has({ _: { data, setupState, accessCache, ctx, type, appContext } }, key) {
        return (accessCache[key] !== undefined ||
            (data !== EMPTY_OBJ && hasOwn(data, key)) ||
            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||
            (type.props && hasOwn(normalizePropsOptions(type)[0], key)) ||
            hasOwn(ctx, key) ||
            hasOwn(publicPropertiesMap, key) ||
            hasOwn(appContext.config.globalProperties, key));
    }
};
if ((process.env.NODE_ENV !== 'production') && !false) {
    PublicInstanceProxyHandlers.ownKeys = (target) => {
        warn(\`Avoid app logic that relies on enumerating keys on a component instance. \` +
            \`The keys will be empty in production mode to avoid performance overhead.\`);
        return Reflect.ownKeys(target);
    };
}
const RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {
    get(target, key) {
        // fast path for unscopables when using \`with\` block
        if (key === Symbol.unscopables) {
            return;
        }
        return PublicInstanceProxyHandlers.get(target, key, target);
    },
    has(_, key) {
        const has = key[0] !== '_' && !isGloballyWhitelisted(key);
        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {
            warn(\`Property \${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.\`);
        }
        return has;
    }
});
// In dev mode, the proxy target exposes the same properties as seen on \`this\`
// for easier console inspection. In prod mode it will be an empty object so
// these properties definitions can be skipped.
function createRenderContext(instance) {
    const target = {};
    // expose internal instance for proxy handlers
    Object.defineProperty(target, \`_\`, {
        configurable: true,
        enumerable: false,
        get: () => instance
    });
    // expose public properties
    Object.keys(publicPropertiesMap).forEach(key => {
        Object.defineProperty(target, key, {
            configurable: true,
            enumerable: false,
            get: () => publicPropertiesMap[key](instance),
            // intercepted by the proxy so no need for implementation,
            // but needed to prevent set errors
            set: NOOP
        });
    });
    // expose global properties
    const { globalProperties } = instance.appContext.config;
    Object.keys(globalProperties).forEach(key => {
        Object.defineProperty(target, key, {
            configurable: true,
            enumerable: false,
            get: () => globalProperties[key],
            set: NOOP
        });
    });
    return target;
}
// dev only
function exposePropsOnRenderContext(instance) {
    const { ctx, type } = instance;
    const propsOptions = normalizePropsOptions(type)[0];
    if (propsOptions) {
        Object.keys(propsOptions).forEach(key => {
            Object.defineProperty(ctx, key, {
                enumerable: true,
                configurable: true,
                get: () => instance.props[key],
                set: NOOP
            });
        });
    }
}
// dev only
function exposeSetupStateOnRenderContext(instance) {
    const { ctx, setupState } = instance;
    Object.keys(toRaw(setupState)).forEach(key => {
        Object.defineProperty(ctx, key, {
            enumerable: true,
            configurable: true,
            get: () => setupState[key],
            set: NOOP
        });
    });
}

const emptyAppContext = createAppContext();
let uid$1 = 0;
function createComponentInstance(vnode, parent, suspense) {
    // inherit parent app context - or - if root, adopt from root vnode
    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;
    const instance = {
        uid: uid$1++,
        vnode,
        parent,
        appContext,
        type: vnode.type,
        root: null,
        next: null,
        subTree: null,
        update: null,
        render: null,
        proxy: null,
        withProxy: null,
        effects: null,
        provides: parent ? parent.provides : Object.create(appContext.provides),
        accessCache: null,
        renderCache: [],
        // state
        ctx: EMPTY_OBJ,
        data: EMPTY_OBJ,
        props: EMPTY_OBJ,
        attrs: EMPTY_OBJ,
        slots: EMPTY_OBJ,
        refs: EMPTY_OBJ,
        setupState: EMPTY_OBJ,
        setupContext: null,
        // per-instance asset storage (mutable during options resolution)
        components: Object.create(appContext.components),
        directives: Object.create(appContext.directives),
        // suspense related
        suspense,
        asyncDep: null,
        asyncResolved: false,
        // lifecycle hooks
        // not using enums here because it results in computed properties
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: null,
        emit: null // to be set immediately
    };
    if ((process.env.NODE_ENV !== 'production')) {
        instance.ctx = createRenderContext(instance);
    }
    else {
        instance.ctx = { _: instance };
    }
    instance.root = parent ? parent.root : instance;
    instance.emit = emit.bind(null, instance);
    return instance;
}
let currentInstance = null;
const getCurrentInstance = () => currentInstance || currentRenderingInstance;
const setCurrentInstance = (instance) => {
    currentInstance = instance;
};
const isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');
function validateComponentName(name, config) {
    const appIsNativeTag = config.isNativeTag || NO;
    if (isBuiltInTag(name) || appIsNativeTag(name)) {
        warn('Do not use built-in or reserved HTML elements as component id: ' + name);
    }
}
let isInSSRComponentSetup = false;
function setupComponent(instance, isSSR = false) {
    isInSSRComponentSetup = isSSR;
    const { props, children, shapeFlag } = instance.vnode;
    const isStateful = shapeFlag & 4 /* STATEFUL_COMPONENT */;
    initProps(instance, props, isStateful, isSSR);
    initSlots(instance, children);
    const setupResult = isStateful
        ? setupStatefulComponent(instance, isSSR)
        : undefined;
    isInSSRComponentSetup = false;
    return setupResult;
}
function setupStatefulComponent(instance, isSSR) {
    const Component = instance.type;
    if ((process.env.NODE_ENV !== 'production')) {
        if (Component.name) {
            validateComponentName(Component.name, instance.appContext.config);
        }
        if (Component.components) {
            const names = Object.keys(Component.components);
            for (let i = 0; i < names.length; i++) {
                validateComponentName(names[i], instance.appContext.config);
            }
        }
        if (Component.directives) {
            const names = Object.keys(Component.directives);
            for (let i = 0; i < names.length; i++) {
                validateDirectiveName(names[i]);
            }
        }
    }
    // 0. create render proxy property access cache
    instance.accessCache = {};
    // 1. create public instance / render proxy
    // also mark it raw so it's never observed
    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);
    if ((process.env.NODE_ENV !== 'production')) {
        exposePropsOnRenderContext(instance);
    }
    // 2. call setup()
    const { setup } = Component;
    if (setup) {
        const setupContext = (instance.setupContext =
            setup.length > 1 ? createSetupContext(instance) : null);
        currentInstance = instance;
        pauseTracking();
        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);
        resetTracking();
        currentInstance = null;
        if (isPromise(setupResult)) {
            if (isSSR) {
                // return the promise so server-renderer can wait on it
                return setupResult.then((resolvedResult) => {
                    handleSetupResult(instance, resolvedResult);
                });
            }
            else {
                // async setup returned Promise.
                // bail here and wait for re-entry.
                instance.asyncDep = setupResult;
            }
        }
        else {
            handleSetupResult(instance, setupResult);
        }
    }
    else {
        finishComponentSetup(instance);
    }
}
function handleSetupResult(instance, setupResult, isSSR) {
    if (isFunction(setupResult)) {
        // setup returned an inline render function
        instance.render = setupResult;
    }
    else if (isObject(setupResult)) {
        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {
            warn(\`setup() should not return VNodes directly - \` +
                \`return a render function instead.\`);
        }
        // setup returned bindings.
        // assuming a render function compiled from template is present.
        instance.setupState = reactive(setupResult);
        if ((process.env.NODE_ENV !== 'production')) {
            exposeSetupStateOnRenderContext(instance);
        }
    }
    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {
        warn(\`setup() should return an object. Received: \${setupResult === null ? 'null' : typeof setupResult}\`);
    }
    finishComponentSetup(instance);
}
function finishComponentSetup(instance, isSSR) {
    const Component = instance.type;
    // template / render function normalization
    if (!instance.render) {
        if ((process.env.NODE_ENV !== 'production') && !Component.render) {
            /* istanbul ignore if */
            if ( Component.template) {
                warn(\`Component provided template option but \` +
                    \`runtime compilation is not supported in this build of Vue.\` +
                    ( \` Configure your bundler to alias \\"vue\\" to \\"vue/dist/vue.esm-bundler.js\\".\`
                        ) /* should not happen */);
            }
            else {
                warn(\`Component is missing template or render function.\`);
            }
        }
        instance.render = (Component.render || NOOP);
        // for runtime-compiled render functions using \`with\` blocks, the render
        // proxy used needs a different \`has\` handler which is more performant and
        // also only allows a whitelist of globals to fallthrough.
        if (instance.render._rc) {
            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);
        }
    }
    // support for 2.x options
    {
        currentInstance = instance;
        applyOptions(instance, Component);
        currentInstance = null;
    }
}
const attrHandlers = {
    get: (target, key) => {
        if ((process.env.NODE_ENV !== 'production')) {
            markAttrsAccessed();
        }
        return target[key];
    },
    set: () => {
        warn(\`setupContext.attrs is readonly.\`);
        return false;
    },
    deleteProperty: () => {
        warn(\`setupContext.attrs is readonly.\`);
        return false;
    }
};
function createSetupContext(instance) {
    if ((process.env.NODE_ENV !== 'production')) {
        // We use getters in dev in case libs like test-utils overwrite instance
        // properties (overwrites should not be done in prod)
        return Object.freeze({
            get attrs() {
                return new Proxy(instance.attrs, attrHandlers);
            },
            get slots() {
                return shallowReadonly(instance.slots);
            },
            get emit() {
                return (event, ...args) => instance.emit(event, ...args);
            }
        });
    }
    else {
        return {
            attrs: instance.attrs,
            slots: instance.slots,
            emit: instance.emit
        };
    }
}
// record effects created during a component's setup() so that they can be
// stopped when the component unmounts
function recordInstanceBoundEffect(effect) {
    if (currentInstance) {
        (currentInstance.effects || (currentInstance.effects = [])).push(effect);
    }
}
const classifyRE = /(?:^|[-_])(\\\\w)/g;
const classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');
function formatComponentName(Component, isRoot = false) {
    let name = isFunction(Component)
        ? Component.displayName || Component.name
        : Component.name;
    if (!name && Component.__file) {
        const match = Component.__file.match(/([^/\\\\\\\\]+)\\\\.vue$/);
        if (match) {
            name = match[1];
        }
    }
    return name ? classify(name) : isRoot ? \`App\` : \`Anonymous\`;
}

function computed$1(getterOrOptions) {
    const c = computed(getterOrOptions);
    recordInstanceBoundEffect(c.effect);
    return c;
}

// implementation, close to no-op
function defineComponent(options) {
    return isFunction(options) ? { setup: options } : options;
}

// Actual implementation
function h(type, propsOrChildren, children) {
    if (arguments.length === 2) {
        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {
            // single vnode without props
            if (isVNode(propsOrChildren)) {
                return createVNode(type, null, [propsOrChildren]);
            }
            // props without children
            return createVNode(type, propsOrChildren);
        }
        else {
            // omit props
            return createVNode(type, null, propsOrChildren);
        }
    }
    else {
        if (isVNode(children)) {
            children = [children];
        }
        return createVNode(type, propsOrChildren, children);
    }
}

const ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? \`ssrContext\` : \`\`);
/**
 * @private
 */
const _toDisplayString = toDisplayString;
/**
 * @private
 */
const _camelize = camelize;

const svgNS = 'http://www.w3.org/2000/svg';
const doc = (typeof document !== 'undefined' ? document : null);
let tempContainer;
let tempSVGContainer;
const nodeOps = {
    insert: (child, parent, anchor) => {
        if (anchor) {
            parent.insertBefore(child, anchor);
        }
        else {
            parent.appendChild(child);
        }
    },
    remove: child => {
        const parent = child.parentNode;
        if (parent) {
            parent.removeChild(child);
        }
    },
    createElement: (tag, isSVG, is) => isSVG
        ? doc.createElementNS(svgNS, tag)
        : doc.createElement(tag, is ? { is } : undefined),
    createText: text => doc.createTextNode(text),
    createComment: text => doc.createComment(text),
    setText: (node, text) => {
        node.nodeValue = text;
    },
    setElementText: (el, text) => {
        el.textContent = text;
    },
    parentNode: node => node.parentNode,
    nextSibling: node => node.nextSibling,
    querySelector: selector => doc.querySelector(selector),
    setScopeId(el, id) {
        el.setAttribute(id, '');
    },
    cloneNode(el) {
        return el.cloneNode(true);
    },
    // __UNSAFE__
    // Reason: innerHTML.
    // Static content here can only come from compiled templates.
    // As long as the user only uses trusted templates, this is safe.
    insertStaticContent(content, parent, anchor, isSVG) {
        const temp = isSVG
            ? tempSVGContainer ||
                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))
            : tempContainer || (tempContainer = doc.createElement('div'));
        temp.innerHTML = content;
        const first = temp.firstChild;
        let node = first;
        let last = node;
        while (node) {
            last = node;
            nodeOps.insert(node, parent, anchor);
            node = temp.firstChild;
        }
        return [first, last];
    }
};

// compiler should normalize class + :class bindings on the same element
// into a single binding ['staticClass', dynamic]
function patchClass(el, value, isSVG) {
    if (value == null) {
        value = '';
    }
    if (isSVG) {
        el.setAttribute('class', value);
    }
    else {
        // directly setting className should be faster than setAttribute in theory
        // if this is an element during a transition, take the temporary transition
        // classes into account.
        const transitionClasses = el._vtc;
        if (transitionClasses) {
            value = (value
                ? [value, ...transitionClasses]
                : [...transitionClasses]).join(' ');
        }
        el.className = value;
    }
}

function patchStyle(el, prev, next) {
    const style = el.style;
    if (!next) {
        el.removeAttribute('style');
    }
    else if (isString(next)) {
        if (prev !== next) {
            style.cssText = next;
        }
    }
    else {
        for (const key in next) {
            setStyle(style, key, next[key]);
        }
        if (prev && !isString(prev)) {
            for (const key in prev) {
                if (!next[key]) {
                    setStyle(style, key, '');
                }
            }
        }
    }
}
const importantRE = /\\\\s*!important$/;
function setStyle(style, name, val) {
    if (name.startsWith('--')) {
        // custom property definition
        style.setProperty(name, val);
    }
    else {
        const prefixed = autoPrefix(style, name);
        if (importantRE.test(val)) {
            // !important
            style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');
        }
        else {
            style[prefixed] = val;
        }
    }
}
const prefixes = ['Webkit', 'Moz', 'ms'];
const prefixCache = {};
function autoPrefix(style, rawName) {
    const cached = prefixCache[rawName];
    if (cached) {
        return cached;
    }
    let name = _camelize(rawName);
    if (name !== 'filter' && name in style) {
        return (prefixCache[rawName] = name);
    }
    name = capitalize(name);
    for (let i = 0; i < prefixes.length; i++) {
        const prefixed = prefixes[i] + name;
        if (prefixed in style) {
            return (prefixCache[rawName] = prefixed);
        }
    }
    return rawName;
}

const xlinkNS = 'http://www.w3.org/1999/xlink';
function patchAttr(el, key, value, isSVG) {
    if (isSVG && key.startsWith('xlink:')) {
        if (value == null) {
            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));
        }
        else {
            el.setAttributeNS(xlinkNS, key, value);
        }
    }
    else {
        // note we are only checking boolean attributes that don't have a
        // corresponding dom prop of the same name here.
        const isBoolean = isSpecialBooleanAttr(key);
        if (value == null || (isBoolean && value === false)) {
            el.removeAttribute(key);
        }
        else {
            el.setAttribute(key, isBoolean ? '' : value);
        }
    }
}

// __UNSAFE__
// functions. The user is reponsible for using them with only trusted content.
function patchDOMProp(el, key, value, 
// the following args are passed only due to potential innerHTML/textContent
// overriding existing VNodes, in which case the old tree must be properly
// unmounted.
prevChildren, parentComponent, parentSuspense, unmountChildren) {
    if (key === 'innerHTML' || key === 'textContent') {
        if (prevChildren) {
            unmountChildren(prevChildren, parentComponent, parentSuspense);
        }
        el[key] = value == null ? '' : value;
        return;
    }
    if (key === 'value' && el.tagName !== 'PROGRESS') {
        // store value as _value as well since
        // non-string values will be stringified.
        el._value = value;
        el.value = value == null ? '' : value;
        return;
    }
    if (value === '' && typeof el[key] === 'boolean') {
        // e.g. <select multiple> compiles to { multiple: '' }
        el[key] = true;
    }
    else if (value == null && typeof el[key] === 'string') {
        // e.g. <div :id=\\"null\\">
        el[key] = '';
    }
    else {
        // some properties perform value validation and throw
        try {
            el[key] = value;
        }
        catch (e) {
            if ((process.env.NODE_ENV !== 'production')) {
                warn(\`Failed setting prop \\"\${key}\\" on <\${el.tagName.toLowerCase()}>: \` +
                    \`value \${value} is invalid.\`, e);
            }
        }
    }
}

// Async edge case fix requires storing an event listener's attach timestamp.
let _getNow = Date.now;
// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
if (typeof document !== 'undefined' &&
    _getNow() > document.createEvent('Event').timeStamp) {
    // if the low-res timestamp which is bigger than the event timestamp
    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listeners as well.
    _getNow = () => performance.now();
}
// To avoid the overhead of repeatedly calling performance.now(), we cache
// and use the same timestamp for all event listeners attached in the same tick.
let cachedNow = 0;
const p$1 = Promise.resolve();
const reset = () => {
    cachedNow = 0;
};
const getNow = () => cachedNow || (p$1.then(reset), (cachedNow = _getNow()));
function addEventListener(el, event, handler, options) {
    el.addEventListener(event, handler, options);
}
function removeEventListener(el, event, handler, options) {
    el.removeEventListener(event, handler, options);
}
function patchEvent(el, rawName, prevValue, nextValue, instance = null) {
    const name = rawName.slice(2).toLowerCase();
    const prevOptions = prevValue && 'options' in prevValue && prevValue.options;
    const nextOptions = nextValue && 'options' in nextValue && nextValue.options;
    const invoker = prevValue && prevValue.invoker;
    const value = nextValue && 'handler' in nextValue ? nextValue.handler : nextValue;
    if (prevOptions || nextOptions) {
        const prev = prevOptions || EMPTY_OBJ;
        const next = nextOptions || EMPTY_OBJ;
        if (prev.capture !== next.capture ||
            prev.passive !== next.passive ||
            prev.once !== next.once) {
            if (invoker) {
                removeEventListener(el, name, invoker, prev);
            }
            if (nextValue && value) {
                const invoker = createInvoker(value, instance);
                nextValue.invoker = invoker;
                addEventListener(el, name, invoker, next);
            }
            return;
        }
    }
    if (nextValue && value) {
        if (invoker) {
            prevValue.invoker = null;
            invoker.value = value;
            nextValue.invoker = invoker;
            invoker.lastUpdated = getNow();
        }
        else {
            addEventListener(el, name, createInvoker(value, instance), nextOptions || void 0);
        }
    }
    else if (invoker) {
        removeEventListener(el, name, invoker, prevOptions || void 0);
    }
}
function createInvoker(initialValue, instance) {
    const invoker = (e) => {
        // async edge case #6566: inner click event triggers patch, event handler
        // attached to outer element during patch, and triggered again. This
        // happens because browsers fire microtask ticks between event propagation.
        // the solution is simple: we save the timestamp when a handler is attached,
        // and the handler would only fire if the event passed to it was fired
        // AFTER it was attached.
        const timeStamp = e.timeStamp || _getNow();
        if (timeStamp >= invoker.lastUpdated - 1) {
            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);
        }
    };
    invoker.value = initialValue;
    initialValue.invoker = invoker;
    invoker.lastUpdated = getNow();
    return invoker;
}
function patchStopImmediatePropagation(e, value) {
    if (isArray(value)) {
        const originalStop = e.stopImmediatePropagation;
        e.stopImmediatePropagation = () => {
            originalStop.call(e);
            e._stopped = true;
        };
        return value.map(fn => (e) => !e._stopped && fn(e));
    }
    else {
        return value;
    }
}

const nativeOnRE = /^on[a-z]/;
const patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {
    switch (key) {
        // special
        case 'class':
            patchClass(el, nextValue, isSVG);
            break;
        case 'style':
            patchStyle(el, prevValue, nextValue);
            break;
        default:
            if (isOn(key)) {
                // ignore v-model listeners
                if (!key.startsWith('onUpdate:')) {
                    patchEvent(el, key, prevValue, nextValue, parentComponent);
                }
            }
            else if (
            // spellcheck and draggable are numerated attrs, however their
            // corresponding DOM properties are actually booleans - this leads to
            // setting it with a string \\"false\\" value leading it to be coerced to
            // \`true\`, so we need to always treat them as attributes.
            // Note that \`contentEditable\` doesn't have this problem: its DOM
            // property is also enumerated string values.
            key !== 'spellcheck' &&
                key !== 'draggable' &&
                (isSVG
                    ? // most keys must be set as attribute on svg elements to work
                        // ...except innerHTML
                        key === 'innerHTML' ||
                            // or native onclick with function values
                            (key in el && nativeOnRE.test(key) && isFunction(nextValue))
                    : // for normal html elements, set as a property if it exists
                        key in el &&
                            // except native onclick with string values
                            !(nativeOnRE.test(key) && isString(nextValue)))) {
                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);
            }
            else {
                // special case for <input v-model type=\\"checkbox\\"> with
                // :true-value & :false-value
                // store value as dom properties since non-string values will be
                // stringified.
                if (key === 'true-value') {
                    el._trueValue = nextValue;
                }
                else if (key === 'false-value') {
                    el._falseValue = nextValue;
                }
                patchAttr(el, key, nextValue, isSVG);
            }
            break;
    }
};

const TRANSITION = 'transition';
const ANIMATION = 'animation';
// DOM Transition is a higher-order-component based on the platform-agnostic
// base Transition component, with DOM-specific logic.
const Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);
Transition.inheritRef = true;
const DOMTransitionPropsValidators = {
    name: String,
    type: String,
    css: {
        type: Boolean,
        default: true
    },
    duration: [String, Number, Object],
    enterFromClass: String,
    enterActiveClass: String,
    enterToClass: String,
    appearFromClass: String,
    appearActiveClass: String,
    appearToClass: String,
    leaveFromClass: String,
    leaveActiveClass: String,
    leaveToClass: String
};
const TransitionPropsValidators = (Transition.props = extend({}, BaseTransition.props, DOMTransitionPropsValidators));
function resolveTransitionProps(rawProps) {
    let { name = 'v', type, css = true, duration, enterFromClass = \`\${name}-enter-from\`, enterActiveClass = \`\${name}-enter-active\`, enterToClass = \`\${name}-enter-to\`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = \`\${name}-leave-from\`, leaveActiveClass = \`\${name}-leave-active\`, leaveToClass = \`\${name}-leave-to\` } = rawProps;
    const baseProps = {};
    for (const key in rawProps) {
        if (!(key in DOMTransitionPropsValidators)) {
            baseProps[key] = rawProps[key];
        }
    }
    if (!css) {
        return baseProps;
    }
    const originEnterClass = [enterFromClass, enterActiveClass, enterToClass];
    const instance = getCurrentInstance();
    const durations = normalizeDuration(duration);
    const enterDuration = durations && durations[0];
    const leaveDuration = durations && durations[1];
    const { appear, onBeforeEnter, onEnter, onLeave } = baseProps;
    // is appearing
    if (appear && !instance.isMounted) {
        enterFromClass = appearFromClass;
        enterActiveClass = appearActiveClass;
        enterToClass = appearToClass;
    }
    const finishEnter = (el, done) => {
        removeTransitionClass(el, enterToClass);
        removeTransitionClass(el, enterActiveClass);
        done && done();
        // reset enter class
        if (appear) {
            [enterFromClass, enterActiveClass, enterToClass] = originEnterClass;
        }
    };
    const finishLeave = (el, done) => {
        removeTransitionClass(el, leaveToClass);
        removeTransitionClass(el, leaveActiveClass);
        done && done();
    };
    // only needed for user hooks called in nextFrame
    // sync errors are already handled by BaseTransition
    function callHookWithErrorHandling(hook, args) {
        callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);
    }
    return extend(baseProps, {
        onBeforeEnter(el) {
            onBeforeEnter && onBeforeEnter(el);
            addTransitionClass(el, enterActiveClass);
            addTransitionClass(el, enterFromClass);
        },
        onEnter(el, done) {
            nextFrame(() => {
                const resolve = () => finishEnter(el, done);
                onEnter && callHookWithErrorHandling(onEnter, [el, resolve]);
                removeTransitionClass(el, enterFromClass);
                addTransitionClass(el, enterToClass);
                if (!(onEnter && onEnter.length > 1)) {
                    if (enterDuration) {
                        setTimeout(resolve, enterDuration);
                    }
                    else {
                        whenTransitionEnds(el, type, resolve);
                    }
                }
            });
        },
        onLeave(el, done) {
            addTransitionClass(el, leaveActiveClass);
            addTransitionClass(el, leaveFromClass);
            nextFrame(() => {
                const resolve = () => finishLeave(el, done);
                onLeave && callHookWithErrorHandling(onLeave, [el, resolve]);
                removeTransitionClass(el, leaveFromClass);
                addTransitionClass(el, leaveToClass);
                if (!(onLeave && onLeave.length > 1)) {
                    if (leaveDuration) {
                        setTimeout(resolve, leaveDuration);
                    }
                    else {
                        whenTransitionEnds(el, type, resolve);
                    }
                }
            });
        },
        onEnterCancelled: finishEnter,
        onLeaveCancelled: finishLeave
    });
}
function normalizeDuration(duration) {
    if (duration == null) {
        return null;
    }
    else if (isObject(duration)) {
        return [NumberOf(duration.enter), NumberOf(duration.leave)];
    }
    else {
        const n = NumberOf(duration);
        return [n, n];
    }
}
function NumberOf(val) {
    const res = toNumber(val);
    if ((process.env.NODE_ENV !== 'production'))
        validateDuration(res);
    return res;
}
function validateDuration(val) {
    if (typeof val !== 'number') {
        warn(\`<transition> explicit duration is not a valid number - \` +
            \`got \${JSON.stringify(val)}.\`);
    }
    else if (isNaN(val)) {
        warn(\`<transition> explicit duration is NaN - \` +
            'the duration expression might be incorrect.');
    }
}
function addTransitionClass(el, cls) {
    cls.split(/\\\\s+/).forEach(c => c && el.classList.add(c));
    (el._vtc ||
        (el._vtc = new Set())).add(cls);
}
function removeTransitionClass(el, cls) {
    cls.split(/\\\\s+/).forEach(c => c && el.classList.remove(c));
    const { _vtc } = el;
    if (_vtc) {
        _vtc.delete(cls);
        if (!_vtc.size) {
            el._vtc = undefined;
        }
    }
}
function nextFrame(cb) {
    requestAnimationFrame(() => {
        requestAnimationFrame(cb);
    });
}
function whenTransitionEnds(el, expectedType, cb) {
    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);
    if (!type) {
        return cb();
    }
    const endEvent = type + 'end';
    let ended = 0;
    const end = () => {
        el.removeEventListener(endEvent, onEnd);
        cb();
    };
    const onEnd = (e) => {
        if (e.target === el) {
            if (++ended >= propCount) {
                end();
            }
        }
    };
    setTimeout(() => {
        if (ended < propCount) {
            end();
        }
    }, timeout + 1);
    el.addEventListener(endEvent, onEnd);
}
function getTransitionInfo(el, expectedType) {
    const styles = window.getComputedStyle(el);
    // JSDOM may return undefined for transition properties
    const getStyleProperties = (key) => (styles[key] || '').split(', ');
    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');
    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');
    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);
    const animationDelays = getStyleProperties(ANIMATION + 'Delay');
    const animationDurations = getStyleProperties(ANIMATION + 'Duration');
    const animationTimeout = getTimeout(animationDelays, animationDurations);
    let type = null;
    let timeout = 0;
    let propCount = 0;
    /* istanbul ignore if */
    if (expectedType === TRANSITION) {
        if (transitionTimeout > 0) {
            type = TRANSITION;
            timeout = transitionTimeout;
            propCount = transitionDurations.length;
        }
    }
    else if (expectedType === ANIMATION) {
        if (animationTimeout > 0) {
            type = ANIMATION;
            timeout = animationTimeout;
            propCount = animationDurations.length;
        }
    }
    else {
        timeout = Math.max(transitionTimeout, animationTimeout);
        type =
            timeout > 0
                ? transitionTimeout > animationTimeout
                    ? TRANSITION
                    : ANIMATION
                : null;
        propCount = type
            ? type === TRANSITION
                ? transitionDurations.length
                : animationDurations.length
            : 0;
    }
    const hasTransform = type === TRANSITION &&
        /\\\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);
    return {
        type,
        timeout,
        propCount,
        hasTransform
    };
}
function getTimeout(delays, durations) {
    while (delays.length < durations.length) {
        delays = delays.concat(delays);
    }
    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));
}
// Old versions of Chromium (below 61.0.3163.100) formats floating pointer
// numbers in a locale-dependent way, using a comma instead of a dot.
// If comma is not replaced with a dot, the input will be rounded down
// (i.e. acting as a floor function) causing unexpected behaviors
function toMs(s) {
    return Number(s.slice(0, -1).replace(',', '.')) * 1000;
}

function toRaw$1(observed) {
    return ((observed && toRaw$1(observed[\\"__v_raw\\" /* raw */])) || observed);
}

const positionMap = new WeakMap();
const newPositionMap = new WeakMap();
const TransitionGroupImpl = {
    props: extend({}, TransitionPropsValidators, {
        tag: String,
        moveClass: String
    }),
    setup(props, { slots }) {
        const instance = getCurrentInstance();
        const state = useTransitionState();
        let prevChildren;
        let children;
        let hasMove = null;
        onUpdated(() => {
            // children is guaranteed to exist after initial render
            if (!prevChildren.length) {
                return;
            }
            const moveClass = props.moveClass || \`\${props.name || 'v'}-move\`;
            // Check if move transition is needed. This check is cached per-instance.
            hasMove =
                hasMove === null
                    ? (hasMove = hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass))
                    : hasMove;
            if (!hasMove) {
                return;
            }
            // we divide the work into three loops to avoid mixing DOM reads and writes
            // in each iteration - which helps prevent layout thrashing.
            prevChildren.forEach(callPendingCbs);
            prevChildren.forEach(recordPosition);
            const movedChildren = prevChildren.filter(applyTranslation);
            // force reflow to put everything in position
            forceReflow();
            movedChildren.forEach(c => {
                const el = c.el;
                const style = el.style;
                addTransitionClass(el, moveClass);
                style.transform = style.webkitTransform = style.transitionDuration = '';
                const cb = (el._moveCb = (e) => {
                    if (e && e.target !== el) {
                        return;
                    }
                    if (!e || /transform$/.test(e.propertyName)) {
                        el.removeEventListener('transitionend', cb);
                        el._moveCb = null;
                        removeTransitionClass(el, moveClass);
                    }
                });
                el.addEventListener('transitionend', cb);
            });
        });
        return () => {
            const rawProps = toRaw$1(props);
            const cssTransitionProps = resolveTransitionProps(rawProps);
            const tag = rawProps.tag || Fragment;
            prevChildren = children;
            const slotChildren = slots.default ? slots.default() : [];
            children = getTransitionRawChildren(slotChildren);
            for (let i = 0; i < children.length; i++) {
                const child = children[i];
                if (child.key != null) {
                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));
                }
                else if ((process.env.NODE_ENV !== 'production')) {
                    warn(\`<TransitionGroup> children must be keyed.\`);
                }
            }
            if (prevChildren) {
                for (let i = 0; i < prevChildren.length; i++) {
                    const child = prevChildren[i];
                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));
                    positionMap.set(child, child.el.getBoundingClientRect());
                }
            }
            return createVNode(tag, null, slotChildren);
        };
    }
};
function getTransitionRawChildren(children) {
    let ret = [];
    for (let i = 0; i < children.length; i++) {
        const child = children[i];
        // handle fragment children case, e.g. v-for
        if (child.type === Fragment) {
            ret = ret.concat(getTransitionRawChildren(child.children));
        }
        // comment placeholders should be skipped, e.g. v-if
        else if (child.type !== Comment) {
            ret.push(child);
        }
    }
    return ret;
}
// remove mode props as TransitionGroup doesn't support it
delete TransitionGroupImpl.props.mode;
function callPendingCbs(c) {
    const el = c.el;
    if (el._moveCb) {
        el._moveCb();
    }
    if (el._enterCb) {
        el._enterCb();
    }
}
function recordPosition(c) {
    newPositionMap.set(c, c.el.getBoundingClientRect());
}
function applyTranslation(c) {
    const oldPos = positionMap.get(c);
    const newPos = newPositionMap.get(c);
    const dx = oldPos.left - newPos.left;
    const dy = oldPos.top - newPos.top;
    if (dx || dy) {
        const s = c.el.style;
        s.transform = s.webkitTransform = \`translate(\${dx}px,\${dy}px)\`;
        s.transitionDuration = '0s';
        return c;
    }
}
// this is put in a dedicated function to avoid the line from being treeshaken
function forceReflow() {
    return document.body.offsetHeight;
}
function hasCSSTransform(el, root, moveClass) {
    // Detect whether an element with the move class applied has
    // CSS transitions. Since the element may be inside an entering
    // transition at this very moment, we make a clone of it and remove
    // all other transition classes applied to ensure only the move class
    // is applied.
    const clone = el.cloneNode();
    if (el._vtc) {
        el._vtc.forEach(cls => {
            cls.split(/\\\\s+/).forEach(c => c && clone.classList.remove(c));
        });
    }
    moveClass.split(/\\\\s+/).forEach(c => c && clone.classList.add(c));
    clone.style.display = 'none';
    const container = (root.nodeType === 1
        ? root
        : root.parentNode);
    container.appendChild(clone);
    const { hasTransform } = getTransitionInfo(clone);
    container.removeChild(clone);
    return hasTransform;
}

const rendererOptions = extend({ patchProp }, nodeOps);
// lazy create the renderer - this makes core renderer logic tree-shakable
// in case the user only imports reactivity utilities from Vue.
let renderer;
function ensureRenderer() {
    return renderer || (renderer = createRenderer(rendererOptions));
}
const createApp = ((...args) => {
    const app = ensureRenderer().createApp(...args);
    if ((process.env.NODE_ENV !== 'production')) {
        injectNativeTagCheck(app);
    }
    const { mount } = app;
    app.mount = (containerOrSelector) => {
        const container = normalizeContainer(containerOrSelector);
        if (!container)
            return;
        const component = app._component;
        if (!isFunction(component) && !component.render && !component.template) {
            component.template = container.innerHTML;
        }
        // clear content before mounting
        container.innerHTML = '';
        const proxy = mount(container);
        container.removeAttribute('v-cloak');
        return proxy;
    };
    return app;
});
function injectNativeTagCheck(app) {
    // Inject \`isNativeTag\`
    // this is used for component name validation (dev only)
    Object.defineProperty(app.config, 'isNativeTag', {
        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),
        writable: false
    });
}
function normalizeContainer(container) {
    if (isString(container)) {
        const res = document.querySelector(container);
        if ((process.env.NODE_ENV !== 'production') && !res) {
            warn(\`Failed to mount app: mount target selector returned null.\`);
        }
        return res;
    }
    return container;
}

//
var script = defineComponent({
  props: { name: { type: String, default: \\"John\\" } },
});

const _hoisted_1 = /*#__PURE__*/createTextVNode(\\" Hello \\");
const _hoisted_2 = { class: \\"name\\" };

function render(_ctx, _cache) {
  const _component_Dummy = resolveComponent(\\"Dummy\\");

  return (openBlock(), createBlock(\\"h1\\", null, [
    _hoisted_1,
    createVNode(\\"span\\", _hoisted_2, _toDisplayString(_ctx.name), 1 /* TEXT */),
    createVNode(_component_Dummy)
  ]))
}

script.render = render;
script.__file = \\"__tests__/fixtures/simple/Test.vue\\";

createApp(script).mount(document.body);
"
`;
